(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    618115,      13114]
NotebookOptionsPosition[    580512,      12461]
NotebookOutlinePosition[    580905,      12477]
CellTagsIndexPosition[    580862,      12474]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["De ecuaciones a c\[OAcute]digo", "Title",
 CellChangeTimes->{{3.962074872395377*^9, 
  3.9620748788752832`*^9}},ExpressionUUID->"14760d54-f152-4faa-b6b8-\
e1084a22e5f0"],

Cell["Estructuras de datos y loops", "Subtitle",
 CellChangeTimes->{{3.962075124893395*^9, 3.962075130741765*^9}, {
  3.962075209074247*^9, 
  3.962075214870891*^9}},ExpressionUUID->"826ab967-09f3-4a22-a1b6-\
f76db4b06c5e"],

Cell[CellGroupData[{

Cell["Estructuras de datos", "Section",
 CellChangeTimes->{{3.9623885660719*^9, 
  3.9623885696581573`*^9}},ExpressionUUID->"1b4fc069-987f-42f4-8c82-\
9d291191d9f4"],

Cell[TextData[{
 "En ciencias de la computaci\[OAcute]n, las ",
 StyleBox["estructuras de datos",
  FontWeight->"Bold"],
 " son formas de organizar y almacenar datos para que puedan utilizarse de \
manera eficiente. Definen c\[OAcute]mo se organizan los datos en la memoria y \
c\[OAcute]mo se realizan operaciones como el acceso, la inserci\[OAcute]n, la \
eliminaci\[OAcute]n y la b\[UAcute]squeda."
}], "Text",
 CellChangeTimes->{{3.962442981769415*^9, 3.962442992324274*^9}, {
  3.962991013352001*^9, 
  3.9629910177437677`*^9}},ExpressionUUID->"9786a098-cdf9-43ba-b66d-\
663283ce6f7c"],

Cell["\<\
En esta secci\[OAcute]n estudiaremos las estructuras de datos m\[AAcute]s \
importantes en Wolfram Language.\
\>", "Text",
 CellChangeTimes->{{3.962443108599864*^9, 
  3.9624431773293943`*^9}},ExpressionUUID->"19713b78-b927-4ebf-896a-\
a7ca897cd263"],

Cell[CellGroupData[{

Cell["Listas", "Subsection",
 CellChangeTimes->{{3.962389649327077*^9, 
  3.962389650127386*^9}},ExpressionUUID->"b17ce209-c9e8-47f7-82da-\
5919a05dc82c"],

Cell["\<\
Una lista es una colecci\[OAcute]n ordenada de elementos encerrados entre \
llaves { }. Sus elementos pueden ser de cualquier tipo: n\[UAcute]meros, s\
\[IAcute]mbolos, expresiones, e incluso otras listas.\
\>", "Text",
 CellChangeTimes->{
  3.9624480377563066`*^9, {3.9624503680256023`*^9, 
   3.96245037096141*^9}},ExpressionUUID->"fd8b0704-48ed-43ec-943b-\
7f22b5a3c3af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "=", 
  RowBox[{"{", 
   RowBox[{
   "3.14", ",", "2.72", ",", "\"\<hola\>\"", ",", "\"\<mundo\>\"", ",", "x", 
    ",", "y", ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"30", ",", "40"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
    RowBox[{"Sin", "[", "a", "]"}], ",", 
    RowBox[{"Cos", "[", "b", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9623898776515417`*^9, 3.96238990869975*^9}, {
  3.962390119455377*^9, 3.962390119515486*^9}, {3.96239040851206*^9, 
  3.962390419635261*^9}, {3.962392550607579*^9, 3.962392555589229*^9}, {
  3.962448166316703*^9, 3.96244821556702*^9}, {3.962452013715455*^9, 
  3.9624520923383007`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6e798641-f580-4af3-9ef8-b2a7cd0a42ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.14`", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427408369607*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"422531e2-c504-4bc2-a018-78ef1b1d285d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estructura de listas", "Subsubsection",
 CellChangeTimes->{{3.96244831513468*^9, 3.9624483211230383`*^9}, {
  3.96246196926051*^9, 
  3.96246197210894*^9}},ExpressionUUID->"137c5f25-b354-4028-8fd1-\
366fa737f716"],

Cell["\<\
Podemos acceder a cada elemento de una lista usando la notaci\[OAcute]n de \
doble corchete \[LeftDoubleBracket] \[RightDoubleBracket]. A cada elemento le \
corresponde un \[IAcute]ndice comenzando desde el 1 hacia adelante.\
\>", "Text",
 CellChangeTimes->{{3.962450308468678*^9, 3.962450354926042*^9}, {
  3.9624510618397493`*^9, 
  3.9624510638534403`*^9}},ExpressionUUID->"cd93b25a-d452-4380-a9a5-\
2f0ad9148ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", "\[IndentingNewLine]", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], "->", 
         "True"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ItemStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Directive", "[", 
          RowBox[{"Orange", ",", "Bold", ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "&"}], "@", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "#", "]"}], "]"}], ",", "Null"}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"#", ",", "\"\<lista =\>\""}], "]"}]}], "}"}], "&"}], "@", 
    "lista"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.962450469410173*^9, 3.962450577777678*^9}, {
  3.962450609382213*^9, 3.962450667594977*^9}, {3.9624507073395357`*^9, 
  3.9624507690603437`*^9}, {3.962450827819901*^9, 3.9624508939416113`*^9}, {
  3.9624509482285748`*^9, 3.962451044763608*^9}, {3.962451156748047*^9, 
  3.9624511883815536`*^9}, {3.9624512229056396`*^9, 3.962451287358631*^9}, {
  3.962451319067518*^9, 3.96245135108701*^9}, {3.962451502827525*^9, 
  3.962451554782769*^9}, {3.962452114357774*^9, 3.962452156800685*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cce02272-4e04-4ee5-a6c4-a4dd16aea861"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"\<\"lista =\"\>", "3.14`", "2.72`", "\<\"hola\"\>", "\<\"mundo\"\>", 
     "x", "y", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "40"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "50"}], "}"}]}], "}"}], 
     RowBox[{"Sin", "[", "a", "]"}], 
     RowBox[{"Cos", "[", "b", "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{2, 2}, {2, 11}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{Automatic}}, "Rows" -> {
       Directive[
        RGBColor[1, 0.5, 0], Bold, FontSize -> 12]}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.963423365485385*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b974c95c-e390-41a0-8303-6fe4ec8051ab"]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451074744149*^9, 3.962451085727737*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"71b38073-04c0-457f-b94b-10e48c2b7b9d"],

Cell[BoxData["3.14`"], "Output",
 CellChangeTimes->{3.963427518445224*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"cf36e2a7-7531-41ee-b9d4-52913d540da2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624510890083857`*^9, 3.962451091461103*^9}, 
   3.962451431434886*^9, {3.962452185127981*^9, 3.962452185522799*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3749cd1e-2cb5-467a-9453-5845a32b075d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.9634275228802223`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"8f8dd184-cc6d-4fec-933d-e9bd62142d51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"7", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451093226429*^9, 3.9624511008736763`*^9}, {
  3.962452187434876*^9, 3.962452195699889*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b10fce80-a4b2-4837-b408-caf6acabbe2b"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.963427532641024*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"3a4766b7-7694-4c39-944f-50aa8acd065b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451437124074*^9, 3.962451446407888*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"be398401-b31e-4bc6-b9cf-842cd52b3f4b"],

Cell[BoxData[
 RowBox[{"Cos", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.9634275856088867`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"046b3985-42e9-406e-8cce-a303d4be8ea1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "8"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451913584573*^9, 3.96245193805476*^9}, {
  3.962452208732726*^9, 3.962452213072016*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"dfe34bb4-38e9-48cb-9603-958c54a6345b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.14`", ",", "\<\"hola\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427592523147*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"bb8da4f5-428a-4a6a-af2a-dd6d060e8227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451930437224*^9, 3.9624519487310534`*^9}, {
  3.963427642703101*^9, 3.963427642919854*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0261a5cd-583a-4574-9337-260a6a3e1e0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.963427616079624*^9, 3.96342764342249*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"81b1e1a8-50d0-4fa2-89a6-41131066f930"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "7", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624519506560163`*^9, 3.962451970495696*^9}, {
  3.962452232475956*^9, 3.9624522330535107`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"12e54a2c-10d9-4a91-b607-f2a45aa310e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.72`", ",", "\<\"mundo\"\>", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.9634276505952253`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0cd4b70a-75be-4444-aac2-4c4bdb016301"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{";;", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451961483932*^9, 3.962451979241168*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c1abd06f-52df-49aa-baa2-d1b72c00b57f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.14`", ",", "\<\"hola\"\>", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427693846315*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1a8940b3-02be-4e73-927d-b6cd4d5de0cd"]
}, Open  ]],

Cell["\<\
Al acceder a los elementos de una lista tambi\[EAcute]n podemos sustituir los \
valores que se encuentran en cada posici\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.9624514587419987`*^9, 
  3.9624514867725554`*^9}},ExpressionUUID->"61f10350-ea72-404d-bf5a-\
062d6ce4cd41"],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.962451648627166*^9, 3.96245164927465*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3ab8dc14-5554-46eb-87a3-ca71eccd45bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.14`", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427729579235*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7c799c2e-481a-47d8-97df-9d1800ceb783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "=", "\[Pi]"}]], "Input",
 CellChangeTimes->{{3.962451536453863*^9, 3.962451542167789*^9}, {
  3.9624522561836643`*^9, 3.9624522589833593`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7a967c96-3ee5-4e24-b447-bba7a54025ca"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.9634277456809263`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f9a51ae1-910b-45b5-a9fe-d98862289d44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.9624516540400677`*^9, 3.962451654739546*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e75658de-af30-4445-8054-9f9c9b22deca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.96342774977325*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c0ceec7c-5d00-4c52-ae3c-b3cc21e57e00"]
}, Open  ]],

Cell["\<\
Adem\[AAcute]s de los \[LeftDoubleBracket] \[RightDoubleBracket] tenemos otro \
tipo de operaciones espec\[IAcute]ficas de listas para seleccionar elementos\
\>", "Text",
 CellChangeTimes->{{3.962462210659894*^9, 3.962462212583872*^9}, {
  3.962462357980826*^9, 3.962462377124428*^9}, {3.962472477289006*^9, 
  3.9624724824053926`*^9}, {3.963423542335911*^9, 
  3.963423543024612*^9}},ExpressionUUID->"a300521d-a3f7-44d0-b9f6-\
437a008bf5de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462397087676*^9, 3.96246240701086*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7f85bd03-ca78-40b4-9908-2800ced98511"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.96342777490873*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"901f89fa-b488-4cd2-ab77-fa2012995303"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462408515645*^9, 3.9624624113184757`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"008b5060-d49f-43d6-8ac5-f5341ca5120f"],

Cell[BoxData[
 RowBox[{"Cos", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.963427782622958*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"09b0955e-ee6f-4cf7-a833-7dfeac8f9688"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462421101267*^9, 3.9624624234915943`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"70c77bbe-9fba-4c71-89d3-476300b30514"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427794876099*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"a959eee0-7a96-4b9c-af4c-5a488af1f69c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Most", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624624540676413`*^9, 3.9624624567261972`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"73dfcf4c-9cc1-41c5-81f6-1c0f94a0fddd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427808606126*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"27985f2e-072b-435f-9c08-7ba87c0c3d42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"lista", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624625127018023`*^9, 3.962462520067075*^9}, {
  3.9624726112293262`*^9, 3.962472611345422*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"24ee0930-dd58-4754-84de-cb3382e07ce3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.963427817368114*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"5f468a36-6db1-4d27-9111-51afbd6fc169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{"lista", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.962462486991036*^9, 3.962462511038213*^9}, {
  3.962472608819831*^9, 3.962472626366756*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"789cd46a-61eb-44c7-9062-a6f5b0ccf5bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963427841857139*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"eb11cb3b-9e78-40ca-b2a2-54065539838d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{"lista", ",", 
   RowBox[{"-", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962472630044579*^9, 3.962472638262944*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5dee73aa-7830-4452-9ef0-21fbef753f1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.963427855454822*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bb57b40d-7a95-434d-8c2a-8c3ff78d931c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.962462049386387*^9, 
  3.962462053988988*^9}},ExpressionUUID->"da6eda51-097e-4a58-bc01-\
d39effac9b8b"],

Cell["Podemos a\[NTilde]adir y quitar valores a las listas usando:", "Text",
 CellChangeTimes->{{3.9624726829959307`*^9, 3.962472725642302*^9}, {
  3.963423764341497*^9, 
  3.963423767769677*^9}},ExpressionUUID->"be7921fc-2562-48ce-b406-\
ef392174bc59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{"lista", ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626521815033`*^9, 3.962462671610588*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"083740ed-ed20-4a5c-b846-816cf3d97ece"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.96342391543215*^9, 3.9634279223429737`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ee1e973a-00c9-4f75-bb6a-2d658b1048e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prepend", "[", 
  RowBox[{"lista", ",", "\[Alpha]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626789251757`*^9, 3.962462686851735*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"978fc430-c6cf-4856-9558-c78bed66191a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9634239162890368`*^9, 3.963427933987763*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"bc0fe050-6a8c-44b6-a91f-5a5ce42e4e2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{"lista", ",", "\[Sigma]", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626948264437`*^9, 3.962462736654195*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"35109185-1f53-489c-a306-d146eeceee79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "\[Sigma]", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9634239170009527`*^9, 3.9634279849145308`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"a23c81da-0c0d-4d22-9d17-6b740944b594"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Delete", "[", 
  RowBox[{"lista", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.96246278653933*^9, 3.9624627985736637`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c25e0606-259b-4f1a-bb19-62c66e4d0beb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963423917789749*^9, 3.963427997793479*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"9088a933-bb3f-45a3-882a-59f6a201f34c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"{", 
   RowBox[{
   "4", ",", "4", ",", "5", ",", "2", ",", "3", ",", "3", ",", "1", ",", "5", 
    ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473570832666*^9, 3.9624736087671747`*^9}, {
  3.962475508729712*^9, 3.962475512070375*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bb3fa6fc-7682-4700-a629-d338b1c96b3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "2", ",", "3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.963423918596918*^9, 3.963428023433424*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ce066e34-2475-4d01-ba9c-c3be7ca57d52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.963423807776782*^9, 3.963423808456753*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5cfaa280-adc6-40fb-9298-85e3b577ca2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963423919903646*^9, 3.963428036537129*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"771def31-916c-4683-89eb-c723b3bde3ac"]
}, Open  ]],

Cell["Y sus versiones de programaci\[OAcute]n procedural.", "Text",
 CellChangeTimes->{{3.962472702284153*^9, 
  3.962472722704733*^9}},ExpressionUUID->"5120a043-d3e7-4df0-acdb-\
1c196a296e97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"lista", ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9634238412121477`*^9, 3.963423861486833*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"fe615298-7688-47e5-b712-6445909ca044"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.963424047923964*^9, 3.963428080590383*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"8ce0f330-2839-4cc7-9b23-c1e80f4e60c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.963428085816926*^9, 3.963428086653739*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"b1c0b219-71d9-4feb-90e2-53eecc013572"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.963428087471096*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f919a7ed-f285-436d-80a5-bfbc12208e2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrependTo", "[", 
  RowBox[{"lista", ",", "\[Alpha]"}], "]"}]], "Input",
 CellChangeTimes->{{3.963423864469706*^9, 3.9634238715483847`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a6cc6a3e-f295-41ee-a0df-d607c72a5683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.963424048590744*^9, 3.9634281001639338`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e706982c-0a21-4dd7-a04b-be0998b63fe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.963423873566317*^9, 3.963423874229383*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b4ccb8d2-8e19-4891-83fe-2eb50ed86491"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.9634240498887053`*^9, 3.9634281031932173`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"308f0e83-95b0-4545-848c-fa86be9a8181"]
}, Open  ]],

Cell["Adem\[AAcute]s podemos usar otras funciones sobre nuestras listas", \
"Text",
 CellChangeTimes->{{3.9624727321867847`*^9, 3.9624727336107807`*^9}, {
  3.9624731889671717`*^9, 3.962473224528908*^9}, {3.962473463684074*^9, 
  3.962473466803787*^9}},ExpressionUUID->"362c5301-e612-4e41-b0a5-\
9724d2213c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473225838334*^9, 3.96247322991234*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5eb97938-6450-48b9-8de5-8b99d8f2dec9"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.9634281292042847`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a1fafbcc-4396-4b91-8ccb-6f7cd1e11b82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"lista", "[", 
   RowBox[{"[", "8", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473234131833*^9, 3.962473239217855*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"728798a8-7fe2-433a-b845-487972bf663d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.963428143466329*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"80337261-194e-4f0d-b6b0-89d9d2476ddf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624732495136414`*^9, 3.962473253298843*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"7957571f-43e6-44d6-a1cf-81bceecce8eb"],

Cell[BoxData[
 RowBox[{"{", "12", "}"}]], "Output",
 CellChangeTimes->{3.963428159880084*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c1bccd06-432b-495f-a2bf-cc9f93094c63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"lista", "[", 
   RowBox[{"[", "9", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624732418642673`*^9, 3.9624732467328978`*^9}, {
  3.963428198897069*^9, 3.963428199139249*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5632cf6c-0fb8-4a5e-98dd-bbd380dd25a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.963428184600657*^9, 3.963428200023405*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"b6953066-fdc6-4046-a2aa-7be4b2fe468e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473420759385*^9, 3.962473427637513*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"79ab620f-b444-4f12-9136-8d09786befe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", "10", ",", "20", ",", "30", 
   ",", "40", ",", "40", ",", "50", ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.96342823606211*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"42d7534d-5c74-4f9d-87a7-be43c61216bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"lista", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962473478348695*^9, 3.962473494339679*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3fa24d6e-5172-4361-997f-abede2e1653c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]", ",", "i", ",", "j", ",", 
   "k"}], "}"}]], "Output",
 CellChangeTimes->{3.963428296170271*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d12f34e9-4f19-4919-8aac-768b58954d97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"lista", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624735097801037`*^9, 3.962473519961424*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"6a96f7eb-7bc8-4da8-803b-ac108ee26b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.72`", ",", "\<\"hola\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"mundo\"\>", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "40"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
     RowBox[{"Sin", "[", "a", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.963428328539566*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fc3ebcd5-8ac8-4d23-9740-8e7a210eaf21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.96247354735493*^9, 3.9624735521663322`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b4407917-2b04-407e-bfa0-500f416e4948"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Gamma]", ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", "y", ",", "x", 
   ",", "\<\"mundo\"\>", ",", "\<\"hola\"\>", ",", "2.72`", ",", "\[Pi]", ",",
    "\[Alpha]"}], "}"}]], "Output",
 CellChangeTimes->{3.963428353107777*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"ead6b1b6-f723-4bee-a6c0-d7b37514458f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{
   "3", ",", "12", ",", "13", ",", "7", ",", "7", ",", "11", ",", "3", ",", 
    "4", ",", "10", ",", "13", ",", "11", ",", "1", ",", "4", ",", "5", ",", 
    "15"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473553410099*^9, 3.962473559218379*^9}, 
   3.963424383346179*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"33701890-2fca-4497-85d9-81b0867fd927"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "3", ",", "4", ",", "4", ",", "5", ",", "7", ",", "7", 
   ",", "10", ",", "11", ",", "11", ",", "12", ",", "13", ",", "13", ",", 
   "15"}], "}"}]], "Output",
 CellChangeTimes->{3.9634241683626204`*^9, 3.963424388775556*^9, 
  3.963428367138454*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"29bffef1-ffcb-4d62-859a-f8de8145515b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.963428378692813*^9, 3.963428381377263*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"ab719ac6-b010-4c88-a210-c4058695edb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "\[Pi]", ",", "x", 
   ",", "y", ",", "\[Alpha]", ",", "\[Gamma]", ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963428381944021*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"5e8a8dab-e925-4c7d-bc6f-7428dea1e6a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.9624483804336977`*^9, 
  3.962448385018887*^9}},ExpressionUUID->"b6eceeb3-d1a1-4944-a868-\
2ae39ad26722"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"6", "/", "7"}], ",", "\[Pi]", ",", "\[ImaginaryI]"}], 
   "}"}]}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"6dca205f-1b97-4925-994c-75459f377cbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["6", "7"], ",", "\[Pi]", ",", "\[ImaginaryI]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.963428453147311*^9, 3.9634292768168097`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"7550e170-3d62-4883-9e43-f6892c932e31"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"6", "/", "7"}], ",", "\[Pi]", ",", "\[ImaginaryI]"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9624738261805*^9, 3.962473871814067*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"cb2a70c0-2348-4d7e-a390-29f112b55888"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista2", "=", 
  RowBox[{"lista", "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.962473876116675*^9, 3.9624738784710484`*^9}, {
  3.9634293022412357`*^9, 3.96342930395678*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"8803f42e-6992-4136-ad81-c811a723a593"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["13", "7"], ",", 
   RowBox[{"1", "+", "\[Pi]"}], ",", 
   RowBox[{"1", "+", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.963428470926104*^9, {3.963429283474553*^9, 3.963429306590254*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"b80c59e7-34d9-4122-8ca0-a97287cdf6e1"]
}, Open  ]],

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.963429285869219*^9, 3.963429286360133*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"3aed1fff-73ed-4c39-83aa-5b034d93acbe"],

Cell[BoxData[
 RowBox[{"lista2", "=."}]], "Input",
 CellChangeTimes->{{3.963429316539259*^9, 3.963429346948352*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3a5a0b50-4680-45ec-b2f8-0ceff16b9cb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista2", "=", 
  RowBox[{"Out", "[", "83", "]"}]}]], "Input",
 CellChangeTimes->{{3.963429369225834*^9, 3.963429387847911*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"7205c77d-7f78-4fa3-8a72-a523be894a6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["13", "7"], ",", 
   RowBox[{"1", "+", "\[Pi]"}], ",", 
   RowBox[{"1", "+", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.96342937036055*^9, 3.963429389756563*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"6878fee4-863b-4f9c-9a5c-47593bc20bf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "+", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.962473882848344*^9, 3.96247388972189*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e465fe67-9817-49dc-9474-b0a9dde63bbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["20", "7"], ",", 
   RowBox[{"3", "+", "\[Pi]"}], ",", 
   RowBox[{"4", "+", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9634284873711*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"b39d2bff-8882-49fb-b5d9-0ef070ca6dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "lista"}]], "Input",
 CellChangeTimes->{{3.962473935870634*^9, 3.9624739431242723`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"bd01bd27-1ed6-4389-a13a-c63f9923d610"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["12", "7"], ",", 
   RowBox[{"2", " ", "\[Pi]"}], ",", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963428502581263*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"cf3e0c8d-a1f6-43dc-a54b-4685a66dfb7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "*", 
  "lista"}]], "Input",
 CellChangeTimes->{{3.962473948972584*^9, 3.962473957156417*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"14bcb2e3-85fe-4113-b0d6-5f504efc7937"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["12", "7"], ",", 
   RowBox[{"3", " ", "\[Pi]"}], ",", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963428509812663*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"0de9d709-b216-42f0-bcc3-38d0c2311273"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "^", "2"}]], "Input",
 CellChangeTimes->{{3.96247397102416*^9, 3.962473973854784*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"adc71d77-7e9c-42dd-ab34-e5ea9a7097a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["36", "49"], ",", 
   SuperscriptBox["\[Pi]", "2"], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.963428517056135*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"e39126b9-8c0f-451d-97c6-ceb43454587e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "^", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9624739758007717`*^9, 3.962473981935664*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"76351214-d3f9-419e-baee-28141f809486"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["36", "49"], ",", 
   SuperscriptBox["\[Pi]", "3"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.963428522175558*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"fee1e053-446c-4738-a9ef-28e12a3ee482"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474001833665*^9, 3.962474005883635*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"74cd74f5-3fdc-49f5-9190-017277f0d02c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "2"], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"6", "/", "7"}]], ",", 
   SuperscriptBox["\[ExponentialE]", "\[Pi]"], ",", 
   SuperscriptBox["\[ExponentialE]", "\[ImaginaryI]"]}], "}"}]], "Output",
 CellChangeTimes->{3.963428552739129*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"fbd9fd56-40d7-433b-a491-c82218d887bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474849652823*^9, 3.962474856198121*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"73f5439b-c384-4c18-8566-ab8d95745941"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "2", "]"}], ",", 
   RowBox[{"Sin", "[", 
    FractionBox["6", "7"], "]"}], ",", "0", ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sinh", "[", "1", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9634285583491592`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"d010410f-e04b-4f0c-8c5f-dc918485c536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474859767733*^9, 3.9624748630638533`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"4924bdb9-6359-4a2d-8599-5786ae277bfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "2", "]"}], ",", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     FractionBox["7", "6"], "]"}]}], ",", 
   RowBox[{"Log", "[", "\[Pi]", "]"}], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9634285627232723`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b8f1052f-3135-4e68-84aa-4dc37648b2d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474870025083*^9, 3.962474874643124*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"9dff038f-32e6-4404-910e-7f5c7c363ba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["20", "7"], "+", "\[ImaginaryI]"}], ")"}], "+", 
  "\[Pi]"}]], "Output",
 CellChangeTimes->{3.9634285704556*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"236b304e-9d2f-479b-9ea1-03785d8aa102"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estad\[IAcute]stica", "Subsubsection",
 CellChangeTimes->{{3.962474956995186*^9, 
  3.962474967473114*^9}},ExpressionUUID->"a13b62fc-8008-4469-b725-\
a153b258e46c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "=", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "23", ",", "29", ",", "65", ",", "52", ",", "25", ",", "30", 
     ",", "10", ",", "22", ",", "31", ",", "15", ",", "17", ",", "5", ",", 
     "56", ",", "42", ",", "25", ",", "27", ",", "30", ",", "15", ",", "5", 
     ",", "12", ",", "16", ",", "9", ",", "12", ",", "13", ",", "38", ",", 
     "73", ",", "28", ",", "17", ",", "37", ",", "84", ",", "1", ",", "53", 
     ",", "44", ",", "18", ",", "32", ",", "7", ",", "7", ",", "19", ",", 
     "10", ",", "27", ",", "6", ",", "22", ",", "22", ",", "26", ",", "5", 
     ",", "21", ",", "69", ",", "24", ",", "25", ",", "24", ",", "34", ",", 
     "15", ",", "17", ",", "16", ",", "4", ",", "9", ",", "4", ",", "53", ",",
      "25", ",", "18", ",", "38", ",", "20", ",", "4", ",", "38", ",", "17", 
     ",", "44", ",", "2", ",", "12", ",", "40", ",", "28", ",", "26", ",", 
     "19", ",", "21", ",", "17", ",", "52", ",", "4", ",", "18", ",", "8", 
     ",", "1", ",", "18", ",", "45", ",", "9", ",", "4", ",", "84", ",", "1", 
     ",", "45", ",", "13", ",", "25", ",", "15", ",", "55", ",", "29", ",", 
     "51", ",", "22", ",", "1", ",", "60", ",", "9", ",", "1", ",", "15", ",",
      "25"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9624749710426598`*^9, 3.962474973540114*^9}, 
   3.9624754878720913`*^9, 3.9624755772261066`*^9, 3.962475616619752*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"56c25cc0-4644-4529-a6f4-9d4302408669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475707442684*^9, 3.962475709947209*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"06a3613d-73fa-4922-abf0-9de5b58d1b80"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.963428657783648*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"9e192180-93fb-4c31-9d5d-04cd687bfd12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475711391408*^9, 3.962475713526576*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"7b8dfa4c-df88-4723-9b22-7bf6bc4cff38"],

Cell[BoxData["84"], "Output",
 CellChangeTimes->{3.96342866090429*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a05cdd90-d5f7-43c3-8091-dda7b3a7c7ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475621283551*^9, 3.962475626579816*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"4804a1e4-4c57-4525-9030-5c9f7687b2c7"],

Cell[BoxData[
 FractionBox["2463", "100"]], "Output",
 CellChangeTimes->{3.963428663886931*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"ac5dc542-08ba-49dd-a1c0-faa2afecb0ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", "lista", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962475645644547*^9, 3.962475650635524*^9}, {
  3.962475685525263*^9, 3.962475687072806*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"80337a37-66fc-4b51-a01b-4818204e9a07"],

Cell[BoxData["24.63`"], "Output",
 CellChangeTimes->{3.9634286922210283`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"13915ec6-32bc-49ea-87c4-0d2d99a57b13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624756278431873`*^9, 3.962475637271121*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"86fce3b7-b3e2-4796-9b37-aa761faf218a"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["3459331", "11"]], "30"]], "Output",
 CellChangeTimes->{3.963428704523765*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"e7953db8-a80f-4c1e-a790-4db545d9c42b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"StandardDeviation", "[", "lista", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.963428723329236*^9, 3.963428726507637*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"16f4e112-affb-4769-b80a-2338397a78db"],

Cell[BoxData["18.692976588477656`"], "Output",
 CellChangeTimes->{3.963428729796831*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"a0aeb41c-0fe8-40e0-b3e1-c24ff66295b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StandardDeviation", "[", "lista", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.962475654970332*^9, 3.962475695025712*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"3fd16929-1fd2-4fa4-8651-16897d2dfacd"],

Cell[BoxData["18.692976588477656`"], "Output",
 CellChangeTimes->{3.963428716226123*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"d3b08f39-d413-4a5d-a434-c2ccd407081a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.962448324954927*^9, 
  3.962448331720646*^9}},ExpressionUUID->"271b7638-74d1-4d5f-8f7e-\
e9a3ab3a52ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Input",
 CellChangeTimes->{{3.9634244666990557`*^9, 3.963424470354026*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"3ce73aea-d4c2-42b0-8d5b-6643263d283b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.9634244825358763`*^9, 3.9634287696954603`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"a637f78b-cf5b-4250-96a1-a03cdd392d76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.963424473428012*^9, 3.963424478888435*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4a35182a-9891-45a7-a120-06f4cd720aac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.96342448346705*^9, 3.963428781339552*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"8ae4218e-6618-42ac-b984-edd436e68e49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Range"}]], "Input",
 CellChangeTimes->{{3.962475858208076*^9, 3.962475860147813*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"f2d0ae75-43ef-4dfa-a68f-3be904bf9b81"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/Range.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/Range.html"],
             "\"http://reference.wolfram.com/language/ref/Range.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) generates the list \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"]\\\"}]\\) generates the list \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses step \\!\\(\\*StyleBox[\\\"di\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Range.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Range.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Range\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/Range.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/Range.html"],
             "\"http://reference.wolfram.com/language/ref/Range.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) generates the list \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"]\\\"}]\\) generates the list \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses step \\!\\(\\*StyleBox[\\\"di\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Range\", \"[\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \"]\"}]\) generates the list \!\(\*RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"2\", \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]\). \n\!\(\*RowBox[{\"Range\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"]\"}]\) generates the list \!\(\*RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]\). \n\!\(\*RowBox[{\"Range\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\
\"]], \",\", StyleBox[\"di\", \"TI\"]}], \"]\"}]\) uses step \
\!\(\*StyleBox[\"di\", \"TI\"]\).", 
    "Documentation" -> <|
     "Web" -> "http://reference.wolfram.com/language/ref/Range.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Listable, Protected}, "FullName" -> "System`Range"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9634244981561403`*^9, 3.963428802485649*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"4ba3416d-2662-4100-a370-42cdfd861232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.963428825264894*^9, 3.963428828915412*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"656a7dbc-1ee6-458a-be5c-e2dca95f7829"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.963428834780615*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"54f4515c-63e6-4e7d-bdc7-ba5ac85937af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.962475788941366*^9, 3.962475789599193*^9}, {
  3.9624758641180162`*^9, 3.962475870910891*^9}, {3.96342459839382*^9, 
  3.9634246118284063`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"23e2dabc-b236-4dae-b99a-2e0272e7b020"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.96342459893027*^9, 3.9634246128657637`*^9}, 
   3.9634288475787582`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"2c55f54e-37d5-4583-b4a8-b6a309781506"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "7", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.963428855256955*^9, 3.963428864861122*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"41df8b50-9241-4c01-b8b4-c5bf0a288c3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.96342886811275*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"c25b4809-0eaf-45a3-b767-406ce70585d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.962475874529543*^9, 3.96247587581392*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"b43154ee-ced3-4b3f-af93-35a08b96074b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/Table.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/Table.html"],
             "\"http://reference.wolfram.com/language/ref/Table.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/Table.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/Table.html"],
             "\"http://reference.wolfram.com/language/ref/Table.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", 
    "Documentation" -> <|
     "Web" -> "http://reference.wolfram.com/language/ref/Table.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {HoldAll, Protected}, "FullName" -> "System`Table"|>, 
   False]]], "Output",
 CellChangeTimes->{3.963424629355597*^9, 3.963428905940826*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"453241f7-28e0-424f-8d43-915e9c4733c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"a", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.963424662139667*^9, 3.963424672633131*^9}, {
   3.9634251393817167`*^9, 3.963425141381592*^9}, 3.963425177664584*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"af18a9d5-b968-4881-b881-39db2af1bc93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", 
   ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{{3.963424670558456*^9, 3.963424673335128*^9}, 
   3.963425142081032*^9, 3.963425178194688*^9, 3.963428931247943*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"541b271d-a511-431a-8c73-0323911ce2ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9634289562042913`*^9, 3.9634289634229813`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"fa6e0277-85c9-4a62-a75b-a46456b80fee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.9634289745340347`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"4421cc66-2f0d-438a-a6ff-4567fe115fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962578607236642*^9, 3.962578640791606*^9}, 
   3.962583100808741*^9, {3.962627146329586*^9, 3.96262715597713*^9}, {
   3.9626271863058*^9, 3.962627187365744*^9}, {3.963428991426038*^9, 
   3.96342899157338*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1c74b1e9-6f9c-4848-b8a9-3aa7135161c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", "64", ",", 
   "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.9634289922178288`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"384b6c5c-f519-4173-9e73-b2f8881d7521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", "10", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9634290135625772`*^9, 3.963429014012959*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"a880efdd-7a8f-4335-8375-a75a8da914c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16", ",", "36", ",", "64", ",", "100"}], "}"}]], "Output",\

 CellChangeTimes->{3.963429016299745*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"bf79e977-fd08-4e36-8ff9-516e170205ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "6", ",", "7"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9634246969826736`*^9, 3.963424715196788*^9}, {
  3.963424753724814*^9, 3.963424783213867*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"ae43348b-4923-4baa-a255-529054a4c3ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "81", ",", "36", ",", "49"}], "}"}]], "Output",
 CellChangeTimes->{3.96342478514684*^9, 3.9634290385496397`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"084a83d4-438c-44d6-bbcd-9e271f44d272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "4", ",", "9", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.96342479932592*^9, 3.963424923178338*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"b4747448-49a1-48c1-944c-07fe6e40d3a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "8"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "8"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "8"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.96342482836693*^9, 3.963424923516664*^9}, 
   3.963429070444192*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"2e1fae9b-839d-4448-ab82-4fcd6a693a75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConstantArray"}]], "Input",
 CellChangeTimes->{{3.9624760089218483`*^9, 3.962476010494865*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"1ef3e79a-f1ed-4b55-8c39-f7a11eaac7f2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/ConstantArray.html",
              
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/ConstantArray.html"],
             
             "\"http://reference.wolfram.com/language/ref/ConstantArray.html\"\
"],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) copies of the element \
\\!\\(\\*StyleBox[\\\"c\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of nested lists containing copies of \
the element \\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ConstantArray.\
html"], None}, "http://reference.wolfram.com/language/ref/ConstantArray.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConstantArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/ConstantArray.html",
              
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/ConstantArray.html"],
             
             "\"http://reference.wolfram.com/language/ref/ConstantArray.html\"\
"],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) copies of the element \
\\!\\(\\*StyleBox[\\\"c\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of nested lists containing copies of \
the element \\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ConstantArray\", \"[\", RowBox[{StyleBox[\"c\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of the element \!\(\*StyleBox[\"c\", \
\"TI\"]\).\n\!\(\*RowBox[{\"ConstantArray\", \"[\", RowBox[{StyleBox[\"c\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) generates an \!\(\*RowBox[{SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"\[Cross]\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \"\[Cross]\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\) array of nested lists containing copies of the element \
\!\(\*StyleBox[\"c\", \"TI\"]\).", 
    "Documentation" -> <|
     "Web" -> "http://reference.wolfram.com/language/ref/ConstantArray.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`ConstantArray"|>, False]]], "Output",
 CellChangeTimes->{3.963425134582438*^9, 3.963429152096056*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"4fe68830-9413-490f-9cd1-8c3c42247aca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"a", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.963429172638247*^9, 3.963429176821464*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"0afee2b1-8b86-4659-ac35-499c11d25d73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a", 
   ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.9634291773829412`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"79ccd81b-a64a-457b-b109-eaffad5dab92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962475800680057*^9, 3.962475802028679*^9}, {
  3.962475996784772*^9, 3.962476005151198*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"929a5531-02de-4958-b250-492722f50c47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9634251356127977`*^9, 3.9634291989872427`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"19b136d1-ae64-4066-b38f-20be98481889"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CenterArray"}]], "Input",
 CellChangeTimes->{{3.9624760159763002`*^9, 3.962476019615193*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"d58dda27-0e04-4af2-9b64-d8cd71f76d15"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/CenterArray.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/CenterArray.html"],
             "\"http://reference.wolfram.com/language/ref/CenterArray.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) creates a list of length \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with the elements of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) creates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Times]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Times]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array with the array \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pad\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"pad\\\", \\\"TI\\\"]\\) instead of zero for the \
background.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) creates an array with a \
single 1 at the center and zeros elsewhere.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CenterArray.\
html"], None}, "http://reference.wolfram.com/language/ref/CenterArray.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CenterArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "http://reference.wolfram.com/language/ref/CenterArray.html",
              
              ButtonNote->
               "http://reference.wolfram.com/language/ref/CenterArray.html"],
             "\"http://reference.wolfram.com/language/ref/CenterArray.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) creates a list of length \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with the elements of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) creates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Times]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Times]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array with the array \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pad\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"pad\\\", \\\"TI\\\"]\\) instead of zero for the \
background.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) creates an array with a \
single 1 at the center and zeros elsewhere.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CenterArray\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) creates a list of length \
\!\(\*StyleBox[\"n\", \"TI\"]\) with the elements of \!\(\*StyleBox[\"a\", \
\"TI\"]\) at the center and zeros elsewhere.\n\!\(\*RowBox[{\"CenterArray\", \
\"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) creates an \
\!\(\*RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\"\[Times]\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"\[Times]\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) array with the array \!\(\
\*StyleBox[\"a\", \"TI\"]\) at the center and zeros elsewhere.\n\
\!\(\*RowBox[{\"CenterArray\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\", \
StyleBox[\"nspec\", \"TI\"], \",\", StyleBox[\"pad\", \"TI\"]}], \"]\"}]\) \
uses \!\(\*StyleBox[\"pad\", \"TI\"]\) instead of zero for the background.\n\
\!\(\*RowBox[{\"CenterArray\", \"[\", StyleBox[\"nspec\", \"TI\"], \"]\"}]\) \
creates an array with a single 1 at the center and zeros elsewhere.", 
    "Documentation" -> <|
     "Web" -> "http://reference.wolfram.com/language/ref/CenterArray.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`CenterArray"|>, False]]], "Output",
 CellChangeTimes->{3.963429202241706*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"8995dc01-5366-4771-b8f7-d6e305573d57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CenterArray", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9624758194633293`*^9, 3.962475821797545*^9}, {
  3.962476027791658*^9, 3.962476035772602*^9}, {3.963425196467743*^9, 
  3.9634252293061028`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"a104949f-e27a-4eab-91f5-b593cc28b683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "a", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.963425197317737*^9, 3.963425229798465*^9}, 
   3.9634292073699703`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"4a7d2c09-f8f0-4fb7-8761-f8a81c7a3035"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expresiones", "Subsection",
 CellChangeTimes->{{3.9623897441383743`*^9, 
  3.9623897461293497`*^9}},ExpressionUUID->"b63d019f-2824-4935-a325-\
e9f049e6a37c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c", "+", 
   RowBox[{"f", "[", "x", "]"}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"g", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9623927025021276`*^9, 3.9623927506329308`*^9}, {
  3.9623929488566923`*^9, 3.9623929503522253`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"52a0b986-2075-4498-ad42-73d2ec07fb02"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"f", "[", "x", "]"}], "+", 
  RowBox[{"d", " ", 
   RowBox[{"g", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.9634252802867613`*^9, 3.9634294371353807`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"41385988-5a75-4555-adf3-cd6697b3a3dc"]
}, Open  ]],

Cell["\<\
Las expresiones de Mathematica son en s\[IAcute] mismas una estructura de \
datos que se puede manipular en el propio lenguaje.\
\>", "Text",
 CellChangeTimes->{{3.962476748369609*^9, 3.962476776961772*^9}, {
  3.962476830352552*^9, 
  3.96247683266636*^9}},ExpressionUUID->"aab0ccc5-b653-4d70-bbc6-\
279261cc7cdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.9624767785733013`*^9, 3.962476799653798*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"dea6b5a2-2a2c-4964-a5c4-e1298ecbc73f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"c", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"b", ",", "x"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"d", ",", 
       RowBox[{"g", "[", "x", "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9634252838752737`*^9, 3.96342945273635*^9},
 CellLabel->
  "Out[89]//FullForm=",ExpressionUUID->"c11fe91a-b5dc-4b41-a108-6f67159225d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.962476571473035*^9, 3.962476576172648*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e0056eda-3939-40e7-8e01-80f14c24752e"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.8090680674665818`, 1.8090680674665818`}, {0., 
     1.2060453783110545`}, {0.6030226891555273, 1.2060453783110545`}, {
     0.30151134457776363`, 0.6030226891555273}, {0.9045340337332909, 
     0.6030226891555273}, {1.8090680674665818`, 1.2060453783110545`}, {
     1.507556722888818, 0.6030226891555273}, {2.1105794120443453`, 
     0.6030226891555273}, {1.8090680674665818`, 0.}, {2.412090756622109, 
     0.}, {2.7136021011998728`, 1.2060453783110545`}, {2.7136021011998728`, 
     0.6030226891555273}, {3.6181361349331636`, 1.2060453783110545`}, {
     3.3166247903554, 0.6030226891555273}, {3.9196474795109273`, 
     0.6030226891555273}, {3.9196474795109273`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 3}, {1, 6}, {1, 11}, {1, 13}, {3, 4}, {3, 5}, {6, 
        7}, {6, 8}, {8, 9}, {8, 10}, {11, 12}, {13, 14}, {13, 15}, {15, 
        16}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"c", "+", 
            RowBox[{"b", " ", "x"}], "+", 
            RowBox[{"a", " ", 
              SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"f", "[", "x", "]"}], "+", 
            RowBox[{"d", " ", 
              RowBox[{"g", "[", "x", "]"}]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c + $CellContext`b $CellContext`x + \
$CellContext`a $CellContext`x^2 + $CellContext`f[$CellContext`x] + \
$CellContext`d $CellContext`g[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["c",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox["c", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"b", " ", "x"}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b $CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["b",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["b", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox[
          RowBox[{"a", " ", 
            SuperscriptBox["x", "2"]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a $CellContext`x^2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Power", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          SuperscriptBox["x", "2"], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x^2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox[
          RowBox[{"f", "[", "x", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 13],
         TagBox[
          RowBox[{"d", " ", 
            RowBox[{"g", "[", "x", "]"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`d $CellContext`g[$CellContext`x]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["d",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 14],
         TagBox["d", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`d], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["g", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 15],
         TagBox[
          RowBox[{"g", "[", "x", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`g[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 16],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.8090680674665818`, 1.8090680674665818`}, {
      0., 1.2060453783110545`}, {0.6030226891555273, 1.2060453783110545`}, {
      0.30151134457776363`, 0.6030226891555273}, {0.9045340337332909, 
      0.6030226891555273}, {1.8090680674665818`, 1.2060453783110545`}, {
      1.507556722888818, 0.6030226891555273}, {2.1105794120443453`, 
      0.6030226891555273}, {1.8090680674665818`, 0.}, {2.412090756622109, 
      0.}, {2.7136021011998728`, 1.2060453783110545`}, {2.7136021011998728`, 
      0.6030226891555273}, {3.6181361349331636`, 1.2060453783110545`}, {
      3.3166247903554, 0.6030226891555273}, {3.9196474795109273`, 
      0.6030226891555273}, {3.9196474795109273`, 0.}}]& ],
   AspectRatio->NCache[2 Rational[2, 17]^Rational[1, 2], 0.6859943405700354],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[$CellContext`c + $CellContext`b $CellContext`x + $CellContext`a \
$CellContext`x^2 + $CellContext`f[$CellContext`x] + $CellContext`d \
$CellContext`g[$CellContext`x]],
  Editable->False]], "Output",
 CellChangeTimes->{3.963425294465452*^9, 3.963429477093959*^9},
 CellLabel->
  "Out[90]//TreeForm=",ExpressionUUID->"e3d7b6bc-787f-4c81-be2a-9059566acdcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476581095749*^9, 3.962476595820511*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"3f745916-7f36-48e8-bc1a-d77d848d0120"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.9634253036358833`*^9, 3.963429508726492*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"2eeea770-e4db-4b01-ae2a-841af6f4c0b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624766024449883`*^9, 3.9624766103258457`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"0d6aa4d8-7ea5-45c5-8eab-a43ae687f353"],

Cell[BoxData[
 RowBox[{"d", " ", 
  RowBox[{"g", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.963425304757115*^9, 3.96342951472156*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"05cdc735-650c-4b9d-a47d-c28b517871a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", 
   RowBox[{"5", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476614949901*^9, 3.962476618942542*^9}, {
  3.962476679072091*^9, 3.9624766795469303`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"9405ff30-f293-4097-af55-ed129a41767a"],

Cell[BoxData[
 RowBox[{"g", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.9634253058070927`*^9, 3.963425312598844*^9}, 
   3.963429526086072*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"b2570684-ce46-494f-9c28-e0ca252b8312"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", 
   RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"6ea7f6cc-3ee8-43ff-8427-80d520d9f9eb"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.963429543075708*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"71e7252a-8a6f-4e98-b0a9-2844a27a445b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "[", 
   RowBox[{"[", 
    RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}], "=", "y"}]], "Input",
 CellChangeTimes->{{3.962476699966404*^9, 3.962476724723441*^9}, {
  3.96342532079953*^9, 3.963425321949918*^9}, {3.963425357948069*^9, 
  3.9634253593344593`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"10894028-cb98-406b-8b35-8b35ac9e8d08"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.963425322504382*^9, 3.963425360030669*^9, 
  3.96342955064377*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"99481da9-63cb-4c32-8ed9-d538cbe70ee0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["expr"], "Input",
 CellChangeTimes->{{3.9634253608062067`*^9, 3.9634253626494637`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"f731bfd0-c926-4562-8b5e-481803947a6c"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"f", "[", "x", "]"}], "+", 
  RowBox[{"d", " ", 
   RowBox[{"g", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{3.963425363099411*^9, 3.96342955509507*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"5a3a34a6-2a33-4e6c-affd-bfb0e757e9de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.962477047679068*^9, 3.9624770524677477`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"d1f4627b-1604-45dd-bd52-3cf47034455e"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9634253480607643`*^9, 3.963429565419662*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"dae424a1-def2-49f4-aea9-8b4c9d17a782"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Asociaciones", "Subsection",
 CellChangeTimes->{{3.962389654645364*^9, 
  3.9623896572454*^9}},ExpressionUUID->"bbb9a47a-d69d-45bc-9c52-878cef5f7496"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<nombre\>\"", "->", "\"\<Mariana\>\""}], ",", 
    RowBox[{"\"\<apellido\>\"", "->", "\"\<P\[EAcute]rez\>\""}], ",", 
    RowBox[{"\"\<edad\>\"", "->", "24"}], ",", 
    RowBox[{"color", "->", 
     RowBox[{"RGBColor", "[", "\"\<Teal\>\"", "]"}]}], ",", 
    RowBox[{"1", "->", "7"}], ",", 
    RowBox[{"\[Pi]", "->", "6"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.9623924556976023`*^9, 3.962392526026116*^9}, {
  3.962392559565414*^9, 3.962392585954154*^9}, {3.962476393820197*^9, 
  3.962476395572707*^9}, {3.96247645226587*^9, 3.96247645997831*^9}, {
  3.9624764998100367`*^9, 3.962476504315988*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"377a2318-7669-4668-a0fc-2366ad2a1bc2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
   RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
   RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"color", "\[Rule]", 
    TemplateBox[<|
     "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
     "RGBColorSwatchTemplate"]}], ",", 
   RowBox[{"1", "\[Rule]", "7"}], ",", 
   RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.963425513071241*^9, 3.963429592695709*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"94a64f46-56a8-4972-9866-37f8209ca39f"]
}, Open  ]],

Cell["\<\
Las asociaciones son el equivalente a un diccionario en otros lenguajes y nos \
permiten acceder a valores por medio de llaves.\
\>", "Text",
 CellChangeTimes->{{3.962476856545602*^9, 
  3.962476919030567*^9}},ExpressionUUID->"1eefe163-9ce3-40bd-97ea-\
5590ab9515b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "\"\<nombre\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.962476211556118*^9, 3.962476216972476*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"e0373baa-4aba-4bf7-847c-959a4ad8a97d"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{3.963425517259781*^9, 3.963429628709236*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"45614fcc-6a88-4823-b40e-e7ff38aae5f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "\"\<nombre\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624764254741173`*^9, 3.9624764448336277`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"d8bbff31-7738-44fc-991d-27fc91c21e0c"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{3.96342552625772*^9, 3.963429644452876*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"d884b03f-3c9d-424a-8f39-bfbeba902a5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "color", "]"}]], "Input",
 CellChangeTimes->{{3.962476399049947*^9, 3.962476402984934*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"1ed2b674-70b5-4f08-8f7d-138f123a89b8"],

Cell[BoxData[
 TemplateBox[<|
  "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.963425535983486*^9, 3.96342966290034*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"2cdd7309-be48-4cd5-bb95-d5466041c862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "color", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476404265744*^9, 3.962476407706532*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"79de83d1-de7c-43de-88f9-1ce5a6fbf668"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"color\\\"}]\\) cannot be used as a \
part specification.\"", 2, 102, 1, 20807063670117217040, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.963425539942882*^9, 3.963429671455268*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[102]:=",ExpressionUUID->"3f196222-1180-4709-ac78-9091aa9696c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
    RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
    RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
    RowBox[{"color", "\[Rule]", 
     TemplateBox[<|
      "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
      "RGBColorSwatchTemplate"]}], ",", 
    RowBox[{"1", "\[Rule]", "7"}], ",", 
    RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
  "\[LeftDoubleBracket]", "color", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.963425539972969*^9, 3.963429671467025*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"ba8c57e7-f1a2-406e-841f-35493b792436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.962476466032956*^9, 3.962476467612948*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"18f18487-e1e7-4fd6-9093-16925403fbbb"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.963425544915442*^9, 3.9634296851256657`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"34fcd0c0-a421-462f-83ee-9af87c999aca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476468890739*^9, 3.9624764704920063`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"2a1ac654-aae0-4103-a890-c2f7f0fa0c09"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{3.963425546377284*^9, 3.963429695282634*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"fbb4feaa-dfab-484d-8c48-57623afe536e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.9624765128111153`*^9, 3.962476516684906*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"4a767926-11bf-4f89-96ab-e6deeb6059df"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.963425561500452*^9, 3.963429709908512*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"4a4bf151-f803-4912-86bf-7918fd0fe853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "\[Pi]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476517736953*^9, 3.962476550097103*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"2e139e93-1a9e-437b-8fa4-c0cd75a4da99"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"\[Pi]\\\"}]\\) cannot be used as a \
part specification.\"", 2, 106, 2, 20807063670117217040, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.963425562714529*^9, 3.9634297193208714`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[106]:=",ExpressionUUID->"36d24279-2877-4877-ade7-2d17d8d9209e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
    RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
    RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
    RowBox[{"color", "\[Rule]", 
     TemplateBox[<|
      "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
      "RGBColorSwatchTemplate"]}], ",", 
    RowBox[{"1", "\[Rule]", "7"}], ",", 
    RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
  "\[LeftDoubleBracket]", "\[Pi]", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.963425562748011*^9, 3.963429719336021*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"7bdc4667-7ae7-4dfa-aafe-e92d14edb715"]
}, Open  ]],

Cell["\<\
Adem\[AAcute]s podemos utilizar otras funciones especializadas para las \
asociaciones\
\>", "Text",
 CellChangeTimes->{{3.9634255829347277`*^9, 
  3.9634256144068727`*^9}},ExpressionUUID->"0bf077a4-86e8-482b-b093-\
b9a225860562"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.96247624381397*^9, 3.962476246228956*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"ff1aa6a2-0369-41ad-95da-24f9fd98dc0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"nombre\"\>", ",", "\<\"apellido\"\>", ",", "\<\"edad\"\>", ",",
    "color", ",", "1", ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{3.963429735334034*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"12436801-4aea-4a8b-bcf4-0a0d7ddcef58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.962476249037731*^9, 3.962476251462908*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"d0d3c869-1330-4fcd-bfd0-fcac5cf793e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Mariana\"\>", ",", "\<\"P\[EAcute]rez\"\>", ",", "24", ",", 
   TemplateBox[<|
    "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
    "RGBColorSwatchTemplate"], ",", "7", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.963429741659994*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"27d72829-e3a3-409d-b809-a6113b814230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeySort", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.962476302830285*^9, 3.9624763067585363`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"ded78de4-9405-4a08-b119-b5c86b444c66"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
   RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
   RowBox[{"color", "\[Rule]", 
    TemplateBox[<|
     "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
     "RGBColorSwatchTemplate"]}], ",", 
   RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.963429758413806*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"1aeed1e2-da6e-44c6-ac77-d6e8678fb3bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datasets", "Subsection",
 CellChangeTimes->{{3.9623897621674013`*^9, 
  3.962389763852783*^9}},ExpressionUUID->"859e0c02-f94e-4ef5-8db6-\
d947361aebb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "19"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "39"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "18"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "48"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "30"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<2nd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "20"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "39"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "23"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.962392953797986*^9, 3.962392956052127*^9}, {
  3.9623931208692207`*^9, 3.962393185834228*^9}, {3.962393216083148*^9, 
  3.962393286674341*^9}, {3.962393349262917*^9, 3.962393393565423*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8e40d8d2-4e5c-4295-8b85-5497404a2c7a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     10, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sex"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "survived"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{213., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{213., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.96342980008136*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"1bc672d7-0d33-4623-8443-89a49c737fe7"]
}, Open  ]],

Cell[TextData[{
 "Los ",
 StyleBox["Datasets",
  FontSlant->"Italic"],
 " son conjuntos de datos organizados especializados para el an\[AAcute]lisis \
de datos."
}], "Text",
 CellChangeTimes->{{3.9624801262563353`*^9, 
  3.962480185198071*^9}},ExpressionUUID->"d136684b-9af0-4956-94e4-\
0a35bd0daf3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "\"\<class\>\""}], "]"}], "@", "data"}]], "Input",
 CellChangeTimes->{{3.96247819656677*^9, 3.962478218539991*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"6f9642e1-9f04-43f9-bc48-ae48047233d5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "3rd", "1st", "3rd", "1st", "1st", "1st", "2nd", "3rd", "3rd", "1st"}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[1, 10, 10, 31.5], 10, 10, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[1, 10, 10, 31.5], 10, 10, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     1, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{402., {20.134033203125, 25.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{402., {20.134033203125, 25.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963429838697178*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"6d7aed80-4624-49a5-a524-7ea6e2ea8bf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#sex", "==", "\"\<male\>\""}], "&"}], "]"}], ",", 
    "\"\<age\>\""}], "]"}], "@", "data"}]], "Input",
 CellChangeTimes->{{3.962477723543528*^9, 3.9624777653589077`*^9}, {
  3.9624778579491243`*^9, 3.9624778582641907`*^9}, {3.9624779634895372`*^9, 
  3.9624781909568653`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"0f3da45b-a9ef-47e4-804a-73f129daed53"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {19, 39, 18, 48, 20, 32, 39}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 7, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 7], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{44., {101.134033203125, 106.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{44., {101.134033203125, 106.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963429875579859*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"95588609-1e81-49f9-a00b-64659dfd84e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<class\>\"", ",", "\"\<survived\>\""}], "}"}]}], "]"}], "@", 
  "data"}]], "Input",
 CellChangeTimes->{{3.962478302181552*^9, 3.962478331322975*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"cda7b6c9-251f-46c0-a59a-56be84a3f951"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>, <|
       "class" -> "2nd", "survived" -> True|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 
        1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 
        1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     10, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "survived"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{100., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{100., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963429885736966*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"483d8e66-fd9b-4589-8776-e550ab217a3c"]
}, Open  ]],

Cell["\<\
Estos pueden ser m\[AAcute]s complicados que simplemente datos tabulares al \
costo de una menor eficiencia computacional.\
\>", "Text",
 CellChangeTimes->{{3.962480198619358*^9, 
  3.96248022723836*^9}},ExpressionUUID->"56c22222-5810-4d7e-a463-\
632a6f6070dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Dataset\>\"", ",", "\"\<StatePopulations\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.962478356370142*^9, 3.962478379232615*^9}, {
  3.962478516513751*^9, 3.9624785195953703`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"3f16a556-6a02-455c-996c-1e61ca87b573"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7080276874342155357249070490603381276359776019311653411584], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[90], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[150], 
                TypeSystem`PackageScope`AtomShape[75]]], 2, 
              DirectedInfinity[1], {All}]]], 10, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            Entity["Country"]], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             Entity["AdministrativeDivision"]], 
            TypeSystem`Atom[
             Quantity[1, "People"]], TypeSystem`AnyLength], 198], 
         "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[90], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[150], 
                TypeSystem`PackageScope`AtomShape[75]]], 2, 
              DirectedInfinity[1], {All}]]], 10, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            Entity["Country"]], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             Entity["AdministrativeDivision"]], 
            TypeSystem`Atom[
             Quantity[1, "People"]], TypeSystem`AnyLength], 198], 
         "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1,
          "DataRowCount" -> 198, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Afghanistan\""], 
                    Style[
                    RawBoxes["\"Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Badakhshan, Afghanistan\""], 
                    Style[
                    RawBoxes["\"Badakhshan, Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"805500", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Badghis, Afghanistan\""], 
                    Style[
                    RawBoxes["\"Badghis, Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"420400", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["31 total \:203a ", ""], 
                    Style[
                    Superscript["31 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Albania\""], 
                    Style[
                    RawBoxes["\"Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Albania"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Berat, Albania\""], 
                    Style[
                    RawBoxes["\"Berat, Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"193855", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Dib\[EDoubleDot]r, Albania\""], 
                    Style[
                    RawBoxes["\"Dib\[EDoubleDot]r, Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"191035", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["12 total \:203a ", ""], 
                    Style[
                    Superscript["12 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Albania"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Albania"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Algeria\""], 
                    Style[
                    RawBoxes["\"Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Algeria"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Adrar, Algeria\""], 
                    Style[
                    RawBoxes["\"Adrar, Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"311615", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ain Eddefla, Algeria\""], 
                    Style[
                    RawBoxes["\"Ain Eddefla, Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"660342", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["48 total \:203a ", ""], 
                    Style[
                    Superscript["48 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Algeria"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Algeria"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"American Samoa\""], 
                    Style[
                    RawBoxes["\"American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, "RowHeader", False],
                    "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Eastern, American Samoa\""], 
                    Style[
                    RawBoxes["\"Eastern, American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"23441", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Manu\:02bba, American Samoa\""], 
                    Style[
                    RawBoxes["\"Manu\:02bba, American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"1378", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Andorra\""], 
                    Style[
                    RawBoxes["\"Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Andorra"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Andorra la Vella, Andorra\""], 
                    Style[
                    RawBoxes["\"Andorra la Vella, Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"21189", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Canillo, Andorra\""], 
                    Style[
                    RawBoxes["\"Canillo, Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"2706", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["7 total \:203a ", ""], 
                    Style[
                    Superscript["7 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Andorra"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Andorra"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Angola\""], 
                    Style[
                    RawBoxes["\"Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Angola"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Bengo, Angola\""], 
                    Style[
                    RawBoxes["\"Bengo, Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"196100", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Benguela, Angola\""], 
                    Style[
                    RawBoxes["\"Benguela, Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"656600", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["18 total \:203a ", ""], 
                    Style[
                    Superscript["18 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Angola"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Angola"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Barbuda, Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Barbuda, Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"1325", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Redonda, Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Redonda, Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"0", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Argentina\""], 
                    Style[
                    RawBoxes["\"Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Argentina"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Buenos Aires, Argentina\""], 
                    Style[
                    RawBoxes["\"Buenos Aires, Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"13827203", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Catamarca, Argentina\""], 
                    Style[
                    RawBoxes["\"Catamarca, Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"334568", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["24 total \:203a ", ""], 
                    Style[
                    Superscript["24 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Argentina"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Argentina"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Armenia\""], 
                    Style[
                    RawBoxes["\"Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Armenia"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Aragatsotn, Armenia\""], 
                    Style[
                    RawBoxes["\"Aragatsotn, Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"126278", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ararat, Armenia\""], 
                    Style[
                    RawBoxes["\"Ararat, Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"252665", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["11 total \:203a ", ""], 
                    Style[
                    Superscript["11 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Armenia"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Armenia"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Australia\""], 
                    Style[
                    RawBoxes["\"Australia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Australia"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ashmore and Cartier Islands, Australia\""], 
                    Style[
                    RawBoxes["\"Ashmore and Cartier Islands, Australia\""], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"0", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, "Item", 
                    False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Australian Capital Territory, Australia\""], 
                    Style[
                    RawBoxes["\"Australian Capital Territory, Australia\""], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"323665", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, "Item", 
                    False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["10 total \:203a ", ""], 
                    Style[
                    Superscript["10 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][{
                    Key[
                    Entity["Country", "Australia"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "c662cf7e-a0ce-4598-be21-5511037378e8"][{
                    Key[
                    Entity["Country", "Australia"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 198, 1], {1, 198 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 198, 1], {1, 198 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[198, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[198, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 198, 1], {1, 198 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 198, 1], {1, 198 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    "c662cf7e-a0ce-4598-be21-5511037378e8", {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c662cf7e-a0ce-4598-be21-5511037378e8"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c662cf7e-a0ce-4598-be21-5511037378e8"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             Module[{
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  "c662cf7e-a0ce-4598-be21-5511037378e8"][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {468., {390.634033203125, 396.365966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {468., {390.634033203125, 396.365966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7080276874342155357249070490603381276359776019311653411584,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.96342581777143*^9, 3.963429927412733*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"7d16d58b-9f88-4d6a-9129-2fb5a772f562"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["M\[AAcute]s estructuras de datos", "Subsection",
 CellChangeTimes->{{3.962443186919826*^9, 
  3.9624432041503763`*^9}},ExpressionUUID->"a6172a5a-014e-4ce3-831a-\
75689d1cf160"],

Cell["\<\
Adem\[AAcute]s de eso tenemos estructuras de datos m\[AAcute]s variadas que \
solo se comentar\[AAcute]n y se mostrar\[AAcute] un ejemplo, pero no se \
detallar\[AAcute]n\
\>", "Text",
 CellChangeTimes->{{3.962480276356666*^9, 
  3.9624803105668993`*^9}},ExpressionUUID->"83ee6888-aaf0-4113-a516-\
75888cda865e"],

Cell["\<\
Para arreglos de datos con pocos elementos relativos al tama\[NTilde]o del \
mismo\
\>", "Text",
 CellChangeTimes->{{3.962480314275449*^9, 
  3.962480345401497*^9}},ExpressionUUID->"f5f0dfd4-f121-4c7b-b9ce-\
39a97cca016b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "1"}]}], "\[Rule]", 
      "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962448028409569*^9, 3.962448029934373*^9}, {
   3.962480236965496*^9, 3.962480256248787*^9}, {3.962480347866047*^9, 
   3.962480401079501*^9}, 3.962480432698107*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"a89e73d8-df1f-4c94-984d-79fa3303c91b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKj6/
yEMzreG+vaNe4ZPGEy/sz/2orS2ofW+v8D5UW7juqD0DFIhsOflwst9lmpuP
S/1wNR+XOK3NxyUOAC4TJC4=
              "], {{0, 0}, {5, 5}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKj6/
yEMzreG+vaNe4ZPGEy/sz/2orS2ofW+v8D5UW7juqD0DFIhsOflwst9lmpuP
S/1wNR+XOK3NxyUOAC4TJC4=
              "], {{0, 0}, {5, 5}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.52`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2"}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {5, 5}, 0, {
   1, {{0, 2, 5, 8, 11, 13}, {{2}, {1}, {1}, {3}, {2}, {2}, {4}, {3}, {4}, {
     5}, {3}, {4}, {5}}}, {1, -2, 1, 1, -2, 1, 1, -2, -2, 1, 1, 1, -2}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963429999736291*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"b48bad03-2d72-49b4-aac5-4e37bb8e8eda"]
}, Open  ]],

Cell["\<\
Para operaciones m\[AAcute]s eficientes con tipos de datos \
\[LeftGuillemet]est\[AAcute]ndar\[RightGuillemet]\
\>", "Text",
 CellChangeTimes->{{3.96248045582015*^9, 
  3.962480487095503*^9}},ExpressionUUID->"0ec401c6-5fe8-4e75-bde7-\
8029a9362996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericArray", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", "i"}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
   "\"\<UnsignedInteger8\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.962448629744829*^9, 3.962448633733274*^9}, {
  3.962480490154087*^9, 3.962480547208563*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"437a7f42-6e27-419f-9955-de180b810252"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "9", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "9", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0", "\", \"", "1", "\", \"", "3", "\", \"", "7", "\", \"",
                     "15", "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray["UnsignedInteger8",{0, 1, 3, 7, 15, 31, 63, 127, 255}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963430013682377*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"6064b566-8f20-43d9-942b-df7e0f9d2e36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "\[Rule]", 
     RowBox[{"Mod", "[", 
      RowBox[{
       SuperscriptBox["i", "2"], ",", "74"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624450671206083`*^9, 3.962445068100812*^9}, {
  3.9624806195994463`*^9, 3.962480620325742*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"f98a4b2c-184d-4019-be9f-fdcbd2afc0fa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 4, 3, 9, 16, 5, 25, 6, 36, 7, 49, 8, 64, 10, 26, 11, 47, 12,
       70, 13, 21, 14, 48, 15, 34, 17, 67, 18, 28, 19, 65, 20, 30, 71, 22, 40,
       23, 24, 58, 33, 27, 63, 44, 29, 31, 73, 32, 62, 53, 46, 35, 41, 38, 37,
       39, 42, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 66, 68, 69, 72,
       74, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
      91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100}, {{{1, 1}, {2, 3}, {4, 5}, {3, 6}, {7, 8}, {9, 10}, {11, 12}, {13, 
       14}, {5, 11}, {15, 16}, {17, 18}, {19, 20}, {21, 22}, {23, 24}, {25, 
       4}, {6, 26}, {27, 28}, {29, 30}, {31, 32}, {33, 34}, {22, 35}, {36, 
       37}, {38, 17}, {39, 40}, {8, 41}, {16, 15}, {42, 43}, {30, 44}, {45, 
       42}, {34, 19}, {46, 47}, {48, 49}, {41, 50}, {26, 51}, {52, 53}, {10, 
       54}, {55, 55}, {54, 54}, {56, 53}, {37, 51}, {53, 50}, {57, 49}, {58, 
       47}, {44, 19}, {59, 42}, {51, 44}, {18, 43}, {24, 15}, {12, 41}, {60, 
       40}, {61, 17}, {62, 37}, {50, 35}, {63, 34}, {64, 32}, {65, 30}, {66, 
       28}, {40, 26}, {67, 4}, {68, 24}, {69, 22}, {49, 20}, {43, 18}, {14, 
       16}, {32, 11}, {70, 14}, {28, 12}, {71, 10}, {72, 8}, {20, 6}, {35, 
       5}, {73, 3}, {47, 1}, {74, 75}, {76, 1}, {77, 3}, {78, 5}, {79, 6}, {
       80, 8}, {81, 10}, {82, 12}, {83, 14}, {84, 11}, {85, 16}, {86, 18}, {
       87, 20}, {88, 22}, {89, 24}, {90, 4}, {91, 26}, {92, 28}, {93, 30}, {
       94, 32}, {95, 34}, {96, 35}, {97, 37}, {98, 17}, {99, 40}, {100, 41}, {
       101, 15}}, Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
t2nfPJr/m9/KxyWHpjrz8f8BER/B3Q==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.014834336830863836`], 
         ArrowBox[BezierCurveBox[{1, 105, 108, 110, 116, 118, 121, 1},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[{2, 3}, 0.08257698229096899], 
         ArrowBox[{3, 6}, 0.08257698229096899], 
         ArrowBox[{4, 5}, 0.08257698229096899], 
         ArrowBox[{5, 11}, 0.08257698229096899], 
         ArrowBox[{6, 26}, 0.08257698229096899], 
         ArrowBox[{7, 8}, 0.08257698229096899], 
         ArrowBox[{8, 41}, 0.08257698229096899], 
         ArrowBox[{9, 10}, 0.08257698229096899], 
         ArrowBox[{10, 54}, 0.08257698229096899], 
         ArrowBox[{11, 12}, 0.08257698229096899], 
         ArrowBox[{12, 41}, 0.08257698229096899], 
         ArrowBox[{13, 14}, 0.08257698229096899], 
         ArrowBox[{14, 16}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{15, {11.967742913429294`, -4.852373573384701}, 16}],
           0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{16, {11.901522422833525`, -5.278505456155231}, 15}],
           0.08257698229096899], ArrowBox[{17, 18}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{18, {11.837349109245292`, -1.840884092467536}, 43}],
           0.08257698229096899], ArrowBox[{19, 20}, 0.08257698229096899], 
         ArrowBox[{20, 6}, 0.08257698229096899], 
         ArrowBox[{21, 22}, 0.08257698229096899], 
         ArrowBox[{22, 35}, 0.08257698229096899], 
         ArrowBox[{23, 24}, 0.08257698229096899], 
         ArrowBox[{24, 15}, 0.08257698229096899], 
         ArrowBox[{25, 4}, 0.08257698229096899], 
         ArrowBox[{26, 51}, 0.08257698229096899], 
         ArrowBox[{27, 28}, 0.08257698229096899], 
         ArrowBox[{28, 12}, 0.08257698229096899], 
         ArrowBox[{29, 30}, 0.08257698229096899], 
         ArrowBox[{30, 44}, 0.08257698229096899], 
         ArrowBox[{31, 32}, 0.08257698229096899], 
         ArrowBox[{32, 11}, 0.08257698229096899], 
         ArrowBox[{33, 34}, 0.08257698229096899], 
         ArrowBox[{34, 19}, 0.08257698229096899], 
         ArrowBox[{35, 5}, 0.08257698229096899], 
         ArrowBox[{36, 37}, 0.08257698229096899], 
         ArrowBox[{37, 51}, 0.08257698229096899], 
         ArrowBox[{38, 17}, 0.08257698229096899], 
         ArrowBox[{39, 40}, 0.08257698229096899], 
         ArrowBox[{40, 26}, 0.08257698229096899], 
         ArrowBox[{41, 50}, 0.08257698229096899], 
         ArrowBox[{42, 43}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{43, {11.790953593672, -1.447012408309082}, 18}], 
          0.08257698229096899], ArrowBox[{44, 19}, 0.08257698229096899], 
         ArrowBox[{45, 42}, 0.08257698229096899], 
         ArrowBox[{46, 47}, 0.08257698229096899], 
         ArrowBox[{47, 1}, 0.08257698229096899], 
         ArrowBox[{48, 49}, 0.08257698229096899], 
         ArrowBox[{49, 20}, 0.08257698229096899], 
         ArrowBox[{50, 35}, 0.08257698229096899], 
         ArrowBox[{51, 44}, 0.08257698229096899], 
         ArrowBox[{52, 53}, 0.08257698229096899], 
         ArrowBox[{53, 50}, 0.08257698229096899], 
         ArrowBox[BezierCurveBox[{54, 192, 195, 197, 203, 205, 208, 54},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[BezierCurveBox[{55, 215, 218, 220, 226, 228, 231, 55},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[{56, 53}, 0.08257698229096899], 
         ArrowBox[{57, 49}, 0.08257698229096899], 
         ArrowBox[{58, 47}, 0.08257698229096899], 
         ArrowBox[{59, 42}, 0.08257698229096899], 
         ArrowBox[{60, 40}, 0.08257698229096899], 
         ArrowBox[{61, 17}, 0.08257698229096899], 
         ArrowBox[{62, 37}, 0.08257698229096899], 
         ArrowBox[{63, 34}, 0.08257698229096899], 
         ArrowBox[{64, 32}, 0.08257698229096899], 
         ArrowBox[{65, 30}, 0.08257698229096899], 
         ArrowBox[{66, 28}, 0.08257698229096899], 
         ArrowBox[{67, 4}, 0.08257698229096899], 
         ArrowBox[{68, 24}, 0.08257698229096899], 
         ArrowBox[{69, 22}, 0.08257698229096899], 
         ArrowBox[{70, 14}, 0.08257698229096899], 
         ArrowBox[{71, 10}, 0.08257698229096899], 
         ArrowBox[{72, 8}, 0.08257698229096899], 
         ArrowBox[{73, 3}, 0.08257698229096899], 
         ArrowBox[{74, 75}, 0.08257698229096899], 
         ArrowBox[{76, 1}, 0.08257698229096899], 
         ArrowBox[{77, 3}, 0.08257698229096899], 
         ArrowBox[{78, 5}, 0.08257698229096899], 
         ArrowBox[{79, 6}, 0.08257698229096899], 
         ArrowBox[{80, 8}, 0.08257698229096899], 
         ArrowBox[{81, 10}, 0.08257698229096899], 
         ArrowBox[{82, 12}, 0.08257698229096899], 
         ArrowBox[{83, 14}, 0.08257698229096899], 
         ArrowBox[{84, 11}, 0.08257698229096899], 
         ArrowBox[{85, 16}, 0.08257698229096899], 
         ArrowBox[{86, 18}, 0.08257698229096899], 
         ArrowBox[{87, 20}, 0.08257698229096899], 
         ArrowBox[{88, 22}, 0.08257698229096899], 
         ArrowBox[{89, 24}, 0.08257698229096899], 
         ArrowBox[{90, 4}, 0.08257698229096899], 
         ArrowBox[{91, 26}, 0.08257698229096899], 
         ArrowBox[{92, 28}, 0.08257698229096899], 
         ArrowBox[{93, 30}, 0.08257698229096899], 
         ArrowBox[{94, 32}, 0.08257698229096899], 
         ArrowBox[{95, 34}, 0.08257698229096899], 
         ArrowBox[{96, 35}, 0.08257698229096899], 
         ArrowBox[{97, 37}, 0.08257698229096899], 
         ArrowBox[{98, 17}, 0.08257698229096899], 
         ArrowBox[{99, 40}, 0.08257698229096899], 
         ArrowBox[{100, 41}, 0.08257698229096899], 
         ArrowBox[{101, 15}, 0.08257698229096899]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08257698229096899], DiskBox[2, 0.08257698229096899], 
         DiskBox[3, 0.08257698229096899], DiskBox[4, 0.08257698229096899], 
         DiskBox[5, 0.08257698229096899], DiskBox[6, 0.08257698229096899], 
         DiskBox[7, 0.08257698229096899], DiskBox[8, 0.08257698229096899], 
         DiskBox[9, 0.08257698229096899], DiskBox[10, 0.08257698229096899], 
         DiskBox[11, 0.08257698229096899], DiskBox[12, 0.08257698229096899], 
         DiskBox[13, 0.08257698229096899], DiskBox[14, 0.08257698229096899], 
         DiskBox[15, 0.08257698229096899], DiskBox[16, 0.08257698229096899], 
         DiskBox[17, 0.08257698229096899], DiskBox[18, 0.08257698229096899], 
         DiskBox[19, 0.08257698229096899], DiskBox[20, 0.08257698229096899], 
         DiskBox[21, 0.08257698229096899], DiskBox[22, 0.08257698229096899], 
         DiskBox[23, 0.08257698229096899], DiskBox[24, 0.08257698229096899], 
         DiskBox[25, 0.08257698229096899], DiskBox[26, 0.08257698229096899], 
         DiskBox[27, 0.08257698229096899], DiskBox[28, 0.08257698229096899], 
         DiskBox[29, 0.08257698229096899], DiskBox[30, 0.08257698229096899], 
         DiskBox[31, 0.08257698229096899], DiskBox[32, 0.08257698229096899], 
         DiskBox[33, 0.08257698229096899], DiskBox[34, 0.08257698229096899], 
         DiskBox[35, 0.08257698229096899], DiskBox[36, 0.08257698229096899], 
         DiskBox[37, 0.08257698229096899], DiskBox[38, 0.08257698229096899], 
         DiskBox[39, 0.08257698229096899], DiskBox[40, 0.08257698229096899], 
         DiskBox[41, 0.08257698229096899], DiskBox[42, 0.08257698229096899], 
         DiskBox[43, 0.08257698229096899], DiskBox[44, 0.08257698229096899], 
         DiskBox[45, 0.08257698229096899], DiskBox[46, 0.08257698229096899], 
         DiskBox[47, 0.08257698229096899], DiskBox[48, 0.08257698229096899], 
         DiskBox[49, 0.08257698229096899], DiskBox[50, 0.08257698229096899], 
         DiskBox[51, 0.08257698229096899], DiskBox[52, 0.08257698229096899], 
         DiskBox[53, 0.08257698229096899], DiskBox[54, 0.08257698229096899], 
         DiskBox[55, 0.08257698229096899], DiskBox[56, 0.08257698229096899], 
         DiskBox[57, 0.08257698229096899], DiskBox[58, 0.08257698229096899], 
         DiskBox[59, 0.08257698229096899], DiskBox[60, 0.08257698229096899], 
         DiskBox[61, 0.08257698229096899], DiskBox[62, 0.08257698229096899], 
         DiskBox[63, 0.08257698229096899], DiskBox[64, 0.08257698229096899], 
         DiskBox[65, 0.08257698229096899], DiskBox[66, 0.08257698229096899], 
         DiskBox[67, 0.08257698229096899], DiskBox[68, 0.08257698229096899], 
         DiskBox[69, 0.08257698229096899], DiskBox[70, 0.08257698229096899], 
         DiskBox[71, 0.08257698229096899], DiskBox[72, 0.08257698229096899], 
         DiskBox[73, 0.08257698229096899], DiskBox[74, 0.08257698229096899], 
         DiskBox[75, 0.08257698229096899], DiskBox[76, 0.08257698229096899], 
         DiskBox[77, 0.08257698229096899], DiskBox[78, 0.08257698229096899], 
         DiskBox[79, 0.08257698229096899], DiskBox[80, 0.08257698229096899], 
         DiskBox[81, 0.08257698229096899], DiskBox[82, 0.08257698229096899], 
         DiskBox[83, 0.08257698229096899], DiskBox[84, 0.08257698229096899], 
         DiskBox[85, 0.08257698229096899], DiskBox[86, 0.08257698229096899], 
         DiskBox[87, 0.08257698229096899], DiskBox[88, 0.08257698229096899], 
         DiskBox[89, 0.08257698229096899], DiskBox[90, 0.08257698229096899], 
         DiskBox[91, 0.08257698229096899], DiskBox[92, 0.08257698229096899], 
         DiskBox[93, 0.08257698229096899], DiskBox[94, 0.08257698229096899], 
         DiskBox[95, 0.08257698229096899], DiskBox[96, 0.08257698229096899], 
         DiskBox[97, 0.08257698229096899], DiskBox[98, 0.08257698229096899], 
         DiskBox[99, 0.08257698229096899], DiskBox[100, 0.08257698229096899], 
         DiskBox[101, 0.08257698229096899]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.963430021151381*^9},
 CellLabel->"Out[117]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"4e59241d-ec31-4d87-8661-65896db6feb1"]
}, Open  ]],

Cell["Para representar datos jerarquizados", "Text",
 CellChangeTimes->{{3.962480786494596*^9, 
  3.962480794076062*^9}},ExpressionUUID->"2fe1eedd-1473-4af8-b8db-\
23cabb588dba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tree", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tree", "[", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d"}], "}"}]}], "]"}], ",", "e", ",", "f"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9624450704809217`*^9, 3.962445071024575*^9}, 
   3.962480779897359*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"f4476b58-fd68-4263-a661-d6d3c05e2eb1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[$CellContext`a, {
       Tree[$CellContext`b, {
         Tree[$CellContext`c, None], 
         Tree[$CellContext`d, None]}], 
       Tree[$CellContext`e, None], 
       Tree[$CellContext`f, None]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         0.4082482904638631, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         1.2247448713915892`, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         2.041241452319315, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.4082482904638631, 0.8273371707065537}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.4082482904638631, 0.8273371707065537}, {
         0.8164965809277261, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.2247448713915892, 1.6546743414131073}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.4082482904638631, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["c",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.8164965809277261, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["e",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2247448713915892, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["f",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.041241452319315, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$6"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.9634300298751583`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"ba075e0f-94f2-495a-8aeb-840be82b58a4"]
}, Open  ]],

Cell["\<\
Y de manera m\[AAcute]s general una gran variedad de estructuras nativas que \
podemos usar en Mathematica\
\>", "Text",
 CellChangeTimes->{{3.9624808381056643`*^9, 
  3.962480857892727*^9}},ExpressionUUID->"8276585c-dee1-4673-8d81-\
2d674b4650dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9624457976254797`*^9, 3.962445798812827*^9}, {
  3.962480859970151*^9, 3.962480886119484*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"8c7b53a3-5e4c-4f39-96b5-49c158893440"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataStructure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.041666666666666664`], {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                2.0273000000000003`, 19.7939}, {6.0003, 17.4999}, {
                2.0273000000000003`, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3.0276, 16.9389}, {
                3.9996, 17.4999}, {3.0276, 18.0609}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                14.}, {7., 14.}, {7., 21.}, {17., 21.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                15.}, {8., 15.}, {8., 20.}, {16., 20.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                8.}, {7., 8.}, {7., 15.}, {17., 15.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                9.}, {8., 9.}, {8., 14.}, {16., 14.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                2.}, {7., 2.}, {7., 9.}, {17., 9.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                3.}, {8., 3.}, {8., 8.}, {16., 8.}}}]}, {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{18.0273, 
                19.7939}, {22.0003, 17.4999}, {18.0273, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{19.0269, 
                16.9389}, {19.9999, 17.4999}, {19.0269, 18.0609}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Stack\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.041666666666666664`], {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                2.0273000000000003`, 19.7939}, {6.0003, 17.4999}, {
                2.0273000000000003`, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3.0276, 16.9389}, {
                3.9996, 17.4999}, {3.0276, 18.0609}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                14.}, {7., 14.}, {7., 21.}, {17., 21.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                15.}, {8., 15.}, {8., 20.}, {16., 20.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                8.}, {7., 8.}, {7., 15.}, {17., 15.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                9.}, {8., 9.}, {8., 14.}, {16., 14.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                2.}, {7., 2.}, {7., 9.}, {17., 9.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                3.}, {8., 3.}, {8., 8.}, {16., 8.}}}]}, {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{18.0273, 
                19.7939}, {22.0003, 17.4999}, {18.0273, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{19.0269, 
                16.9389}, {19.9999, 17.4999}, {19.0269, 18.0609}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Stack\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DataStructure["Stack", {"Data" -> {}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.963430038382024*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"3f11c1c0-d80b-47ba-bbd2-e8a2fa8032a9"]
}, Open  ]],

Cell["\<\
Esta es la alternativa a Dataset que solo representa datos tabulares, pero \
con operaciones m\[AAcute]s eficientes. Al haber salido en la ultima versi\
\[OAcute]n de Mathematica solo la mencionaremos por completitud con los \
ejemplos anteriores\
\>", "Text",
 CellChangeTimes->{{3.9624808955667*^9, 
  3.962480939053192*^9}},ExpressionUUID->"c8af6d6e-5cb3-48af-b58e-\
51af0456c942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tabular", "[", "]"}]], "Input",
 CellChangeTimes->{{3.962447654619937*^9, 3.962447656115641*^9}, 
   3.96248094117415*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"6bd759f0-170a-481c-a347-1e9dd8ea1831"],

Cell[BoxData[
 RowBox[{"Tabular", "[", "]"}]], "Output",
 CellChangeTimes->{3.963430049723674*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"9fd49e54-8af1-486f-a467-cff3cd730d34"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bucles", "Section",
 CellChangeTimes->{{3.962562885027934*^9, 3.9625628859361773`*^9}, {
  3.9626332546181192`*^9, 
  3.962633255297501*^9}},ExpressionUUID->"84a7e2f7-7bf9-43fa-b8c2-\
a75da576ef8b"],

Cell[CellGroupData[{

Cell["Do", "Subsection",
 CellChangeTimes->{{3.9625628930836067`*^9, 
  3.962562894718235*^9}},ExpressionUUID->"88c3f1fe-525a-4d3d-975b-\
0b6f61921c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Do"}]], "Input",
 CellChangeTimes->{{3.962642451055262*^9, 3.9626424518390713`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"8038f1ce-4269-45e2-abb8-31f3518fb4d1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"http://reference.wolfram.com/language/ref/Do.html",
              
              ButtonNote->"http://reference.wolfram.com/language/ref/Do.html"],
             "\"http://reference.wolfram.com/language/ref/Do.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) successively taking on the values \
1 through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) (in steps of 1). \\n\\!\\(\\*RowBox[{\\\
\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\\) looping over different values of \
\\!\\(\\*StyleBox[\\\"j\\\", \\\"TI\\\"]\\) etc. for each \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Do.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Do.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Do\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"http://reference.wolfram.com/language/ref/Do.html",
              
              ButtonNote->"http://reference.wolfram.com/language/ref/Do.html"],
             "\"http://reference.wolfram.com/language/ref/Do.html\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) successively taking on the values \
1 through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) (in steps of 1). \\n\\!\\(\\*RowBox[{\\\
\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\\) looping over different values of \
\\!\\(\\*StyleBox[\\\"j\\\", \\\"TI\\\"]\\) etc. for each \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Do\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) evaluates \!\(\*StyleBox[\"expr\", \
\"TI\"]\) \!\(\*StyleBox[\"n\", \"TI\"]\) times. \n\!\(\*RowBox[{\"Do\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) evaluates \
\!\(\*StyleBox[\"expr\", \"TI\"]\) with the variable \!\(\*StyleBox[\"i\", \
\"TI\"]\) successively taking on the values 1 through \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) (in \
steps of 1). \n\!\(\*RowBox[{\"Do\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Do\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Do\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Do\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) evaluates \!\(\*StyleBox[\"expr\", \"TI\"]\) looping \
over different values of \!\(\*StyleBox[\"j\", \"TI\"]\) etc. for each \
\!\(\*StyleBox[\"i\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Web" -> "http://reference.wolfram.com/language/ref/Do.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
    "System`Do"|>, False]]], "Output",
 CellChangeTimes->{3.963430112274712*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"f5c4215b-a2c0-4e0d-bcf8-3ade723e95d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.96343015085544*^9, 3.963430151038134*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"558a4660-519f-4bf2-8bdc-c8c00c3ab5ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.963430146338244*^9, 3.9634301514478483`*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"cc6ef4b0-4453-42c7-afe5-df7cc4d08062"]
}, Open  ]],

Cell["\<\
Similar a un Table, con la diferencia de que no devuelve nada por s\[IAcute] \
mismo.\
\>", "Text",
 CellChangeTimes->{{3.962578873889166*^9, 3.962578877328681*^9}, {
   3.962579841003656*^9, 3.9625798550743093`*^9}, {3.962580289563375*^9, 
   3.9625802920665293`*^9}, {3.962583153809319*^9, 3.962583191620417*^9}, 
   3.962628231023053*^9},ExpressionUUID->"9dce4900-4fdc-4d08-8e0c-\
bc86ba3c118d"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9625830838420258`*^9, 3.9625830898705072`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"d4b48d0e-0089-4841-8978-26cb9ab90b03"],

Cell["\<\
En el caso en el que se desea generar una lista como resultado, Table lo hace \
directamente, mientras que Do solo puede modificar listas previamente \
existentes.\
\>", "Text",
 CellChangeTimes->{{3.962644193728902*^9, 
  3.962644240135577*^9}},ExpressionUUID->"8f4b0b57-7626-44bb-b5f6-\
ffc7b481a2bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cuadrados", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"cuadrados", ",", 
      SuperscriptBox["i", "2"]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\n", "cuadrados"}], "Input",
 CellChangeTimes->{{3.962578575709695*^9, 3.96257857571449*^9}, {
   3.962578627818356*^9, 3.962578651105301*^9}, {3.962578712748682*^9, 
   3.9625787161152267`*^9}, 3.962579108779765*^9, 3.962642654616227*^9, {
   3.962643887393187*^9, 3.962643891059175*^9}, 3.962643985652565*^9, {
   3.962644079579438*^9, 3.962644083921465*^9}, {3.9626447559918118`*^9, 
   3.9626447647986193`*^9}, 3.962647883030835*^9, {3.963423136100451*^9, 
   3.963423139006587*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"7c27983c-e095-473b-9596-27ab98811b9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.96343019391831*^9, 3.963430221233961*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"ed6630e5-6d96-4dde-8423-9aeac94987ee"]
}, Open  ]],

Cell["\<\
\[CapitalUAcute]til cuando se quiere obtener el resultado final \
despu\[EAcute]s de repetir una acci\[OAcute]n, sin recolectar resultados \
intermedios.\
\>", "Text",
 CellChangeTimes->{{3.962578873889166*^9, 3.962578877328681*^9}, {
   3.962579841003656*^9, 3.9625798550743093`*^9}, {3.962580289563375*^9, 
   3.9625802920665293`*^9}, {3.962583153809319*^9, 3.962583191620417*^9}, 
   3.962628231023053*^9, {3.962642668263143*^9, 3.962642674699243*^9}, {
   3.962642742092201*^9, 3.962642748892684*^9}, {3.962643460805009*^9, 
   3.962643475230434*^9}},ExpressionUUID->"d4280692-7eef-4e3b-a1a0-\
5f6f397d49ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"a", "+", "b"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"10", "-", "1"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "b"}], "Input",
 CellChangeTimes->{{3.9626426391570463`*^9, 3.962642639161676*^9}, {
   3.962643566103672*^9, 3.962643586056841*^9}, {3.962644807121913*^9, 
   3.9626448115622272`*^9}, 3.962645152254241*^9, 3.9626478863403397`*^9, 
   3.9626480569648027`*^9, {3.9634231411412783`*^9, 3.963423144402876*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"9c3ee02f-83e0-4fc9-85c2-7bff24ac24ce"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.9634302518646603`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"aa5691b4-598d-4b59-837b-0fbcd23fb10f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["While", "Subsection",
 CellChangeTimes->{{3.962562910687399*^9, 
  3.962562912297819*^9}},ExpressionUUID->"fb18bf43-34ab-452e-b1fe-\
f7db95dcd12f"],

Cell[BoxData[
 RowBox[{"?", "While"}]], "Input",
 CellChangeTimes->{{3.962645794697503*^9, 3.962645797284884*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"8ff3fa05-0d3e-41be-807c-44b433552380"],

Cell["\<\
Repite una acci\[OAcute]n mientras se cumpla una condici\[OAcute]n. Tampoco \
devuelve nada por s\[IAcute] mismo.\
\>", "Text",
 CellChangeTimes->{{3.962578873889166*^9, 3.962578877328681*^9}, {
  3.962583128476465*^9, 
  3.9625831306361313`*^9}},ExpressionUUID->"d540823e-37b9-4d46-b0db-\
432bdec32a63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cuadrados", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "<=", "10"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"cuadrados", ",", 
       RowBox[{"i", "^", "2"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "cuadrados", "\n"}], "Input",
 CellChangeTimes->{{3.9625786651540117`*^9, 3.962578721508607*^9}, {
  3.962643896678575*^9, 3.962643944454618*^9}, {3.9626457370758877`*^9, 
  3.9626457618521547`*^9}, {3.962647899909544*^9, 3.9626479013886538`*^9}, {
  3.9626510831658707`*^9, 3.962651083420095*^9}, {3.963419376949583*^9, 
  3.963419379188807*^9}, {3.963430370146459*^9, 3.963430383505149*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"4b6e8d14-55da-4121-bfc5-7f05f286e352"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.963430392022451*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"8ff80f78-59e3-48cc-8056-b00557f0e6da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "<", "10"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"a", "+", "b"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "b"}], "Input",
 CellChangeTimes->{{3.962647907476697*^9, 3.962647910798313*^9}, {
  3.962648081850853*^9, 3.9626480835476103`*^9}, {3.9634193821332283`*^9, 
  3.963419387851901*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"110a24f9-7415-4793-9d4f-afac242e3d71"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.963430410610737*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"d6d472ad-707a-47ae-bd1c-cf61c9f27029"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For", "Subsection",
 CellChangeTimes->{{3.962562915262652*^9, 
  3.962562916498735*^9}},ExpressionUUID->"1eafac3b-e5e7-4a3a-a8c7-\
e131de469f51"],

Cell[BoxData[
 RowBox[{"?", "For"}]], "Input",
 CellChangeTimes->{{3.9626458014073153`*^9, 3.962645802222684*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"33815f75-af27-4010-9b1b-f4c5d3e0e6a9"],

Cell["\<\
Combina inicializaci\[OAcute]n, condici\[OAcute]n y actualizaci\[OAcute]n en \
una sola l\[IAcute]nea. Tampoco devuelve nada por s\[IAcute] mismo.\
\>", "Text",
 CellChangeTimes->{{3.962583022492844*^9, 3.9625830238122396`*^9}, {
   3.962583134169777*^9, 3.962583135434111*^9}, 
   3.96279991900889*^9},ExpressionUUID->"18beb080-4ac6-4365-a45e-\
33070c0188d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cuadrados", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", "10"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"cuadrados", ",", 
      RowBox[{"i", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\n", "cuadrados", "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.962578699224942*^9, 3.962578735702352*^9}, {
  3.962627074047309*^9, 3.962627132169023*^9}, {3.962627234043085*^9, 
  3.9626272355184298`*^9}, {3.9626439534721603`*^9, 3.96264396158843*^9}, {
  3.962645776303335*^9, 3.962645782755899*^9}, {3.962648125841133*^9, 
  3.962648127654874*^9}, {3.96265104037958*^9, 3.962651042785433*^9}, {
  3.9626510776120043`*^9, 3.962651077911213*^9}, {3.963419334487153*^9, 
  3.963419342960204*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"ee2b118c-5155-4863-9b6d-513987f097b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.963430477802623*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"2c8977e7-c902-4444-899d-59a0f028e151"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "10"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"a", "+", "b"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "b"}], "Input",
 CellChangeTimes->{{3.9626481741659327`*^9, 3.962648185350164*^9}, {
  3.9634193529997263`*^9, 3.963419355983923*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"01d410fc-e585-4356-a4f5-37a955ed93cc"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.96343048286966*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"ab4d146c-3a1a-475e-a9dd-f8ec49ca8b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.963430496242599*^9, 3.963430510685253*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"98d5b51a-1410-45fc-9d17-1104907f4806"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.963430511319912*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"80e10c48-a0d6-423e-8e02-0a8556a8388d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resumen de la clase", "Section",
 CellChangeTimes->{{3.962562885027934*^9, 3.9625628859361773`*^9}, {
  3.9626332546181192`*^9, 3.962633255297501*^9}, {3.9629911325165358`*^9, 
  3.9629911345737123`*^9}},ExpressionUUID->"13e2ff16-dc00-4a6d-9590-\
9c09032af77c"],

Cell[CellGroupData[{

Cell["Estructuras de datos", "Subsection",
 CellChangeTimes->{{3.962991615006319*^9, 
  3.9629916233288116`*^9}},ExpressionUUID->"83d0b7fa-0bb9-4c88-9b0e-\
b244262f86fc"],

Cell["\<\
Las estructuras de datos son formas de organizar y almacenar datos para que \
puedan utilizarse de manera eficiente.\
\>", "Item",
 CellChangeTimes->{{3.963267230597001*^9, 
  3.963267237043046*^9}},ExpressionUUID->"22d7fb22-6522-443b-a2d5-\
be3657f0b0bd"],

Cell["\<\
Existen diversas estructuras de datos como las listas, expresiones, \
asociaciones, datasets, etc.\
\>", "Item",
 CellChangeTimes->{{3.963267230597001*^9, 
  3.9632672372696123`*^9}},ExpressionUUID->"577eccf9-478c-4171-9e61-\
65b6f201e2d7"],

Cell[CellGroupData[{

Cell["Listas", "Subsubsection",
 CellChangeTimes->{{3.962991625837042*^9, 
  3.962991626456069*^9}},ExpressionUUID->"c72ceb84-4a52-499c-be0b-\
864aecc7ce76"],

Cell["\<\
Las listas son la estructura fundamental de Wolfram Language y representan \
colecciones de elementos. Se definen usando llaves {} y separando los \
elementos con comas. Pueden contener cualquier tipo de datos.\
\>", "Item",
 CellChangeTimes->{{3.963267242161974*^9, 
  3.96326724565158*^9}},ExpressionUUID->"b115bf47-8529-4aa9-bc35-\
0d700faf417b"],

Cell["\<\
El acceso a los elementos se realiza con doble corchete \[LeftDoubleBracket]\
\[RightDoubleBracket] , empezando desde el \[IAcute]ndice 1.\
\>", "Item",
 CellChangeTimes->{{3.963267242161974*^9, 
  3.963267249239599*^9}},ExpressionUUID->"985dbc75-3a5c-42bf-a26c-\
ffbe8e57bada"],

Cell["\<\
Saber c\[OAcute]mo crear y manipular listas de manera adecuada permite \
escribir buen c\[OAcute]digo en Wolfram Language y  aprovechar su potencial \
al m\[AAcute]ximo.\
\>", "Item",
 CellChangeTimes->{{3.963267242161974*^9, 
  3.963267252125029*^9}},ExpressionUUID->"aa64b65e-0c1c-43a1-90d0-\
e274ea1080f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expresiones", "Subsubsection",
 CellChangeTimes->{{3.962991915667427*^9, 
  3.9629919167829323`*^9}},ExpressionUUID->"3f82233a-478d-45e6-9aa7-\
d5bea92ca83d"],

Cell["Toda entrada en Mathematica es internamente una expresi\[OAcute]n.", \
"Item",
 CellChangeTimes->{{3.963267264651997*^9, 
  3.963267267235652*^9}},ExpressionUUID->"34840395-79bc-4d0f-8f2c-\
33ab3379c10c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Asociaciones", "Subsubsection",
 CellChangeTimes->{{3.962991915667427*^9, 3.9629919167829323`*^9}, {
  3.962991962882181*^9, 
  3.962991964905115*^9}},ExpressionUUID->"988ca5a2-1996-48eb-b75e-\
8ae5016d47af"],

Cell["\<\
Equivalentes a diccionarios: permiten acceso a datos mediante llaves.\
\>", "Item",
 CellChangeTimes->{{3.963267274326234*^9, 
  3.963267274598626*^9}},ExpressionUUID->"b9fa46b2-59ae-4cf8-a7d7-\
9909f356d02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datasets", "Subsubsection",
 CellChangeTimes->{{3.962991987865439*^9, 
  3.962991988385407*^9}},ExpressionUUID->"4afc66a8-aa4f-4084-9396-\
0a7dd0c0ae0f"],

Cell["\<\
Permiten trabajar con datos tabulares y estructuras jer\[AAcute]rquicas.\
\>", "Item",
 CellChangeTimes->{{3.963267279092824*^9, 
  3.963267285448792*^9}},ExpressionUUID->"3e71c661-44ab-444e-ba5d-\
18168460b791"],

Cell["\<\
Poseen una sintaxis rica para hacer consultas, transformaciones y \
visualizaciones.\
\>", "Item",
 CellChangeTimes->{{3.963267279092824*^9, 
  3.963267292615395*^9}},ExpressionUUID->"13906e2e-3593-4361-b6c3-\
5258e96f8053"],

Cell["\<\
M\[AAcute]s complejos que las listas, pero pueden ser menos eficientes en c\
\[OAcute]mputo .\
\>", "Item",
 CellChangeTimes->{{3.963267279092824*^9, 
  3.96326729818134*^9}},ExpressionUUID->"04517917-7829-4309-8085-\
f41608c089d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table", "Subsection",
 CellChangeTimes->{{3.962991855462257*^9, 
  3.962991856057207*^9}},ExpressionUUID->"baa4d0a4-4832-46a0-a839-\
07331cb19908"],

Cell["\<\
Genera listas mediante una expresi\[OAcute]n repetida un n\[UAcute]mero \
determinado de veces.\
\>", "Item",
 CellChangeTimes->{{3.96326730879466*^9, 
  3.963267311908248*^9}},ExpressionUUID->"de677f9d-a6b2-4d15-99b9-\
a02f1eeda5ad"],

Cell["\<\
Es declarativo, m\[AAcute]s eficiente y m\[AAcute]s f\[AAcute]cil de combinar \
con programaci\[OAcute]n funcional.\
\>", "Item",
 CellChangeTimes->{{3.96326730879466*^9, 
  3.9632673146016617`*^9}},ExpressionUUID->"92ce4ad1-6adf-49d3-b368-\
8f5c52fa058c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bucles", "Subsection",
 CellChangeTimes->{{3.962991778972427*^9, 
  3.9629917797949057`*^9}},ExpressionUUID->"84a28348-a700-4bb7-8390-\
a7b965a901ed"],

Cell["No devuelven nada por s\[IAcute] mismos.", "Item",
 CellChangeTimes->{{3.9632673252675333`*^9, 
  3.9632673299807453`*^9}},ExpressionUUID->"415795ae-5001-4225-aa7b-\
b2157d8729c3"],

Cell[CellGroupData[{

Cell["Do", "Subsubsection",
 CellChangeTimes->{{3.962992091463241*^9, 
  3.962992091628055*^9}},ExpressionUUID->"21afe0fc-4a5c-4bed-8597-\
652593e4d145"],

Cell["\<\
Se usa para modificar estructuras existentes o generar efectos secundarios \
(por ejemplo, imprimir, acumular en variables).\
\>", "Item",
 CellChangeTimes->{{3.9632673324012117`*^9, 
  3.96326733995956*^9}},ExpressionUUID->"a24685bd-8079-45d8-bb76-\
a22014650785"],

Cell["\<\
Ideal cuando se necesita ejecutar una acci\[OAcute]n repetidamente sin \
necesidad de recolectar resultados.\
\>", "Item",
 CellChangeTimes->{{3.9632673324012117`*^9, 
  3.963267338210247*^9}},ExpressionUUID->"c4e710ca-1997-4dc3-b4f4-\
4e52e5c0ae07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["While", "Subsubsection",
 CellChangeTimes->{{3.962992096887537*^9, 
  3.962992097593149*^9}},ExpressionUUID->"7ced9fc5-8b2c-47c3-aec4-\
92badced1c42"],

Cell["\<\
Ejecuta un bloque de c\[OAcute]digo mientras se cumpla una condici\[OAcute]n \
l\[OAcute]gica.\
\>", "Item",
 CellChangeTimes->{{3.9632673439338818`*^9, 
  3.963267349060707*^9}},ExpressionUUID->"66caa53e-d995-4ae0-818d-\
0740429f12b1"],

Cell["\<\
Es \[UAcute]til cuando no se conoce de antemano cu\[AAcute]ntas iteraciones \
se necesitan.\
\>", "Item",
 CellChangeTimes->{{3.9632673439338818`*^9, 
  3.96326734916258*^9}},ExpressionUUID->"65d661ad-f213-44a8-a621-\
c5c74ad3cccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["For", "Subsubsection",
 CellChangeTimes->{{3.962992103301186*^9, 
  3.962992103522827*^9}},ExpressionUUID->"527df464-7566-4a0b-b8db-\
eefd077651a7"],

Cell["\<\
Permite combinar inicializaci\[OAcute]n, condici\[OAcute]n de parada y \
actualizaci\[OAcute]n en una sola instrucci\[OAcute]n.\
\>", "Item",
 CellChangeTimes->{{3.9632673544797297`*^9, 
  3.963267359122243*^9}},ExpressionUUID->"33cc84d8-e94a-4c99-9cdd-\
46e0990ac325"],

Cell["\<\
Menos recomendable que Table o Do en estilo idiom\[AAcute]tico de Mathematica.\
\>", "Item",
 CellChangeTimes->{{3.9632673544797297`*^9, 
  3.96326735925319*^9}},ExpressionUUID->"dad5c6de-0133-4877-b1c5-\
9ecbd8c25f3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejemplos", "Section",
 CellChangeTimes->{{3.963426268039225*^9, 
  3.96342627034413*^9}},ExpressionUUID->"9d21c77a-cb17-493a-8729-\
8de2d023b666"],

Cell[CellGroupData[{

Cell["Comparaci\[OAcute]n Do vs. Table", "Subsubsection",
 CellChangeTimes->{{3.9626434928734903`*^9, 
  3.962643497970727*^9}},ExpressionUUID->"dbeb0eea-b2c7-4a7b-b10f-\
015ca189f376"],

Cell["\<\
Cu\[AAcute]l es mejor depende de la tarea que se quiere realizar. En el caso \
de crear listas, Table es por lo general la mejor opci\[OAcute]n pues crea \
una lista como resultado directamente y se usa naturalmente con otras \
funciones funcionales (que se ver\[AAcute]n en la pr\[OAcute]xima clase). \
Adem\[AAcute]s, el c\[OAcute]digo con Table suele ser m\[AAcute]s corto y \
claro.\
\>", "Text",
 CellChangeTimes->{{3.962578873889166*^9, 3.962578877328681*^9}, {
   3.962579841003656*^9, 3.9625798550743093`*^9}, {3.962580289563375*^9, 
   3.9625802920665293`*^9}, {3.962583153809319*^9, 3.962583191620417*^9}, 
   3.962628231023053*^9, {3.962642668263143*^9, 3.962642674699243*^9}, {
   3.962642742092201*^9, 3.962642748892684*^9}, {3.962643460805009*^9, 
   3.962643475230434*^9}, {3.962644118774219*^9, 3.962644156398731*^9}, {
   3.962644291998055*^9, 3.962644300159614*^9}, {3.9626443345343637`*^9, 
   3.9626444244136972`*^9}},ExpressionUUID->"72aaf36f-46b8-4a7b-b184-\
45fd6b49ce44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.9634306828388243`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"060d2502-5343-4058-bb59-ce3b6ec01110"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["i", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9626440061314497`*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"50fe16bc-5a80-4fe3-8851-d6f288b1dba3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.971878051757812`*^-6", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9634306687814293`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"99345698-b6ed-48ba-b329-6de8358eb143"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cuadrados", "=", 
   RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"cuadrados", ",", 
      SuperscriptBox["i", "2"]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";", "\[IndentingNewLine]", "cuadrados"}]], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"413cbd51-5597-4a2f-bfd1-7c3be9e4fc1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.963430709773572*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"1e832ac0-72af-46b2-b8eb-1d4beb2b2504"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "cuadrados", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cuadrados", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"cuadrados", ",", 
          SuperscriptBox["i", "2"]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "cuadrados"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.962643833109818*^9, 3.962643877600389*^9}, 
   3.9626439815869207`*^9, {3.962644878669209*^9, 3.962644883956609*^9}, {
   3.962645164677253*^9, 3.962645194692112*^9}, 3.962645724173545*^9, 
   3.96264789112799*^9, 3.9634230812681837`*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"cb192629-7c65-4e45-bf4e-e857d58608c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00001705078125`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9634307839914083`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"11c4ef08-eec8-4518-a430-3e3819c23306"]
}, Open  ]],

Cell["\<\
A pesar de lo anterior, Do puede ser m\[AAcute]s r\[AAcute]pido en \
situaciones donde solo se requiera el resultado final luego de repetir una \
acci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.9626444361586018`*^9, 
  3.9626444776298313`*^9}},ExpressionUUID->"91bfb24e-30f5-409f-a271-\
cc402431b0b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Last", "@", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{"b", ",", 
             RowBox[{"a", "+", "b"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          "a"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"1000", "-", "1"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.962643544904037*^9, 3.962643544909319*^9}, 
   3.962644027843355*^9, {3.962644950738002*^9, 3.962644965004093*^9}, 
   3.9626450012456427`*^9, 3.962645123161541*^9, {3.962645266573833*^9, 
   3.962645266949854*^9}, 3.9626457220558367`*^9, 3.962647893850184*^9, 
   3.9626480693259163`*^9, {3.963430865587401*^9, 3.96343086631003*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"236ab3fe-f2f6-4141-9b4f-abd42b3f4337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001131400390625`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.963430875003249*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"14e420d2-10d3-41d5-b698-d00f9f6da5be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"a", "+", "b"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"1000", "-", "1"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "b", ";"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.962643541194652*^9, 3.96264354120016*^9}, {
   3.962644024279163*^9, 3.962644025046682*^9}, {3.962644937748467*^9, 
   3.962644941611862*^9}, 3.962644974480062*^9, 3.9626450101033993`*^9, 
   3.962645127260067*^9, 3.962645698753615*^9, 3.96264789611455*^9, 
   3.9626480720251837`*^9, {3.9634308813308277`*^9, 3.963430881441175*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"a9cf8f11-bbe1-49ec-b85e-420af9ebbfbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0008439677734375`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.963430883939426*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"e6de6813-d74e-406d-b033-6ba85e0306e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1092, 709},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 para Mac OS X x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f45c3ec-582d-4921-a042-5ed79ecd6506"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 3, 98, "Title",ExpressionUUID->"14760d54-f152-4faa-b6b8-e1084a22e5f0"],
Cell[758, 27, 223, 4, 53, "Subtitle",ExpressionUUID->"826ab967-09f3-4a22-a1b6-f76db4b06c5e"],
Cell[CellGroupData[{
Cell[1006, 35, 165, 3, 67, "Section",ExpressionUUID->"1b4fc069-987f-42f4-8c82-9d291191d9f4"],
Cell[1174, 40, 590, 12, 58, "Text",ExpressionUUID->"9786a098-cdf9-43ba-b66d-663283ce6f7c"],
Cell[1767, 54, 260, 6, 35, "Text",ExpressionUUID->"19713b78-b927-4ebf-896a-a7ca897cd263"],
Cell[CellGroupData[{
Cell[2052, 64, 154, 3, 54, "Subsection",ExpressionUUID->"b17ce209-c9e8-47f7-82da-5919a05dc82c"],
Cell[2209, 69, 384, 8, 58, "Text",ExpressionUUID->"fd8b0704-48ed-43ec-943b-7f22b5a3c3af"],
Cell[CellGroupData[{
Cell[2618, 81, 887, 21, 44, "Input",ExpressionUUID->"6e798641-f580-4af3-9ef8-b2a7cd0a42ec"],
Cell[3508, 104, 583, 16, 34, "Output",ExpressionUUID->"422531e2-c504-4bc2-a018-78ef1b1d285d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4128, 125, 219, 4, 45, "Subsubsection",ExpressionUUID->"137c5f25-b354-4028-8fd1-366fa737f716"],
Cell[4350, 131, 427, 8, 58, "Text",ExpressionUUID->"cd93b25a-d452-4380-a9a5-2f0ad9148ec0"],
Cell[CellGroupData[{
Cell[4802, 143, 2018, 49, 101, "Input",ExpressionUUID->"cce02272-4e04-4ee5-a6c4-a4dd16aea861"],
Cell[6823, 194, 1046, 27, 65, "Output",ExpressionUUID->"b974c95c-e390-41a0-8303-6fe4ec8051ab"]
}, {2}]],
Cell[CellGroupData[{
Cell[7903, 226, 225, 4, 30, "Input",ExpressionUUID->"71b38073-04c0-457f-b94b-10e48c2b7b9d"],
Cell[8131, 232, 152, 2, 34, "Output",ExpressionUUID->"cf36e2a7-7531-41ee-b9d4-52913d540da2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8320, 239, 299, 5, 30, "Input",ExpressionUUID->"3749cd1e-2cb5-467a-9453-5845a32b075d"],
Cell[8622, 246, 197, 4, 34, "Output",ExpressionUUID->"8f8dd184-cc6d-4fec-933d-e9bd62142d51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8856, 255, 300, 6, 30, "Input",ExpressionUUID->"b10fce80-a4b2-4837-b408-caf6acabbe2b"],
Cell[9159, 263, 149, 2, 34, "Output",ExpressionUUID->"3a4766b7-7694-4c39-944f-50aa8acd065b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9345, 270, 244, 5, 30, "Input",ExpressionUUID->"be398401-b31e-4bc6-b9cf-842cd52b3f4b"],
Cell[9592, 277, 179, 3, 34, "Output",ExpressionUUID->"046b3985-42e9-406e-8cce-a303d4be8ea1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9808, 285, 332, 7, 30, "Input",ExpressionUUID->"dfe34bb4-38e9-48cb-9603-958c54a6345b"],
Cell[10143, 294, 377, 10, 34, "Output",ExpressionUUID->"bb8da4f5-428a-4a6a-af2a-dd6d060e8227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10557, 309, 301, 6, 30, "Input",ExpressionUUID->"0261a5cd-583a-4574-9337-260a6a3e1e0d"],
Cell[10861, 317, 337, 7, 34, "Output",ExpressionUUID->"81b1e1a8-50d0-4fa2-89a6-41131066f930"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11235, 329, 314, 6, 30, "Input",ExpressionUUID->"12e54a2c-10d9-4a91-b607-f2a45aa310e7"],
Cell[11552, 337, 221, 4, 34, "Output",ExpressionUUID->"0cd4b70a-75be-4444-aac2-4c4bdb016301"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11810, 346, 252, 5, 30, "Input",ExpressionUUID->"c1abd06f-52df-49aa-baa2-d1b72c00b57f"],
Cell[12065, 353, 321, 7, 34, "Output",ExpressionUUID->"1a8940b3-02be-4e73-927d-b6cd4d5de0cd"]
}, Open  ]],
Cell[12401, 363, 285, 6, 35, "Text",ExpressionUUID->"61f10350-ea72-404d-bf5a-062d6ce4cd41"],
Cell[CellGroupData[{
Cell[12711, 373, 175, 2, 30, "Input",ExpressionUUID->"3ab8dc14-5554-46eb-87a3-ca71eccd45bd"],
Cell[12889, 377, 584, 16, 34, "Output",ExpressionUUID->"7c799c2e-481a-47d8-97df-9d1800ceb783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13510, 398, 307, 6, 30, "Input",ExpressionUUID->"7a967c96-3ee5-4e24-b447-bba7a54025ca"],
Cell[13820, 406, 155, 2, 34, "Output",ExpressionUUID->"f9a51ae1-910b-45b5-a9fe-d98862289d44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14012, 413, 178, 2, 30, "Input",ExpressionUUID->"e75658de-af30-4445-8054-9f9c9b22deca"],
Cell[14193, 417, 583, 16, 34, "Output",ExpressionUUID->"c0ceec7c-5d00-4c52-ae3c-b3cc21e57e00"]
}, Open  ]],
Cell[14791, 436, 452, 8, 35, "Text",ExpressionUUID->"a300521d-a3f7-44d0-b9f6-437a008bf5de"],
Cell[CellGroupData[{
Cell[15268, 448, 206, 3, 44, "Input",ExpressionUUID->"7f85bd03-ca78-40b4-9908-2800ced98511"],
Cell[15477, 453, 152, 2, 34, "Output",ExpressionUUID->"901f89fa-b488-4cd2-ab77-fa2012995303"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15666, 460, 208, 3, 44, "Input",ExpressionUUID->"008b5060-d49f-43d6-8ac5-f5341ca5120f"],
Cell[15877, 465, 178, 3, 34, "Output",ExpressionUUID->"09b0955e-ee6f-4cf7-a833-7dfeac8f9688"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16092, 473, 208, 3, 44, "Input",ExpressionUUID->"70c77bbe-9fba-4c71-89d3-476300b30514"],
Cell[16303, 478, 566, 15, 34, "Output",ExpressionUUID->"a959eee0-7a96-4b9c-af4c-5a488af1f69c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16906, 498, 210, 3, 44, "Input",ExpressionUUID->"73dfcf4c-9cc1-41c5-81f6-1c0f94a0fddd"],
Cell[17119, 503, 543, 15, 34, "Output",ExpressionUUID->"27985f2e-072b-435f-9c08-7ba87c0c3d42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17699, 523, 282, 5, 44, "Input",ExpressionUUID->"24ee0930-dd58-4754-84de-cb3382e07ce3"],
Cell[17984, 530, 248, 5, 34, "Output",ExpressionUUID->"5f468a36-6db1-4d27-9111-51afbd6fc169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18269, 540, 278, 5, 44, "Input",ExpressionUUID->"789cd46a-61eb-44c7-9062-a6f5b0ccf5bf"],
Cell[18550, 547, 506, 14, 34, "Output",ExpressionUUID->"eb11cb3b-9e78-40ca-b2a2-54065539838d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19093, 566, 248, 5, 44, "Input",ExpressionUUID->"5dee73aa-7830-4452-9ef0-21fbef753f1b"],
Cell[19344, 573, 272, 6, 34, "Output",ExpressionUUID->"bb57b40d-7a95-434d-8c2a-8c3ff78d931c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19665, 585, 181, 3, 45, "Subsubsection",ExpressionUUID->"da6eda51-097e-4a58-bc01-d39effac9b8b"],
Cell[19849, 590, 253, 4, 35, "Text",ExpressionUUID->"be7921fc-2562-48ce-b406-ef392174bc59"],
Cell[CellGroupData[{
Cell[20127, 598, 240, 4, 44, "Input",ExpressionUUID->"083740ed-ed20-4a5c-b846-816cf3d97ece"],
Cell[20370, 604, 624, 16, 34, "Output",ExpressionUUID->"ee1e973a-00c9-4f75-bb6a-2d658b1048e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21031, 625, 241, 4, 44, "Input",ExpressionUUID->"978fc430-c6cf-4856-9558-c78bed66191a"],
Cell[21275, 631, 625, 16, 34, "Output",ExpressionUUID->"bc0fe050-6a8c-44b6-a91f-5a5ce42e4e2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21937, 652, 250, 4, 44, "Input",ExpressionUUID->"35109185-1f53-489c-a306-d146eeceee79"],
Cell[22190, 658, 627, 16, 34, "Output",ExpressionUUID->"a23c81da-0c0d-4d22-9d17-6b740944b594"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22854, 679, 232, 4, 44, "Input",ExpressionUUID->"c25e0606-259b-4f1a-bb19-62c66e4d0beb"],
Cell[23089, 685, 545, 14, 34, "Output",ExpressionUUID->"9088a933-bb3f-45a3-882a-59f6a201f34c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23671, 704, 401, 8, 44, "Input",ExpressionUUID->"bb3fa6fc-7682-4700-a629-d338b1c96b3d"],
Cell[24075, 714, 246, 4, 34, "Output",ExpressionUUID->"ce066e34-2475-4d01-ba9c-c3be7ca57d52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24358, 723, 176, 2, 30, "Input",ExpressionUUID->"5cfaa280-adc6-40fb-9298-85e3b577ca2c"],
Cell[24537, 727, 606, 16, 34, "Output",ExpressionUUID->"771def31-916c-4683-89eb-c723b3bde3ac"]
}, Open  ]],
Cell[25158, 746, 193, 3, 35, "Text",ExpressionUUID->"5120a043-d3e7-4df0-acdb-1c196a296e97"],
Cell[CellGroupData[{
Cell[25376, 753, 242, 4, 44, "Input",ExpressionUUID->"fe615298-7688-47e5-b712-6445909ca044"],
Cell[25621, 759, 623, 16, 34, "Output",ExpressionUUID->"8ce0f330-2839-4cc7-9b23-c1e80f4e60c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26281, 780, 176, 2, 30, "Input",ExpressionUUID->"b1c0b219-71d9-4feb-90e2-53eecc013572"],
Cell[26460, 784, 601, 16, 34, "Output",ExpressionUUID->"f919a7ed-f285-436d-80a5-bfbc12208e2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27098, 805, 243, 4, 44, "Input",ExpressionUUID->"a6cc6a3e-f295-41ee-a0df-d607c72a5683"],
Cell[27344, 811, 642, 16, 34, "Output",ExpressionUUID->"e706982c-0a21-4dd7-a04b-be0998b63fe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28023, 832, 176, 2, 30, "Input",ExpressionUUID->"b4ccb8d2-8e19-4891-83fe-2eb50ed86491"],
Cell[28202, 836, 644, 16, 34, "Output",ExpressionUUID->"308f0e83-95b0-4545-848c-fa86be9a8181"]
}, Open  ]],
Cell[28861, 855, 310, 5, 35, "Text",ExpressionUUID->"362c5301-e612-4e41-b0a5-9724d2213c13"],
Cell[CellGroupData[{
Cell[29196, 864, 207, 3, 44, "Input",ExpressionUUID->"5eb97938-6450-48b9-8de5-8b99d8f2dec9"],
Cell[29406, 869, 152, 2, 34, "Output",ExpressionUUID->"a1fafbcc-4396-4b91-8ccb-6f7cd1e11b82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29595, 876, 260, 5, 44, "Input",ExpressionUUID->"728798a8-7fe2-433a-b845-487972bf663d"],
Cell[29858, 883, 149, 2, 34, "Output",ExpressionUUID->"80337261-194e-4f0d-b6b0-89d9d2476ddf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30044, 890, 214, 3, 44, "Input",ExpressionUUID->"7957571f-43e6-44d6-a1cf-81bceecce8eb"],
Cell[30261, 895, 172, 3, 34, "Output",ExpressionUUID->"c1bccd06-432b-495f-a2bf-cc9f93094c63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30470, 903, 317, 6, 44, "Input",ExpressionUUID->"5632cf6c-0fb8-4a5e-98dd-bbd380dd25a6"],
Cell[30790, 911, 218, 4, 34, "Output",ExpressionUUID->"b6953066-fdc6-4046-a2aa-7be4b2fe468e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31045, 920, 209, 3, 44, "Input",ExpressionUUID->"79ab620f-b444-4f12-9136-8d09786befe6"],
Cell[31257, 925, 457, 9, 34, "Output",ExpressionUUID->"42d7534d-5c74-4f9d-87a7-be43c61216bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31751, 939, 288, 6, 44, "Input",ExpressionUUID->"3fa24d6e-5172-4361-997f-abede2e1653c"],
Cell[32042, 947, 652, 17, 34, "Output",ExpressionUUID->"d12f34e9-4f19-4919-8aac-768b58954d97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32731, 969, 236, 4, 44, "Input",ExpressionUUID->"6a96f7eb-7bc8-4da8-803b-ac108ee26b69"],
Cell[32970, 975, 868, 27, 34, "Output",ExpressionUUID->"fc3ebcd5-8ac8-4d23-9740-8e7a210eaf21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33875, 1007, 210, 3, 44, "Input",ExpressionUUID->"b4407917-2b04-407e-bfa0-500f416e4948"],
Cell[34088, 1012, 619, 16, 34, "Output",ExpressionUUID->"ead6b1b6-f723-4bee-a6c0-d7b37514458f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34744, 1033, 426, 9, 44, "Input",ExpressionUUID->"33701890-2fca-4497-85d9-81b0867fd927"],
Cell[35173, 1044, 391, 8, 34, "Output",ExpressionUUID->"29bffef1-ffcb-4d62-859a-f8de8145515b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35601, 1057, 206, 3, 44, "Input",ExpressionUUID->"ab719ac6-b010-4c88-a210-c4058695edb4"],
Cell[35810, 1062, 618, 16, 34, "Output",ExpressionUUID->"5e8a8dab-e925-4c7d-bc6f-7428dea1e6a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36477, 1084, 180, 3, 45, "Subsubsection",ExpressionUUID->"b6eceeb3-d1a1-4944-a868-2ae39ad26722"],
Cell[CellGroupData[{
Cell[36682, 1091, 244, 6, 30, "Input",ExpressionUUID->"6dca205f-1b97-4925-994c-75459f377cbe"],
Cell[36929, 1099, 279, 6, 49, "Output",ExpressionUUID->"7550e170-3d62-4883-9e43-f6892c932e31"]
}, Open  ]],
Cell[37223, 1108, 328, 8, 30, "Input",ExpressionUUID->"cb2a70c0-2348-4d7e-a390-29f112b55888"],
Cell[CellGroupData[{
Cell[37576, 1120, 278, 5, 30, "Input",ExpressionUUID->"8803f42e-6992-4136-ad81-c811a723a593"],
Cell[37857, 1127, 350, 8, 49, "Output",ExpressionUUID->"b80c59e7-34d9-4122-8ca0-a97287cdf6e1"]
}, Open  ]],
Cell[38222, 1138, 176, 2, 30, "Input",ExpressionUUID->"3aed1fff-73ed-4c39-83aa-5b034d93acbe"],
Cell[38401, 1142, 195, 3, 30, "Input",ExpressionUUID->"3a5a0b50-4680-45ec-b2f8-0ceff16b9cb3"],
Cell[CellGroupData[{
Cell[38621, 1149, 230, 4, 44, "Input",ExpressionUUID->"7205c77d-7f78-4fa3-8a72-a523be894a6d"],
Cell[38854, 1155, 324, 7, 49, "Output",ExpressionUUID->"6878fee4-863b-4f9c-9a5c-47593bc20bf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39215, 1167, 264, 5, 30, "Input",ExpressionUUID->"e465fe67-9817-49dc-9474-b0a9dde63bbf"],
Cell[39482, 1174, 299, 7, 49, "Output",ExpressionUUID->"b39d2bff-8882-49fb-b5d9-0ef070ca6dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39818, 1186, 200, 3, 30, "Input",ExpressionUUID->"bd01bd27-1ed6-4389-a13a-c63f9923d610"],
Cell[40021, 1191, 301, 7, 49, "Output",ExpressionUUID->"cf3e0c8d-a1f6-43dc-a54b-4685a66dfb7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40359, 1203, 268, 6, 30, "Input",ExpressionUUID->"14bcb2e3-85fe-4113-b0d6-5f504efc7937"],
Cell[40630, 1211, 301, 7, 49, "Output",ExpressionUUID->"0de9d709-b216-42f0-bcc3-38d0c2311273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40968, 1223, 197, 3, 30, "Input",ExpressionUUID->"adc71d77-7e9c-42dd-ab34-e5ea9a7097a5"],
Cell[41168, 1228, 286, 7, 49, "Output",ExpressionUUID->"e39126b9-8c0f-451d-97c6-ceb43454587e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41491, 1240, 267, 5, 30, "Input",ExpressionUUID->"76351214-d3f9-419e-baee-28141f809486"],
Cell[41761, 1247, 267, 6, 49, "Output",ExpressionUUID->"fee1e053-446c-4738-a9ef-28e12a3ee482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42065, 1258, 205, 3, 44, "Input",ExpressionUUID->"74cd74f5-3fdc-49f5-9190-017277f0d02c"],
Cell[42273, 1263, 411, 9, 37, "Output",ExpressionUUID->"fbd9fd56-40d7-433b-a491-c82218d887bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42721, 1277, 205, 3, 44, "Input",ExpressionUUID->"73f5439b-c384-4c18-8566-ab8d95745941"],
Cell[42929, 1282, 370, 9, 49, "Output",ExpressionUUID->"d010410f-e04b-4f0c-8c5f-dc918485c536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43336, 1296, 207, 3, 44, "Input",ExpressionUUID->"4924bdb9-6359-4a2d-8599-5786ae277bfc"],
Cell[43546, 1301, 420, 11, 49, "Output",ExpressionUUID->"b8f1052f-3135-4e68-84aa-4dc37648b2d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44003, 1317, 207, 3, 44, "Input",ExpressionUUID->"9dff038f-32e6-4404-910e-7f5c7c363ba8"],
Cell[44213, 1322, 259, 7, 49, "Output",ExpressionUUID->"236b304e-9d2f-479b-9ea1-03785d8aa102"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44521, 1335, 170, 3, 45, "Subsubsection",ExpressionUUID->"a13b62fc-8008-4469-b725-a153b258e46c"],
Cell[44694, 1340, 1493, 23, 94, "Input",ExpressionUUID->"56c25cc0-4644-4529-a6f4-9d4302408669"],
Cell[CellGroupData[{
Cell[46212, 1367, 205, 3, 44, "Input",ExpressionUUID->"06a3613d-73fa-4922-abf0-9de5b58d1b80"],
Cell[46420, 1372, 149, 2, 34, "Output",ExpressionUUID->"9e192180-93fb-4c31-9d5d-04cd687bfd12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46606, 1379, 205, 3, 44, "Input",ExpressionUUID->"7b8dfa4c-df88-4723-9b22-7bf6bc4cff38"],
Cell[46814, 1384, 149, 2, 34, "Output",ExpressionUUID->"a05cdd90-d5f7-43c3-8091-dda7b3a7c7ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47000, 1391, 206, 3, 44, "Input",ExpressionUUID->"4804a1e4-4c57-4525-9030-5c9f7687b2c7"],
Cell[47209, 1396, 174, 3, 49, "Output",ExpressionUUID->"ac5dc542-08ba-49dd-a1c0-faa2afecb0ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47420, 1404, 283, 5, 44, "Input",ExpressionUUID->"80337a37-66fc-4b51-a01b-4818204e9a07"],
Cell[47706, 1411, 156, 2, 34, "Output",ExpressionUUID->"13915ec6-32bc-49ea-87c4-0d2d99a57b13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47899, 1418, 221, 3, 44, "Input",ExpressionUUID->"86fce3b7-b3e2-4796-9b37-aa761faf218a"],
Cell[48123, 1423, 211, 5, 64, "Output",ExpressionUUID->"e7953db8-a80f-4c1e-a790-4db545d9c42b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48371, 1433, 247, 4, 44, "Input",ExpressionUUID->"16f4e112-affb-4769-b80a-2338397a78db"],
Cell[48621, 1439, 167, 2, 34, "Output",ExpressionUUID->"a0aeb41c-0fe8-40e0-b3e1-c24ff66295b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48825, 1446, 243, 4, 44, "Input",ExpressionUUID->"3fd16929-1fd2-4fa4-8651-16897d2dfacd"],
Cell[49071, 1452, 167, 2, 34, "Output",ExpressionUUID->"d3b08f39-d413-4a5d-a434-c2ccd407081a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49287, 1460, 177, 3, 45, "Subsubsection",ExpressionUUID->"271b7638-74d1-4d5f-8f7e-e9a3ab3a52ae"],
Cell[CellGroupData[{
Cell[49489, 1467, 229, 4, 30, "Input",ExpressionUUID->"3ce73aea-d4c2-42b0-8d5b-6643263d283b"],
Cell[49721, 1473, 230, 4, 34, "Output",ExpressionUUID->"a637f78b-cf5b-4250-96a1-a03cdd392d76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49988, 1482, 235, 4, 44, "Input",ExpressionUUID->"4a35182a-9891-45a7-a120-06f4cd720aac"],
Cell[50226, 1488, 225, 4, 34, "Output",ExpressionUUID->"8ae4218e-6618-42ac-b984-edd436e68e49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50488, 1497, 193, 3, 30, "Input",ExpressionUUID->"f2d0ae75-43ef-4dfa-a68f-3be904bf9b81"],
Cell[50684, 1502, 14992, 335, 143, "Output",ExpressionUUID->"4ba3416d-2662-4100-a370-42cdfd861232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65713, 1842, 203, 3, 44, "Input",ExpressionUUID->"656a7dbc-1ee6-458a-be5c-e2dca95f7829"],
Cell[65919, 1847, 247, 5, 34, "Output",ExpressionUUID->"54f4515c-63e6-4e7d-bdc7-ba5ac85937af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66203, 1857, 327, 6, 44, "Input",ExpressionUUID->"23e2dabc-b236-4dae-b99a-2e0272e7b020"],
Cell[66533, 1865, 313, 7, 34, "Output",ExpressionUUID->"2c55f54e-37d5-4583-b4a8-b6a309781506"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66883, 1877, 236, 4, 44, "Input",ExpressionUUID->"41df8b50-9241-4c01-b8b4-c5bf0a288c3d"],
Cell[67122, 1883, 213, 4, 34, "Output",ExpressionUUID->"c25b4809-0eaf-45a3-b767-406ce70585d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67372, 1892, 192, 3, 30, "Input",ExpressionUUID->"b43154ee-ced3-4b3f-af93-35a08b96074b"],
Cell[67567, 1897, 20796, 415, 214, "Output",ExpressionUUID->"453241f7-28e0-424f-8d43-915e9c4733c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88400, 2317, 300, 5, 44, "Input",ExpressionUUID->"af18a9d5-b968-4881-b881-39db2af1bc93"],
Cell[88703, 2324, 365, 7, 34, "Output",ExpressionUUID->"541b271d-a511-431a-8c73-0323911ce2ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89105, 2336, 305, 7, 46, "Input",ExpressionUUID->"fa6e0277-85c9-4a62-a75b-a46456b80fee"],
Cell[89413, 2345, 291, 6, 34, "Output",ExpressionUUID->"4421cc66-2f0d-438a-a6ff-4567fe115fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89741, 2356, 479, 10, 46, "Input",ExpressionUUID->"1c74b1e9-6f9c-4848-b8a9-3aa7135161c8"],
Cell[90223, 2368, 281, 6, 34, "Output",ExpressionUUID->"384b6c5c-f519-4173-9e73-b2f8881d7521"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90541, 2379, 323, 7, 46, "Input",ExpressionUUID->"a880efdd-7a8f-4335-8375-a75a8da914c6"],
Cell[90867, 2388, 231, 5, 34, "Output",ExpressionUUID->"bf79e977-fd08-4e36-8ff9-516e170205ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91135, 2398, 427, 11, 46, "Input",ExpressionUUID->"ae43348b-4923-4baa-a255-529054a4c3ef"],
Cell[91565, 2411, 240, 4, 34, "Output",ExpressionUUID->"084a83d4-438c-44d6-bbcd-9e271f44d272"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91842, 2420, 417, 10, 44, "Input",ExpressionUUID->"b4747448-49a1-48c1-944c-07fe6e40d3a2"],
Cell[92262, 2432, 952, 29, 34, "Output",ExpressionUUID->"2e1fae9b-839d-4448-ab82-4fcd6a693a75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93251, 2466, 203, 3, 30, "Input",ExpressionUUID->"1ef3e79a-f1ed-4b55-8c39-f7a11eaac7f2"],
Cell[93457, 2471, 14424, 330, 118, "Output",ExpressionUUID->"4fe68830-9413-490f-9cd1-8c3c42247aca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107918, 2806, 234, 4, 44, "Input",ExpressionUUID->"0afee2b1-8b86-4659-ac35-499c11d25d73"],
Cell[108155, 2812, 273, 6, 34, "Output",ExpressionUUID->"79ccd81b-a64a-457b-b109-eaffad5dab92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108465, 2823, 332, 7, 44, "Input",ExpressionUUID->"929a5531-02de-4958-b250-492722f50c47"],
Cell[108800, 2832, 407, 10, 34, "Output",ExpressionUUID->"19b136d1-ae64-4066-b38f-20be98481889"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109244, 2847, 201, 3, 30, "Input",ExpressionUUID->"d58dda27-0e04-4af2-9b64-d8cd71f76d15"],
Cell[109448, 2852, 15797, 343, 165, "Output",ExpressionUUID->"8995dc01-5366-4771-b8f7-d6e305573d57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125282, 3200, 383, 8, 44, "Input",ExpressionUUID->"a104949f-e27a-4eab-91f5-b593cc28b683"],
Cell[125668, 3210, 433, 11, 34, "Output",ExpressionUUID->"4a7d2c09-f8f0-4fb7-8761-f8a81c7a3035"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126162, 3228, 163, 3, 54, "Subsection",ExpressionUUID->"b63d019f-2824-4935-a325-e9f049e6a37c"],
Cell[CellGroupData[{
Cell[126350, 3235, 463, 11, 30, "Input",ExpressionUUID->"52a0b986-2075-4498-ad42-73d2ec07fb02"],
Cell[126816, 3248, 378, 9, 34, "Output",ExpressionUUID->"41385988-5a75-4555-adf3-cd6697b3a3dc"]
}, Open  ]],
Cell[127209, 3260, 325, 7, 35, "Text",ExpressionUUID->"aab0ccc5-b653-4d70-bbc6-279261cc7cdc"],
Cell[CellGroupData[{
Cell[127559, 3271, 207, 3, 44, "Input",ExpressionUUID->"dea6b5a2-2a2c-4964-a5c4-e1298ecbc73f"],
Cell[127769, 3276, 709, 21, 48, "Output",ExpressionUUID->"c11fe91a-b5dc-4b41-a108-6f67159225d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128515, 3302, 205, 3, 44, "Input",ExpressionUUID->"e0056eda-3939-40e7-8e01-80f14c24752e"],
Cell[128723, 3307, 13587, 350, 278, "Output",ExpressionUUID->"e3d7b6bc-787f-4c81-be2a-9059566acdcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142347, 3662, 225, 4, 30, "Input",ExpressionUUID->"3f745916-7f36-48e8-bc1a-d77d848d0120"],
Cell[142575, 3668, 173, 2, 34, "Output",ExpressionUUID->"2eeea770-e4db-4b01-ae2a-841af6f4c0b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142785, 3675, 229, 4, 30, "Input",ExpressionUUID->"0d6aa4d8-7ea5-45c5-8eab-a43ae687f353"],
Cell[143017, 3681, 220, 4, 34, "Output",ExpressionUUID->"05cdc735-650c-4b9d-a47d-c28b517871a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143274, 3690, 300, 6, 30, "Input",ExpressionUUID->"9405ff30-f293-4097-af55-ed129a41767a"],
Cell[143577, 3698, 228, 4, 34, "Output",ExpressionUUID->"b2570684-ce46-494f-9c28-e0ca252b8312"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143842, 3707, 193, 4, 30, "Input",ExpressionUUID->"6ea7f6cc-3ee8-43ff-8427-80d520d9f9eb"],
Cell[144038, 3713, 149, 2, 34, "Output",ExpressionUUID->"71e7252a-8a6f-4e98-b0a9-2844a27a445b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144224, 3720, 383, 8, 30, "Input",ExpressionUUID->"10894028-cb98-406b-8b35-8b35ac9e8d08"],
Cell[144610, 3730, 195, 3, 34, "Output",ExpressionUUID->"99481da9-63cb-4c32-8ed9-d538cbe70ee0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144842, 3738, 179, 2, 30, "Input",ExpressionUUID->"f731bfd0-c926-4562-8b5e-481803947a6c"],
Cell[145024, 3742, 373, 9, 34, "Output",ExpressionUUID->"5a3a34a6-2a33-4e6c-affd-bfb0e757e9de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145434, 3756, 205, 3, 44, "Input",ExpressionUUID->"d1f4627b-1604-45dd-bd52-3cf47034455e"],
Cell[145642, 3761, 173, 2, 34, "Output",ExpressionUUID->"dae424a1-def2-49f4-aea9-8b4c9d17a782"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145864, 3769, 156, 2, 54, "Subsection",ExpressionUUID->"bbb9a47a-d69d-45bc-9c52-878cef5f7496"],
Cell[CellGroupData[{
Cell[146045, 3775, 768, 15, 44, "Input",ExpressionUUID->"377a2318-7669-4668-a0fc-2366ad2a1bc2"],
Cell[146816, 3792, 672, 13, 34, "Output",ExpressionUUID->"94a64f46-56a8-4972-9866-37f8209ca39f"]
}, Open  ]],
Cell[147503, 3808, 277, 6, 35, "Text",ExpressionUUID->"1eefe163-9ce3-40bd-97ea-5590ab9515b9"],
Cell[CellGroupData[{
Cell[147805, 3818, 215, 3, 30, "Input",ExpressionUUID->"e0373baa-4aba-4bf7-847c-959a4ad8a97d"],
Cell[148023, 3823, 185, 2, 34, "Output",ExpressionUUID->"45614fcc-6a88-4823-b40e-e7ff38aae5f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148245, 3830, 246, 5, 30, "Input",ExpressionUUID->"d8bbff31-7738-44fc-991d-27fc91c21e0c"],
Cell[148494, 3837, 188, 3, 34, "Output",ExpressionUUID->"d884b03f-3c9d-424a-8f39-bfbeba902a5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148719, 3845, 210, 4, 30, "Input",ExpressionUUID->"1ed2b674-70b5-4f08-8f7d-138f123a89b8"],
Cell[148932, 3851, 284, 6, 34, "Output",ExpressionUUID->"2cdd7309-be48-4cd5-bb95-d5466041c862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149253, 3862, 233, 5, 30, "Input",ExpressionUUID->"79de83d1-de7c-43de-88f9-1ce5a6fbf668"],
Cell[149489, 3869, 419, 9, 28, "Message",ExpressionUUID->"3f196222-1180-4709-ac78-9091aa9696c4"],
Cell[149911, 3880, 760, 16, 34, "Output",ExpressionUUID->"ba8c57e7-f1a2-406e-841f-35493b792436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150708, 3901, 206, 4, 30, "Input",ExpressionUUID->"18f18487-e1e7-4fd6-9093-16925403fbbb"],
Cell[150917, 3907, 177, 3, 34, "Output",ExpressionUUID->"34fcd0c0-a421-462f-83ee-9af87c999aca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151131, 3915, 231, 5, 30, "Input",ExpressionUUID->"2a1ac654-aae0-4103-a890-c2f7f0fa0c09"],
Cell[151365, 3922, 189, 3, 34, "Output",ExpressionUUID->"fbb4feaa-dfab-484d-8c48-57623afe536e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151591, 3930, 212, 4, 30, "Input",ExpressionUUID->"4a767926-11bf-4f89-96ab-e6deeb6059df"],
Cell[151806, 3936, 175, 3, 34, "Output",ExpressionUUID->"4a4bf151-f803-4912-86bf-7918fd0fe853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152018, 3944, 233, 5, 30, "Input",ExpressionUUID->"2e139e93-1a9e-437b-8fa4-c0cd75a4da99"],
Cell[152254, 3951, 421, 9, 28, "Message",ExpressionUUID->"36d24279-2877-4877-ade7-2d17d8d9209e"],
Cell[152678, 3962, 760, 16, 34, "Output",ExpressionUUID->"7bdc4667-7ae7-4dfa-aafe-e92d14edb715"]
}, Open  ]],
Cell[153453, 3981, 240, 6, 35, "Text",ExpressionUUID->"0bf077a4-86e8-482b-b093-b9a225860562"],
Cell[CellGroupData[{
Cell[153718, 3991, 208, 4, 44, "Input",ExpressionUUID->"ff1aa6a2-0369-41ad-95da-24f9fd98dc0b"],
Cell[153929, 3997, 289, 6, 34, "Output",ExpressionUUID->"12436801-4aea-4a8b-bcf4-0a0d7ddcef58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154255, 4008, 211, 4, 44, "Input",ExpressionUUID->"d0d3c869-1330-4fcd-bfd0-fcac5cf793e0"],
Cell[154469, 4014, 389, 8, 34, "Output",ExpressionUUID->"27d72829-e3a3-409d-b809-a6113b814230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154895, 4027, 214, 4, 44, "Input",ExpressionUUID->"ded78de4-9405-4a08-b119-b5c86b444c66"],
Cell[155112, 4033, 654, 14, 34, "Output",ExpressionUUID->"1aeed1e2-da6e-44c6-ac77-d6e8678fb3bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155815, 4053, 158, 3, 54, "Subsection",ExpressionUUID->"859e0c02-f94e-4ef5-8db6-d947361aebb8"],
Cell[CellGroupData[{
Cell[155998, 4060, 3836, 81, 427, "Input",ExpressionUUID->"8e40d8d2-4e5c-4295-8b85-5497404a2c7a"],
Cell[159837, 4143, 48348, 931, 335, "Output",ExpressionUUID->"1bc672d7-0d33-4623-8443-89a49c737fe7"]
}, Open  ]],
Cell[208200, 5077, 301, 9, 35, "Text",ExpressionUUID->"d136684b-9af0-4956-94e4-0a35bd0daf3c"],
Cell[CellGroupData[{
Cell[208526, 5090, 270, 6, 44, "Input",ExpressionUUID->"6f9642e1-9f04-43f9-bc48-ae48047233d5"],
Cell[208799, 5098, 26562, 486, 65, "Output",ExpressionUUID->"6d7aed80-4624-49a5-a524-7ea6e2ea8bf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235398, 5589, 478, 12, 44, "Input",ExpressionUUID->"0f3da45b-a9ef-47e4-804a-73f129daed53"],
Cell[235879, 5603, 22928, 412, 227, "Output",ExpressionUUID->"95588609-1e81-49f9-a00b-64659dfd84e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258844, 6020, 340, 9, 44, "Input",ExpressionUUID->"cda7b6c9-251f-46c0-a59a-56be84a3f951"],
Cell[259187, 6031, 34205, 639, 335, "Output",ExpressionUUID->"483d8e66-fd9b-4589-8776-e550ab217a3c"]
}, Open  ]],
Cell[293407, 6673, 271, 6, 35, "Text",ExpressionUUID->"56c22222-5810-4d7e-a463-632a6f6070dc"],
Cell[CellGroupData[{
Cell[293703, 6683, 351, 8, 44, "Input",ExpressionUUID->"3f16a556-6a02-455c-996c-1e61ca87b573"],
Cell[294057, 6693, 155718, 2892, 807, "Output",ExpressionUUID->"7d16d58b-9f88-4d6a-9129-2fb5a772f562"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449824, 9591, 182, 3, 54, "Subsection",ExpressionUUID->"a6172a5a-014e-4ce3-831a-75689d1cf160"],
Cell[450009, 9596, 322, 7, 35, "Text",ExpressionUUID->"83ee6888-aaf0-4113-a516-75888cda865e"],
Cell[450334, 9605, 232, 6, 35, "Text",ExpressionUUID->"f5f0dfd4-f121-4c7b-b9ce-39a97cca016b"],
Cell[CellGroupData[{
Cell[450591, 9615, 794, 23, 44, "Input",ExpressionUUID->"a89e73d8-df1f-4c94-984d-79fa3303c91b"],
Cell[451388, 9640, 10071, 212, 61, "Output",ExpressionUUID->"b48bad03-2d72-49b4-aac5-4e37bb8e8eda"]
}, Open  ]],
Cell[461474, 9855, 259, 6, 35, "Text",ExpressionUUID->"0ec401c6-5fe8-4e75-bde7-8029a9362996"],
Cell[CellGroupData[{
Cell[461758, 9865, 487, 13, 44, "Input",ExpressionUUID->"437a7f42-6e27-419f-9955-de180b810252"],
Cell[462248, 9880, 4409, 95, 61, "Output",ExpressionUUID->"6064b566-8f20-43d9-942b-df7e0f9d2e36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466694, 9980, 490, 13, 46, "Input",ExpressionUUID->"f98a4b2c-184d-4019-be9f-fdcbd2afc0fa"],
Cell[467187, 9995, 48552, 799, 427, 16397, 271, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4e59241d-ec31-4d87-8661-65896db6feb1"]
}, Open  ]],
Cell[515754, 10797, 178, 3, 35, "Text",ExpressionUUID->"2fe1eedd-1473-4af8-b8db-23cabb588dba"],
Cell[CellGroupData[{
Cell[515957, 10804, 439, 13, 44, "Input",ExpressionUUID->"f4476b58-fd68-4263-a661-d6d3c05e2eb1"],
Cell[516399, 10819, 6054, 168, 316, "Output",ExpressionUUID->"ba075e0f-94f2-495a-8aeb-840be82b58a4"]
}, Open  ]],
Cell[522468, 10990, 258, 6, 35, "Text",ExpressionUUID->"8276585c-dee1-4673-8d81-2d674b4650dd"],
Cell[CellGroupData[{
Cell[522751, 11000, 284, 5, 44, "Input",ExpressionUUID->"8c7b53a3-5e4c-4f39-96b5-49c158893440"],
Cell[523038, 11007, 8045, 183, 59, "Output",ExpressionUUID->"3f11c1c0-d80b-47ba-bbd2-e8a2fa8032a9"]
}, Open  ]],
Cell[531098, 11193, 394, 8, 58, "Text",ExpressionUUID->"c8af6d6e-5cb3-48af-b58e-51af0456c942"],
Cell[CellGroupData[{
Cell[531517, 11205, 229, 5, 30, "Input",ExpressionUUID->"6bd759f0-170a-481c-a347-1e9dd8ea1831"],
Cell[531749, 11212, 181, 4, 34, "Output",ExpressionUUID->"9fd49e54-8af1-486f-a467-cff3cd730d34"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[531991, 11223, 204, 4, 67, "Section",ExpressionUUID->"84a7e2f7-7bf9-43fa-b8c2-a75da576ef8b"],
Cell[CellGroupData[{
Cell[532220, 11231, 152, 3, 54, "Subsection",ExpressionUUID->"88c3f1fe-525a-4d3d-975b-0b6f61921c67"],
Cell[CellGroupData[{
Cell[532397, 11238, 196, 4, 30, "Input",ExpressionUUID->"8038f1ce-4269-45e2-abb8-31f3518fb4d1"],
Cell[532596, 11244, 20981, 415, 214, "Output",ExpressionUUID->"f5c4215b-a2c0-4e0d-bcf8-3ade723e95d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553614, 11664, 314, 8, 46, "Input",ExpressionUUID->"558a4660-519f-4bf2-8bdc-c8c00c3ab5ad"],
Cell[553931, 11674, 319, 7, 34, "Output",ExpressionUUID->"cc6ef4b0-4453-42c7-afe5-df7cc4d08062"]
}, Open  ]],
Cell[554265, 11684, 408, 8, 35, "Text",ExpressionUUID->"9dce4900-4fdc-4d08-8e0c-bc86ba3c118d"],
Cell[554676, 11694, 316, 8, 46, "Input",ExpressionUUID->"d4b48d0e-0089-4841-8978-26cb9ab90b03"],
Cell[554995, 11704, 313, 7, 58, "Text",ExpressionUUID->"8f4b0b57-7626-44bb-b5f6-ffc7b481a2bd"],
Cell[CellGroupData[{
Cell[555333, 11715, 989, 21, 172, "Input",ExpressionUUID->"7c27983c-e095-473b-9596-27ab98811b9c"],
Cell[556325, 11738, 316, 7, 34, "Output",ExpressionUUID->"ed6630e5-6d96-4dde-8423-9aeac94987ee"]
}, Open  ]],
Cell[556656, 11748, 622, 11, 35, "Text",ExpressionUUID->"d4280692-7eef-4e3b-a1a0-5f6f397d49ab"],
Cell[CellGroupData[{
Cell[557303, 11763, 925, 23, 151, "Input",ExpressionUUID->"9c3ee02f-83e0-4fc9-85c2-7bff24ac24ce"],
Cell[558231, 11788, 156, 3, 34, "Output",ExpressionUUID->"aa5691b4-598d-4b59-837b-0fbcd23fb10f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[558436, 11797, 153, 3, 54, "Subsection",ExpressionUUID->"fb18bf43-34ab-452e-b1fe-f7db95dcd12f"],
Cell[558592, 11802, 197, 4, 30, "Input",ExpressionUUID->"8ff3fa05-0d3e-41be-807c-44b433552380"],
Cell[558792, 11808, 314, 7, 35, "Text",ExpressionUUID->"d540823e-37b9-4d46-b0db-432bdec32a63"],
Cell[CellGroupData[{
Cell[559131, 11819, 1024, 22, 229, "Input",ExpressionUUID->"4b6e8d14-55da-4121-bfc5-7f05f286e352"],
Cell[560158, 11843, 293, 7, 34, "Output",ExpressionUUID->"8ff80f78-59e3-48cc-8056-b00557f0e6da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560488, 11855, 948, 26, 193, "Input",ExpressionUUID->"110a24f9-7415-4793-9d4f-afac242e3d71"],
Cell[561439, 11883, 154, 3, 34, "Output",ExpressionUUID->"d6d472ad-707a-47ae-bd1c-cf61c9f27029"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561642, 11892, 151, 3, 54, "Subsection",ExpressionUUID->"1eafac3b-e5e7-4a3a-a8c7-e131de469f51"],
Cell[561796, 11897, 197, 4, 30, "Input",ExpressionUUID->"33815f75-af27-4010-9b1b-f4c5d3e0e6a9"],
Cell[561996, 11903, 370, 7, 35, "Text",ExpressionUUID->"18beb080-4ac6-4365-a45e-33070c0188d3"],
Cell[CellGroupData[{
Cell[562391, 11914, 1039, 22, 187, "Input",ExpressionUUID->"ee2b118c-5155-4863-9b6d-513987f097b3"],
Cell[563433, 11938, 293, 7, 34, "Output",ExpressionUUID->"2c8977e7-c902-4444-899d-59a0f028e151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563763, 11950, 819, 23, 151, "Input",ExpressionUUID->"01d410fc-e585-4356-a4f5-37a955ed93cc"],
Cell[564585, 11975, 153, 3, 34, "Output",ExpressionUUID->"ab4d146c-3a1a-475e-a9dd-f8ec49ca8b18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564775, 11983, 212, 4, 44, "Input",ExpressionUUID->"98d5b51a-1410-45fc-9d17-1104907f4806"],
Cell[564990, 11989, 154, 3, 34, "Output",ExpressionUUID->"80e10c48-a0d6-423e-8e02-0a8556a8388d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565205, 11999, 267, 4, 67, "Section",ExpressionUUID->"13e2ff16-dc00-4a6d-9590-9c09032af77c"],
Cell[CellGroupData[{
Cell[565497, 12007, 170, 3, 54, "Subsection",ExpressionUUID->"83d0b7fa-0bb9-4c88-9b0e-b244262f86fc"],
Cell[565670, 12012, 266, 6, 32, "Item",ExpressionUUID->"22d7fb22-6522-443b-a2d5-be3657f0b0bd"],
Cell[565939, 12020, 250, 6, 32, "Item",ExpressionUUID->"577eccf9-478c-4171-9e61-65b6f201e2d7"],
Cell[CellGroupData[{
Cell[566214, 12030, 157, 3, 45, "Subsubsection",ExpressionUUID->"c72ceb84-4a52-499c-be0b-864aecc7ce76"],
Cell[566374, 12035, 359, 7, 53, "Item",ExpressionUUID->"b115bf47-8529-4aa9-bc35-0d700faf417b"],
Cell[566736, 12044, 288, 6, 32, "Item",ExpressionUUID->"985dbc75-3a5c-42bf-a26c-ffbe8e57bada"],
Cell[567027, 12052, 319, 7, 32, "Item",ExpressionUUID->"aa64b65e-0c1c-43a1-90d0-e274ea1080f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567383, 12064, 164, 3, 45, "Subsubsection",ExpressionUUID->"3f82233a-478d-45e6-9aa7-d5bea92ca83d"],
Cell[567550, 12069, 210, 4, 32, "Item",ExpressionUUID->"34840395-79bc-4d0f-8f2c-33ab3379c10c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567797, 12078, 214, 4, 45, "Subsubsection",ExpressionUUID->"988ca5a2-1996-48eb-b75e-8ae5016d47af"],
Cell[568014, 12084, 219, 5, 32, "Item",ExpressionUUID->"b9fa46b2-59ae-4cf8-a7d7-9909f356d02b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568270, 12094, 159, 3, 45, "Subsubsection",ExpressionUUID->"4afc66a8-aa4f-4084-9396-0a7dd0c0ae0f"],
Cell[568432, 12099, 222, 5, 32, "Item",ExpressionUUID->"3e71c661-44ab-444e-ba5d-18168460b791"],
Cell[568657, 12106, 234, 6, 32, "Item",ExpressionUUID->"13906e2e-3593-4361-b6c3-5258e96f8053"],
Cell[568894, 12114, 242, 6, 32, "Item",ExpressionUUID->"04517917-7829-4309-8085-f41608c089d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569185, 12126, 153, 3, 54, "Subsection",ExpressionUUID->"baa4d0a4-4832-46a0-a839-07331cb19908"],
Cell[569341, 12131, 244, 6, 32, "Item",ExpressionUUID->"de677f9d-a6b2-4d15-99b9-a02f1eeda5ad"],
Cell[569588, 12139, 266, 6, 32, "Item",ExpressionUUID->"92ce4ad1-6adf-49d3-b368-8f5c52fa058c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569891, 12150, 156, 3, 54, "Subsection",ExpressionUUID->"84a28348-a700-4bb7-8390-a7b965a901ed"],
Cell[570050, 12155, 186, 3, 32, "Item",ExpressionUUID->"415795ae-5001-4225-aa7b-b2157d8729c3"],
Cell[CellGroupData[{
Cell[570261, 12162, 153, 3, 45, "Subsubsection",ExpressionUUID->"21afe0fc-4a5c-4bed-8597-652593e4d145"],
Cell[570417, 12167, 275, 6, 32, "Item",ExpressionUUID->"a24685bd-8079-45d8-bb76-a22014650785"],
Cell[570695, 12175, 260, 6, 32, "Item",ExpressionUUID->"c4e710ca-1997-4dc3-b4f4-4e52e5c0ae07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570992, 12186, 156, 3, 45, "Subsubsection",ExpressionUUID->"7ced9fc5-8b2c-47c3-aec4-92badced1c42"],
Cell[571151, 12191, 246, 6, 32, "Item",ExpressionUUID->"66caa53e-d995-4ae0-818d-0740429f12b1"],
Cell[571400, 12199, 242, 6, 32, "Item",ExpressionUUID->"65d661ad-f213-44a8-a621-c5c74ad3cccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571679, 12210, 154, 3, 45, "Subsubsection",ExpressionUUID->"527df464-7566-4a0b-b8db-eefd077651a7"],
Cell[571836, 12215, 279, 6, 32, "Item",ExpressionUUID->"33cc84d8-e94a-4c99-9cdd-46e0990ac325"],
Cell[572118, 12223, 229, 5, 32, "Item",ExpressionUUID->"dad5c6de-0133-4877-b1c5-9ecbd8c25f3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[572408, 12235, 152, 3, 67, "Section",ExpressionUUID->"9d21c77a-cb17-493a-8729-8de2d023b666"],
Cell[CellGroupData[{
Cell[572585, 12242, 185, 3, 45, "Subsubsection",ExpressionUUID->"dbeb0eea-b2c7-4a7b-b10f-015ca189f376"],
Cell[572773, 12247, 1005, 16, 81, "Text",ExpressionUUID->"72aaf36f-46b8-4a7b-b184-45fd6b49ce44"],
Cell[573781, 12265, 315, 9, 46, "Input",ExpressionUUID->"060d2502-5343-4058-bb59-ce3b6ec01110"],
Cell[CellGroupData[{
Cell[574121, 12278, 364, 11, 46, "Input",ExpressionUUID->"50fe16bc-5a80-4fe3-8851-d6f288b1dba3"],
Cell[574488, 12291, 224, 5, 37, "Output",ExpressionUUID->"99345698-b6ed-48ba-b329-6de8358eb143"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574749, 12301, 533, 13, 172, "Input",ExpressionUUID->"413cbd51-5597-4a2f-bfd1-7c3be9e4fc1d"],
Cell[575285, 12316, 293, 7, 34, "Output",ExpressionUUID->"1e832ac0-72af-46b2-b8eb-1d4beb2b2504"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575615, 12328, 1089, 24, 294, "Input",ExpressionUUID->"cb192629-7c65-4e45-bf4e-e857d58608c0"],
Cell[576707, 12354, 219, 5, 34, "Output",ExpressionUUID->"11c4ef08-eec8-4518-a430-3e3819c23306"]
}, Open  ]],
Cell[576941, 12362, 315, 7, 35, "Text",ExpressionUUID->"91bfb24e-30f5-409f-a271-cc402431b0b0"],
Cell[CellGroupData[{
Cell[577281, 12373, 1426, 34, 265, "Input",ExpressionUUID->"236ab3fe-f2f6-4141-9b4f-abd42b3f4337"],
Cell[578710, 12409, 218, 5, 34, "Output",ExpressionUUID->"14e420d2-10d3-41d5-b698-d00f9f6da5be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578965, 12419, 1273, 29, 265, "Input",ExpressionUUID->"a9cf8f11-bbe1-49ec-b85e-420af9ebbfbc"],
Cell[580241, 12450, 219, 5, 34, "Output",ExpressionUUID->"e6de6813-d74e-406d-b033-6ba85e0306e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

