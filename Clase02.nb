(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    559814,      11744]
NotebookOptionsPosition[    533763,      11284]
NotebookOutlinePosition[    534154,      11300]
CellTagsIndexPosition[    534111,      11297]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["De ecuaciones a c\[OAcute]digo", "Title",
 CellChangeTimes->{{3.962074872395377*^9, 
  3.9620748788752832`*^9}},ExpressionUUID->"14760d54-f152-4faa-b6b8-\
e1084a22e5f0"],

Cell["Estructuras de datos y loops", "Subtitle",
 CellChangeTimes->{{3.962075124893395*^9, 3.962075130741765*^9}, {
  3.962075209074247*^9, 
  3.962075214870891*^9}},ExpressionUUID->"826ab967-09f3-4a22-a1b6-\
f76db4b06c5e"],

Cell[CellGroupData[{

Cell["Estructuras de datos", "Section",
 CellChangeTimes->{{3.9623885660719*^9, 
  3.9623885696581573`*^9}},ExpressionUUID->"1b4fc069-987f-42f4-8c82-\
9d291191d9f4"],

Cell[TextData[{
 "En ciencias de la computaci\[OAcute]n, las ",
 StyleBox["estructuras de datos",
  FontWeight->"Bold"],
 " son formas de organizar y almacenar datos para que puedan utilizarse de \
manera eficiente . Definen c\[OAcute]mo se organizan los datos en la memoria \
y c\[OAcute]mo se realizan operaciones como el acceso, la inserci\[OAcute]n, \
la eliminaci\[OAcute]n y la b\[UAcute]squeda ."
}], "Text",
 CellChangeTimes->{{3.962442981769415*^9, 
  3.962442992324274*^9}},ExpressionUUID->"9786a098-cdf9-43ba-b66d-\
663283ce6f7c"],

Cell["\<\
En esta secci\[OAcute]n estudiaremos las estructuras de datos m\[AAcute]s \
importantes en Wolfram Language.\
\>", "Text",
 CellChangeTimes->{{3.962443108599864*^9, 
  3.9624431773293943`*^9}},ExpressionUUID->"19713b78-b927-4ebf-896a-\
a7ca897cd263"],

Cell[CellGroupData[{

Cell["Listas", "Subsection",
 CellChangeTimes->{{3.962389649327077*^9, 
  3.962389650127386*^9}},ExpressionUUID->"b17ce209-c9e8-47f7-82da-\
5919a05dc82c"],

Cell["\<\
Una lista es una colecci\[OAcute]n ordenada de elementos encerrados entre \
llaves { }. Sus elementos pueden ser de cualquier tipo: n\[UAcute]meros, s\
\[IAcute]mbolos, expresiones, e incluso otras listas.\
\>", "Text",
 CellChangeTimes->{
  3.9624480377563066`*^9, {3.9624503680256023`*^9, 
   3.96245037096141*^9}},ExpressionUUID->"fd8b0704-48ed-43ec-943b-\
7f22b5a3c3af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "=", 
  RowBox[{"{", 
   RowBox[{
   "3.14", ",", "2.72", ",", "\"\<hola\>\"", ",", "\"\<mundo\>\"", ",", "x", 
    ",", "y", ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"30", ",", "40"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
    RowBox[{"Sin", "[", "a", "]"}], ",", 
    RowBox[{"Cos", "[", "b", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9623898776515417`*^9, 3.96238990869975*^9}, {
  3.962390119455377*^9, 3.962390119515486*^9}, {3.96239040851206*^9, 
  3.962390419635261*^9}, {3.962392550607579*^9, 3.962392555589229*^9}, {
  3.962448166316703*^9, 3.96244821556702*^9}, {3.962452013715455*^9, 
  3.9624520923383007`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"6e798641-f580-4af3-9ef8-b2a7cd0a42ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.14`", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.962390134876584*^9, 3.962390422459649*^9, 3.962392556808811*^9, {
   3.962448209326706*^9, 3.962448216447695*^9}, 3.962450436365889*^9, 
   3.962451629939611*^9, 3.96245166679086*^9, 3.96245209432156*^9, 
   3.962452297042738*^9, 3.962452536497428*^9, 3.962474690629136*^9, 
   3.962477429817327*^9, 3.962523002856831*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"4ef124a1-6f7a-48d5-a213-c9dc2a9b4772"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estructura de listas", "Subsubsection",
 CellChangeTimes->{{3.96244831513468*^9, 3.9624483211230383`*^9}, {
  3.96246196926051*^9, 
  3.96246197210894*^9}},ExpressionUUID->"137c5f25-b354-4028-8fd1-\
366fa737f716"],

Cell["\<\
Podemos acceder a cada elemento de una lista usando la notaci\[OAcute]n de \
doble corchete \[LeftDoubleBracket] \[RightDoubleBracket]. A cada elemento le \
corresponde un \[IAcute]ndice comenzando desde el 1 hacia adelante.\
\>", "Text",
 CellChangeTimes->{{3.962450308468678*^9, 3.962450354926042*^9}, {
  3.9624510618397493`*^9, 
  3.9624510638534403`*^9}},ExpressionUUID->"cd93b25a-d452-4380-a9a5-\
2f0ad9148ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", "\[IndentingNewLine]", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], "->", 
         "True"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ItemStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Directive", "[", 
          RowBox[{"Orange", ",", "Bold", ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "&"}], "@", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "#", "]"}], "]"}], ",", "Null"}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"#", ",", "\"\<lista =\>\""}], "]"}]}], "}"}], "&"}], "@", 
    "lista"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.962450469410173*^9, 3.962450577777678*^9}, {
  3.962450609382213*^9, 3.962450667594977*^9}, {3.9624507073395357`*^9, 
  3.9624507690603437`*^9}, {3.962450827819901*^9, 3.9624508939416113`*^9}, {
  3.9624509482285748`*^9, 3.962451044763608*^9}, {3.962451156748047*^9, 
  3.9624511883815536`*^9}, {3.9624512229056396`*^9, 3.962451287358631*^9}, {
  3.962451319067518*^9, 3.96245135108701*^9}, {3.962451502827525*^9, 
  3.962451554782769*^9}, {3.962452114357774*^9, 3.962452156800685*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"cce02272-4e04-4ee5-a6c4-a4dd16aea861"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"\<\"lista =\"\>", "3.14`", "2.72`", "\<\"hola\"\>", "\<\"mundo\"\>", 
     "x", "y", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "40"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "50"}], "}"}]}], "}"}], 
     RowBox[{"Sin", "[", "a", "]"}], 
     RowBox[{"Cos", "[", "b", "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{2, 2}, {2, 11}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{Automatic}}, "Rows" -> {
       Directive[
        RGBColor[1, 0.5, 0], Bold, FontSize -> 12]}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962450555903178*^9, 3.962450578181602*^9}, {
   3.9624506178920937`*^9, 3.9624506284452047`*^9}, {3.9624506644565067`*^9, 
   3.9624506680407763`*^9}, {3.962450711144973*^9, 3.962450769529065*^9}, 
   3.962450848588932*^9, 3.962450894420673*^9, {3.962450953212472*^9, 
   3.962451045129307*^9}, {3.962451167740591*^9, 3.9624511889087887`*^9}, {
   3.962451223378326*^9, 3.9624512377987947`*^9}, {3.962451273185071*^9, 
   3.962451288001073*^9}, 3.962451351533177*^9, {3.962451530177713*^9, 
   3.9624515562859287`*^9}, 3.962451630148012*^9, 3.962451666994033*^9, {
   3.962452098600058*^9, 3.962452157711461*^9}, 3.9624522972681913`*^9, 
   3.9624525378224983`*^9, 3.9624746913331137`*^9, 3.962477419356907*^9, 
   3.962523003007884*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"5aad5940-3fc8-4740-be14-e263bd805bab"]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451074744149*^9, 3.962451085727737*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"71b38073-04c0-457f-b94b-10e48c2b7b9d"],

Cell[BoxData["3.14`"], "Output",
 CellChangeTimes->{3.962451086098588*^9, 3.962451630178856*^9, 
  3.9624516670735397`*^9, 3.9624522974337482`*^9, 3.962452538287334*^9, 
  3.962474691406509*^9, 3.962523003070867*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9888abbf-3783-4854-989d-d7ca26940158"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624510890083857`*^9, 3.962451091461103*^9}, 
   3.962451431434886*^9, {3.962452185127981*^9, 3.962452185522799*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"3749cd1e-2cb5-467a-9453-5845a32b075d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.96245109216722*^9, 3.962451434877379*^9, 
  3.962451630249955*^9, 3.96245166717492*^9, 3.9624522975255623`*^9, 
  3.9624525385849648`*^9, 3.9624746915321627`*^9, 3.962523003130535*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"6fdd085b-85dd-4eed-9737-dc4940807143"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"7", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451093226429*^9, 3.9624511008736763`*^9}, {
  3.962452187434876*^9, 3.962452195699889*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"b10fce80-a4b2-4837-b408-caf6acabbe2b"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.9624511016299057`*^9, 3.9624516303722982`*^9, 
  3.962451667207206*^9, 3.962452297650848*^9, 3.9624525388907423`*^9, 
  3.962474691591093*^9, 3.96252300319162*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"64f092fa-d09d-4781-8ce8-e9d6aa07f8ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451437124074*^9, 3.962451446407888*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"be398401-b31e-4bc6-b9cf-842cd52b3f4b"],

Cell[BoxData[
 RowBox[{"Cos", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.96245144685422*^9, 3.962451630469051*^9, 
  3.9624516673215923`*^9, 3.9624522977940207`*^9, 3.962452539098979*^9, 
  3.96247469167372*^9, 3.9625230032395363`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"97bccb96-0b22-4304-9aba-2b17d36a9df6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "8"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451913584573*^9, 3.96245193805476*^9}, {
  3.962452208732726*^9, 3.962452213072016*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"dfe34bb4-38e9-48cb-9603-958c54a6345b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.14`", ",", "\<\"hola\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.962451922751*^9, 3.962451938586398*^9}, 
   3.9624522168919163`*^9, 3.962452297936502*^9, 3.962452539239634*^9, 
   3.962474691884087*^9, 3.962523003299609*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"e4eef17b-4fbb-46aa-a9ee-a1dc880915d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451930437224*^9, 3.9624519487310534`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"0261a5cd-583a-4574-9337-260a6a3e1e0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.962451949201136*^9, 3.96245229806487*^9, 
  3.962452539462557*^9, 3.962474691969493*^9, 3.962523003364059*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"e5b23109-b5d8-4c41-9996-b7c24a330757"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "7", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624519506560163`*^9, 3.962451970495696*^9}, {
  3.962452232475956*^9, 3.9624522330535107`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"12e54a2c-10d9-4a91-b607-f2a45aa310e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.72`", ",", "\<\"mundo\"\>", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{{3.962451959502399*^9, 3.962451971371306*^9}, 
   3.9624522345140657`*^9, 3.962452298224636*^9, 3.962452539741864*^9, 
   3.962474692069461*^9, 3.962523003429212*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"5ee55f4b-4c29-444a-af89-2e41ca762c68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "[", 
  RowBox[{"[", 
   RowBox[{";;", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962451961483932*^9, 3.962451979241168*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"c1abd06f-52df-49aa-baa2-d1b72c00b57f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.14`", ",", "\<\"hola\"\>", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962451979879282*^9, 3.962452239408085*^9, 
  3.962452298342003*^9, 3.9624525398206987`*^9, 3.96247469221567*^9, 
  3.9625230034938583`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"f92b0d82-1768-4c1d-9b19-fee2f80d671c"]
}, Open  ]],

Cell["\<\
Al acceder a los elementos de una lista tambi\[EAcute]n podemos sustituir los \
valores que se encuentran en cada posici\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.9624514587419987`*^9, 
  3.9624514867725554`*^9}},ExpressionUUID->"61f10350-ea72-404d-bf5a-\
062d6ce4cd41"],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.962451648627166*^9, 3.96245164927465*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"3ab8dc14-5554-46eb-87a3-ca71eccd45bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.14`", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.962451650186021*^9, 3.962451667423203*^9}, 
   3.9624522489430733`*^9, 3.962452298465519*^9, 3.962452540089085*^9, 
   3.962474692331654*^9, 3.962523003575523*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"78e597df-cc0f-40b0-aed0-7c153fe4d0e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "=", "\[Pi]"}]], "Input",
 CellChangeTimes->{{3.962451536453863*^9, 3.962451542167789*^9}, {
  3.9624522561836643`*^9, 3.9624522589833593`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"7a967c96-3ee5-4e24-b447-bba7a54025ca"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.962452259398265*^9, 3.96245229857456*^9, 
  3.9624525404414682`*^9, 3.9624746924757433`*^9, 3.9625230036485443`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"f3f283c9-136a-46a9-9bb0-60a54753d68d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lista"], "Input",
 CellChangeTimes->{{3.9624516540400677`*^9, 3.962451654739546*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"e75658de-af30-4445-8054-9f9c9b22deca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.962451655699873*^9, 3.962451667685627*^9}, 
   3.962452253675736*^9, 3.962452298682226*^9, 3.9624525407854567`*^9, 
   3.962474692594372*^9, 3.962523003724204*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"7476a970-94d5-460a-9d12-4b6f81f8d705"]
}, Open  ]],

Cell[TextData[StyleBox["Syntactic sugar",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.962462023987352*^9, 
  3.962462026990077*^9}},ExpressionUUID->"ae68dac4-d7d7-4cfc-809d-\
b35ca1097e1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"List", "[", 
   RowBox[{"1", ",", "2", ",", "3"}], "]"}], "==", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.962461977630474*^9, 3.962461984813407*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"6a1b20fa-62e3-4961-8018-375e7b763085"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.962461985195717*^9, 3.962474692665782*^9, 
  3.962523003792017*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"a809ce10-6425-41fa-877e-2067afc9be22"]
}, Open  ]],

Cell["\<\
Adem\[AAcute]s de los \[LeftDoubleBracket] \[RightDoubleBracket] tenemos otro \
tipo de operaciones especificas de listas para seleccionar elementos\
\>", "Text",
 CellChangeTimes->{{3.962462210659894*^9, 3.962462212583872*^9}, {
  3.962462357980826*^9, 3.962462377124428*^9}, {3.962472477289006*^9, 
  3.9624724824053926`*^9}},ExpressionUUID->"a300521d-a3f7-44d0-b9f6-\
437a008bf5de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462397087676*^9, 3.96246240701086*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"7f85bd03-ca78-40b4-9908-2800ced98511"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.9624624075288763`*^9, 3.962474692783593*^9, 
  3.962523003863357*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"a7c468d8-e7d8-46fa-abc8-8099838dd552"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462408515645*^9, 3.9624624113184757`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"008b5060-d49f-43d6-8ac5-f5341ca5120f"],

Cell[BoxData[
 RowBox[{"Cos", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.962462411662187*^9, 3.96247469293979*^9, 
  3.962523003960644*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"3ee4a37d-78ef-4165-85dd-be21d56dd5f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962462421101267*^9, 3.9624624234915943`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"70c77bbe-9fba-4c71-89d3-476300b30514"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962462423862936*^9, 3.96247469307381*^9, 
  3.962523004030129*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"4eb802b4-fbb9-4dca-8ed2-4940687a7b70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Most", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624624540676413`*^9, 3.9624624567261972`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"73dfcf4c-9cc1-41c5-81f6-1c0f94a0fddd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.96246245710318*^9, 3.962474693209955*^9, 
  3.962523004107225*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"bf0e87c9-f936-4b84-8a4d-61905dfb8dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"lista", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624625127018023`*^9, 3.962462520067075*^9}, {
  3.9624726112293262`*^9, 3.962472611345422*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"24ee0930-dd58-4754-84de-cb3382e07ce3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.96246252046629*^9, 3.962472611761735*^9, 
  3.9624746933224087`*^9, 3.962523004185397*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"43347c53-25f3-44a5-aa5f-20ae136323d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{"lista", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.962462486991036*^9, 3.962462511038213*^9}, {
  3.962472608819831*^9, 3.962472626366756*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"789cd46a-61eb-44c7-9062-a6f5b0ccf5bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.96246251149198*^9, {3.962472609702807*^9, 3.962472628083899*^9}, 
   3.962474693443136*^9, 3.962523004261648*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"32ddd0be-5f86-4a0a-9b6e-4ddac71274c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{"lista", ",", 
   RowBox[{"-", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962472630044579*^9, 3.962472638262944*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"5dee73aa-7830-4452-9ef0-21fbef753f1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.962472643261842*^9, 3.962474693545154*^9, 
  3.9625230043356752`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"6ba929c2-fe6c-40e6-b33c-6e845c3f4268"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.962462049386387*^9, 
  3.962462053988988*^9}},ExpressionUUID->"da6eda51-097e-4a58-bc01-\
d39effac9b8b"],

Cell["Podemos a\[NTilde]adir valores a las listas usando:", "Text",
 CellChangeTimes->{{3.9624726829959307`*^9, 
  3.962472725642302*^9}},ExpressionUUID->"be7921fc-2562-48ce-b406-\
ef392174bc59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{"lista", ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626521815033`*^9, 3.962462671610588*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"083740ed-ed20-4a5c-b846-816cf3d97ece"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "\[Gamma]"}], "}"}]], "Output",
 CellChangeTimes->{3.9624626742135983`*^9, 3.962474693591642*^9, 
  3.962523004415596*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"f16cb909-e0d3-4d0b-996a-7ed9d8836d49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prepend", "[", 
  RowBox[{"lista", ",", "\[Alpha]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626789251757`*^9, 3.962462686851735*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"978fc430-c6cf-4856-9558-c78bed66191a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Alpha]", ",", "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", 
   ",", "\<\"mundo\"\>", ",", "x", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962462687570804*^9, 3.9624746936671553`*^9, 
  3.962523004497428*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"c03852f5-ef72-4509-beb4-1e9dc9519c3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{"lista", ",", "\[Sigma]", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624626948264437`*^9, 3.962462736654195*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"35109185-1f53-489c-a306-d146eeceee79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "\[Sigma]", ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9624627212365427`*^9, 3.962462737029561*^9}, 
   3.962474693800531*^9, 3.9625230045771217`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"9a355d67-b77b-4664-8924-b2ff80d4dca2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Delete", "[", 
  RowBox[{"lista", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.96246278653933*^9, 3.9624627985736637`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"c25e0606-259b-4f1a-bb19-62c66e4d0beb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962462798997945*^9, 3.96247469398281*^9, 
  3.9625230046546392`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"7de8047d-1c8f-4ba2-a83d-e5e26d4ab986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"{", 
   RowBox[{
   "4", ",", "4", ",", "5", ",", "2", ",", "3", ",", "3", ",", "1", ",", "5", 
    ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473570832666*^9, 3.9624736087671747`*^9}, {
  3.962475508729712*^9, 3.962475512070375*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"bb3fa6fc-7682-4700-a629-d338b1c96b3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "2", ",", "3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.962473605139439*^9, 3.962473609218216*^9}, 
   3.96247469407321*^9, 3.9624755138080473`*^9, 3.962523004735402*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"34c83dac-2d0f-40ac-93fe-de91d49182a8"]
}, Open  ]],

Cell["Y sus versiones de programaci\[OAcute]n procedural.", "Text",
 CellChangeTimes->{{3.962472702284153*^9, 
  3.962472722704733*^9}},ExpressionUUID->"5120a043-d3e7-4df0-acdb-\
1c196a296e97"],

Cell["Adem\[AAcute]s podemos usar otras funciones sobre nuestras listas", \
"Text",
 CellChangeTimes->{{3.9624727321867847`*^9, 3.9624727336107807`*^9}, {
  3.9624731889671717`*^9, 3.962473224528908*^9}, {3.962473463684074*^9, 
  3.962473466803787*^9}},ExpressionUUID->"362c5301-e612-4e41-b0a5-\
9724d2213c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473225838334*^9, 3.96247322991234*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"5eb97938-6450-48b9-8de5-8b99d8f2dec9"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.962473230330871*^9, 3.962474694196528*^9, 
  3.962523004810369*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"75a46377-2540-4814-8349-73fbcdff9a5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"lista", "[", 
   RowBox[{"[", "8", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473234131833*^9, 3.962473239217855*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"728798a8-7fe2-433a-b845-487972bf663d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.962473240004839*^9, 3.962474694304007*^9, 
  3.962523004890934*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"42093764-4eaf-4f1f-9516-646414a97571"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624732495136414`*^9, 3.962473253298843*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"7957571f-43e6-44d6-a1cf-81bceecce8eb"],

Cell[BoxData[
 RowBox[{"{", "10", "}"}]], "Output",
 CellChangeTimes->{3.962473253657439*^9, 3.9624746944154787`*^9, 
  3.962523005005052*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"fcbc66ae-b900-42a8-a4ac-065958a56677"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"lista", "[", 
   RowBox[{"[", "8", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624732418642673`*^9, 3.9624732467328978`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"5632cf6c-0fb8-4a5e-98dd-bbd380dd25a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9624732477025757`*^9, 3.9624746945214367`*^9, 
  3.9625230050831537`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"91d5f2fe-6ab1-4d8e-9cf3-8a3fb6a6613a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473267240781*^9, 3.962473271886055*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"d623a8a5-d542-4e95-90fe-94386a8a9461"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9624732721103277`*^9, 3.962474694601636*^9, 
  3.962523005162858*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"07437ab2-0ff8-434d-b504-c6222f0df242"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"lista", "[", 
   RowBox[{"[", "8", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962473285130501*^9, 3.96247329063595*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"6e3927c9-e22a-4ddb-af2d-ddbb6e62ff5a"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.962473291210349*^9, 3.962474694744576*^9, 
  3.962523005243594*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"e82b7f50-87d7-4003-aef9-f14bc4392c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473420759385*^9, 3.962473427637513*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"79ab620f-b444-4f12-9136-8d09786befe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", "10", ",", "20", ",", "30", ",", "40", ",", "40", ",", "50",
    ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473428879724*^9, 3.962474694873168*^9, 
  3.9625230053238487`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"94d4c035-8bc8-433d-b2f1-e9fd03950f4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"lista", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962473478348695*^9, 3.962473494339679*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"3fa24d6e-5172-4361-997f-abede2e1653c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "x", 
   ",", "y", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", "i", ",", "j", ",", "k"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.962473494942376*^9, 3.962474695115862*^9, 
  3.962523005400226*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"8c0c4611-8034-4c82-95f5-88585237cf39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"lista", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624735097801037`*^9, 3.962473519961424*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"6a96f7eb-7bc8-4da8-803b-ac108ee26b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "2.72`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"hola\"\>", ",", "\<\"mundo\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30", ",", "40"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "50"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "a", "]"}], ",", 
     RowBox[{"Cos", "[", "b", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473520435707*^9, 3.962474695238049*^9, 
  3.962523005485518*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"87a7e6b4-9e73-456f-8a3d-85dab5e8cd5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.96247354735493*^9, 3.9624735521663322`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"b4407917-2b04-407e-bfa0-500f416e4948"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "b", "]"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", "y", ",", "x", 
   ",", "\<\"mundo\"\>", ",", "\<\"hola\"\>", ",", "2.72`", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.96247355266399*^9, 3.962474695376526*^9, 
  3.962523005563677*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"1bd169fe-4f65-4af0-8fb4-f4681ae99d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962473553410099*^9, 3.962473559218379*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"33701890-2fca-4497-85d9-81b0867fd927"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "\<\"hola\"\>", ",", "\<\"mundo\"\>", ",", "\[Pi]", ",", "x", 
   ",", "y", ",", 
   RowBox[{"Cos", "[", "b", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"Sin", "[", "a", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473560035529*^9, 3.962474695513711*^9, 
  3.9625230056456614`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"d356d71f-95b3-467d-bcb0-80cb4a43fff9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.9624483804336977`*^9, 
  3.962448385018887*^9}},ExpressionUUID->"b6eceeb3-d1a1-4944-a868-\
2ae39ad26722"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"6", "/", "7"}], ",", "\[Pi]", ",", "\[ImaginaryI]"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9624738261805*^9, 3.962473871814067*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"cb2a70c0-2348-4d7e-a390-29f112b55888"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "+", "1"}]], "Input",
 CellChangeTimes->{{3.962473876116675*^9, 3.9624738784710484`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"8803f42e-6992-4136-ad81-c811a723a593"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["13", "7"], ",", 
   RowBox[{"1", "+", "\[Pi]"}], ",", 
   RowBox[{"1", "+", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473879206918*^9, 3.962474695709879*^9, 
  3.962523005806602*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"d9a1d0ca-baa9-49bb-a96b-dd2779276d87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "+", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.962473882848344*^9, 3.96247388972189*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"e465fe67-9817-49dc-9474-b0a9dde63bbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   FractionBox["20", "7"], ",", 
   RowBox[{"3", "+", "\[Pi]"}], ",", 
   RowBox[{"4", "+", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473890348028*^9, 3.962474695875679*^9, 
  3.9625230058838243`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"78440725-cb38-4431-bca6-03865ed7240d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "lista"}]], "Input",
 CellChangeTimes->{{3.962473935870634*^9, 3.9624739431242723`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"bd01bd27-1ed6-4389-a13a-c63f9923d610"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["12", "7"], ",", 
   RowBox[{"2", " ", "\[Pi]"}], ",", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473944175742*^9, 3.962474696103427*^9, 
  3.962523005906753*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"d550b9f1-f48f-440e-82a1-11bed882ef1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "*", 
  "lista"}]], "Input",
 CellChangeTimes->{{3.962473948972584*^9, 3.962473957156417*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"14bcb2e3-85fe-4113-b0d6-5f504efc7937"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["12", "7"], ",", 
   RowBox[{"3", " ", "\[Pi]"}], ",", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473957446384*^9, 3.962474696241514*^9, 
  3.962523006046504*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"495f572a-9107-42b5-92ef-b54cf3687878"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "^", "2"}]], "Input",
 CellChangeTimes->{{3.96247397102416*^9, 3.962473973854784*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"adc71d77-7e9c-42dd-ab34-e5ea9a7097a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["36", "49"], ",", 
   SuperscriptBox["\[Pi]", "2"], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962473974276545*^9, 3.9624746963736753`*^9, 
  3.962523006115203*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"4ae37d86-beba-4e57-a02a-f3c7b50da6fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "^", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9624739758007717`*^9, 3.962473981935664*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"76351214-d3f9-419e-baee-28141f809486"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["36", "49"], ",", 
   SuperscriptBox["\[Pi]", "3"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.962473982501863*^9, 3.962474696540001*^9, 
  3.962523006189827*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"b02f51f6-a4b2-481e-a37a-a9f68cbc8387"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474001833665*^9, 3.962474005883635*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"74cd74f5-3fdc-49f5-9190-017277f0d02c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "2"], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"6", "/", "7"}]], ",", 
   SuperscriptBox["\[ExponentialE]", "\[Pi]"], ",", 
   SuperscriptBox["\[ExponentialE]", "\[ImaginaryI]"]}], "}"}]], "Output",
 CellChangeTimes->{3.9624740061781893`*^9, 3.9624746966064587`*^9, 
  3.962523006273333*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"4e4f9ed4-5606-4b9a-99c1-e608e47486aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474849652823*^9, 3.962474856198121*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"73f5439b-c384-4c18-8566-ab8d95745941"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "2", "]"}], ",", 
   RowBox[{"Sin", "[", 
    FractionBox["6", "7"], "]"}], ",", "0", ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sinh", "[", "1", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.962474852999563*^9, 3.9624748566438093`*^9}, 
   3.9625230063473997`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"e594fda0-c14c-40ae-911d-fbbc7f45af9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474859767733*^9, 3.9624748630638533`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"4924bdb9-6359-4a2d-8599-5786ae277bfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "2", "]"}], ",", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     FractionBox["7", "6"], "]"}]}], ",", 
   RowBox[{"Log", "[", "\[Pi]", "]"}], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.962474863449692*^9, 3.962523006425901*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"880b59df-bdd4-4f3c-981e-219b549c98f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962474870025083*^9, 3.962474874643124*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"9dff038f-32e6-4404-910e-7f5c7c363ba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["20", "7"], "+", "\[ImaginaryI]"}], ")"}], "+", 
  "\[Pi]"}]], "Output",
 CellChangeTimes->{3.9624748755346813`*^9, 3.962523006508053*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"2efb7352-b214-4942-afa8-3f17ef5a7b44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estad\[IAcute]stica", "Subsubsection",
 CellChangeTimes->{{3.962474956995186*^9, 
  3.962474967473114*^9}},ExpressionUUID->"a13b62fc-8008-4469-b725-\
a153b258e46c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lista", "=", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "23", ",", "29", ",", "65", ",", "52", ",", "25", ",", "30", 
     ",", "10", ",", "22", ",", "31", ",", "15", ",", "17", ",", "5", ",", 
     "56", ",", "42", ",", "25", ",", "27", ",", "30", ",", "15", ",", "5", 
     ",", "12", ",", "16", ",", "9", ",", "12", ",", "13", ",", "38", ",", 
     "73", ",", "28", ",", "17", ",", "37", ",", "84", ",", "1", ",", "53", 
     ",", "44", ",", "18", ",", "32", ",", "7", ",", "7", ",", "19", ",", 
     "10", ",", "27", ",", "6", ",", "22", ",", "22", ",", "26", ",", "5", 
     ",", "21", ",", "69", ",", "24", ",", "25", ",", "24", ",", "34", ",", 
     "15", ",", "17", ",", "16", ",", "4", ",", "9", ",", "4", ",", "53", ",",
      "25", ",", "18", ",", "38", ",", "20", ",", "4", ",", "38", ",", "17", 
     ",", "44", ",", "2", ",", "12", ",", "40", ",", "28", ",", "26", ",", 
     "19", ",", "21", ",", "17", ",", "52", ",", "4", ",", "18", ",", "8", 
     ",", "1", ",", "18", ",", "45", ",", "9", ",", "4", ",", "84", ",", "1", 
     ",", "45", ",", "13", ",", "25", ",", "15", ",", "55", ",", "29", ",", 
     "51", ",", "22", ",", "1", ",", "60", ",", "9", ",", "1", ",", "15", ",",
      "25"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9624749710426598`*^9, 3.962474973540114*^9}, 
   3.9624754878720913`*^9, 3.9624755772261066`*^9, 3.962475616619752*^9},
 CellLabel->
  "In[220]:=",ExpressionUUID->"56c25cc0-4644-4529-a6f4-9d4302408669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475707442684*^9, 3.962475709947209*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"06a3613d-73fa-4922-abf0-9de5b58d1b80"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9624757105909863`*^9, 3.962523006599758*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"1c5c1562-15a4-4f62-b2f4-fc2de9ea8e98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475711391408*^9, 3.962475713526576*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"7b8dfa4c-df88-4723-9b22-7bf6bc4cff38"],

Cell[BoxData["84"], "Output",
 CellChangeTimes->{3.9624757137991333`*^9, 3.962523006679343*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"1e2bc26d-c83c-48fb-967c-90205e0f876f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.962475621283551*^9, 3.962475626579816*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"4804a1e4-4c57-4525-9030-5c9f7687b2c7"],

Cell[BoxData[
 FractionBox["2463", "100"]], "Output",
 CellChangeTimes->{3.962475627219903*^9, 3.962523006756267*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"666c89ae-1e59-4f2d-bc87-0dc431190c7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", "lista", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962475645644547*^9, 3.962475650635524*^9}, {
  3.962475685525263*^9, 3.962475687072806*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"80337a37-66fc-4b51-a01b-4818204e9a07"],

Cell[BoxData["24.63`"], "Output",
 CellChangeTimes->{3.962475650908782*^9, 3.96252300682792*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"ebb5c4ed-c00c-4743-b58c-83501c678fbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "lista", "]"}]], "Input",
 CellChangeTimes->{{3.9624756278431873`*^9, 3.962475637271121*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"86fce3b7-b3e2-4796-9b37-aa761faf218a"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["3459331", "11"]], "30"]], "Output",
 CellChangeTimes->{3.962475637607728*^9, 3.9625230068514643`*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"e95e6deb-3420-4bdc-92de-2b0bb430c61d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StandardDeviation", "[", "lista", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.962475654970332*^9, 3.962475695025712*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"3fd16929-1fd2-4fa4-8651-16897d2dfacd"],

Cell[BoxData["18.692976588477656`"], "Output",
 CellChangeTimes->{3.962475661722405*^9, 3.962475695606578*^9, 
  3.962523006923648*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"2ac5f6c0-52f6-4046-8529-1127bb1849cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creaci\[OAcute]n de listas", "Subsubsection",
 CellChangeTimes->{{3.962448324954927*^9, 
  3.962448331720646*^9}},ExpressionUUID->"271b7638-74d1-4d5f-8f7e-\
e9a3ab3a52ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Range"}]], "Input",
 CellChangeTimes->{{3.962475858208076*^9, 3.962475860147813*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"f2d0ae75-43ef-4dfa-a68f-3be904bf9b81"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Range",
              ButtonNote->"paclet:ref/Range"],
             "\"paclet:ref/Range\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) generates the list \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"]\\\"}]\\) generates the list \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses step \\!\\(\\*StyleBox[\\\"di\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Range", 
                    "paclet:ref/Range", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Range.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Range.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Range\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{9.75, {3., 6.75}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{9.75, {3., 6.75}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Range",
              ButtonNote->"paclet:ref/Range"],
             "\"paclet:ref/Range\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) generates the list \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"]\\\"}]\\) generates the list \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses step \\!\\(\\*StyleBox[\\\"di\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {3., 4.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {3., 4.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Range\", \"[\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \"]\"}]\) generates the list \!\(\*RowBox[{\"{\", \
RowBox[{\"1\", \",\", \"2\", \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]\). \n\!\(\*RowBox[{\"Range\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"]\"}]\) generates the list \!\(\*RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]\). \n\!\(\*RowBox[{\"Range\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\
\"]], \",\", StyleBox[\"di\", \"TI\"]}], \"]\"}]\) uses step \
\!\(\*StyleBox[\"di\", \"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Range", "Web" -> 
      "http://reference.wolfram.com/language/ref/Range.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, Protected}, "FullName" -> 
    "System`Range"|>, False]]], "Output",
 CellChangeTimes->{3.9624758608254757`*^9, 3.962523007046782*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"7f17531d-6514-4bb1-9080-0611fcf66fde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.962475788941366*^9, 3.962475789599193*^9}, {
  3.9624758641180162`*^9, 3.962475870910891*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"23e2dabc-b236-4dae-b99a-2e0272e7b020"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
   "}"}]], "Output",
 CellChangeTimes->{3.9624758713381233`*^9, 3.962523007148381*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"c1fe7fbf-28a5-4ea3-8b47-d1ca388ea07e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.962475874529543*^9, 3.96247587581392*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"b43154ee-ced3-4b3f-af93-35a08b96074b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Table", 
                    "paclet:ref/Table", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{9.75, {3., 6.75}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{9.75, {3., 6.75}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {3., 4.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {3., 4.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Table", "Web" -> 
      "http://reference.wolfram.com/language/ref/Table.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Table"|>, False]]], "Output",
 CellChangeTimes->{3.962475876496982*^9, 3.962523007256914*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"50f0ddbd-531a-48ae-8046-6dd4de24cad3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962475792614414*^9, 3.962475793309251*^9}, {
  3.962475881178607*^9, 3.962475904242931*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"c38161f5-da56-428e-918c-35c6fbbc5840"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "16", ",", "49", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.9624759050188713`*^9, 3.9625230073527*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"66bb8c9e-0b9a-4920-954b-f55d31e24b56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Array"}]], "Input",
 CellChangeTimes->{{3.962475980246759*^9, 3.9624759825260572`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"00081dcf-37a0-4ba7-b79e-fffe8104dfdf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Array",
              ButtonNote->"paclet:ref/Array"],
             "\"paclet:ref/Array\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of length \\!\\(\\*StyleBox[\\\
\"n\\\", \\\"TI\\\"]\\), with elements \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"[\\\", StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"]\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"r\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list using the index \
origin \\!\\(\\*StyleBox[\\\"r\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) generates a list using \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) values from \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) to \\!\
\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of nested lists, \
with elements \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates a list using the index \
origins \\!\\(\\*SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]]\\) (default 1). \\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
generates a list using \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) values from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dims\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"origin\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"h\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses head \\!\\(\\*StyleBox[\\\"h\\\", \\\"TI\\\"]\\), rather than List, for \
each level of the array. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Array", 
                    "paclet:ref/Array", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Array.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Array.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Array\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{9.75, {3., 6.75}}], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{9.75, {3., 6.75}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Array",
              ButtonNote->"paclet:ref/Array"],
             "\"paclet:ref/Array\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of length \\!\\(\\*StyleBox[\\\
\"n\\\", \\\"TI\\\"]\\), with elements \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"[\\\", StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"]\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"r\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list using the index \
origin \\!\\(\\*StyleBox[\\\"r\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) generates a list using \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) values from \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) to \\!\
\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of nested lists, \
with elements \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates a list using the index \
origins \\!\\(\\*SubscriptBox[StyleBox[\\\"r\\\", \\\"TI\\\"], StyleBox[\\\"i\
\\\", \\\"TI\\\"]]\\) (default 1). \\n\\!\\(\\*RowBox[{\\\"Array\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
generates a list using \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) values from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"Array\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"dims\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"origin\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"h\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses head \\!\\(\\*StyleBox[\\\"h\\\", \\\"TI\\\"]\\), rather than List, for \
each level of the array. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {3., 4.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {3., 4.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Array\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of length \
\!\(\*StyleBox[\"n\", \"TI\"]\), with elements \!\(\*RowBox[{StyleBox[\"f\", \
\"TI\"], \"[\", StyleBox[\"i\", \"TI\"], \"]\"}]\). \n\
\!\(\*RowBox[{\"Array\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"r\", \"TI\"]}], \"]\"}]\) \
generates a list using the index origin \!\(\*StyleBox[\"r\", \"TI\"]\).\n\
\!\(\*RowBox[{\"Array\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"a\", \
\"TI\"], \",\", StyleBox[\"b\", \"TI\"]}], \"}\"}]}], \"]\"}]\) generates a \
list using \!\(\*StyleBox[\"n\", \"TI\"]\) values from \!\(\*StyleBox[\"a\", \
\"TI\"]\) to \!\(\*StyleBox[\"b\", \"TI\"]\).\n\!\(\*RowBox[{\"Array\", \
\"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) generates an \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of nested lists, with elements \
\!\(\*RowBox[{StyleBox[\"f\", \"TI\"], \"[\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\). \n\!\(\*RowBox[{\"Array\", \
\"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) generates a list \
using the index origins \!\(\*SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\
\"i\", \"TI\"]]\) (default 1). \n\!\(\*RowBox[{\"Array\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"b\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
generates a list using \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) values from \!\(\*SubscriptBox[StyleBox[\"a\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"b\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\!\(\*RowBox[{\"Array\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"dims\", \"TI\"], \",\", \
StyleBox[\"origin\", \"TI\"], \",\", StyleBox[\"h\", \"TI\"]}], \"]\"}]\) \
uses head \!\(\*StyleBox[\"h\", \"TI\"]\), rather than List, for each level \
of the array. ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Array", "Web" -> 
      "http://reference.wolfram.com/language/ref/Array.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`Array"|>, False]]], "Output",
 CellChangeTimes->{3.962475983189725*^9, 3.9625230074405317`*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"796e0faf-3403-4959-872f-b2ea12f2fe0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962475795012025*^9, 3.962475797139161*^9}, {
  3.962475911186317*^9, 3.962475973273074*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"bc305e98-7aa0-4548-9473-2ba4ba8c823c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"3", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"4", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"4", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"5", ",", "1"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"5", ",", "2"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.962475962878086*^9, 3.962475973714904*^9}, 
   3.962523007522443*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"3a1444d1-7803-456e-93cc-0637d7535702"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConstantArray"}]], "Input",
 CellChangeTimes->{{3.9624760089218483`*^9, 3.962476010494865*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"1ef3e79a-f1ed-4b55-8c39-f7a11eaac7f2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ConstantArray",
              ButtonNote->"paclet:ref/ConstantArray"],
             "\"paclet:ref/ConstantArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) copies of the element \
\\!\\(\\*StyleBox[\\\"c\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of nested lists containing copies of \
the element \\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ConstantArray",
                     "paclet:ref/ConstantArray", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    
                    "http://reference.wolfram.com/language/ref/ConstantArray.\
html"], None}, "http://reference.wolfram.com/language/ref/ConstantArray.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConstantArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{9.75, {3., 6.75}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{9.75, {3., 6.75}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ConstantArray",
              ButtonNote->"paclet:ref/ConstantArray"],
             "\"paclet:ref/ConstantArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) copies of the element \
\\!\\(\\*StyleBox[\\\"c\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"c\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Cross]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of nested lists containing copies of \
the element \\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {3., 4.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {3., 4.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ConstantArray\", \"[\", RowBox[{StyleBox[\"c\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of the element \!\(\*StyleBox[\"c\", \
\"TI\"]\).\n\!\(\*RowBox[{\"ConstantArray\", \"[\", RowBox[{StyleBox[\"c\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) generates an \!\(\*RowBox[{SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"\[Cross]\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \"\[Cross]\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\) array of nested lists containing copies of the element \
\!\(\*StyleBox[\"c\", \"TI\"]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/ConstantArray", "Web" -> 
      "http://reference.wolfram.com/language/ref/ConstantArray.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ConstantArray"|>, False]]], "Output",
 CellChangeTimes->{3.962476011133725*^9, 3.9625230076297817`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"ca871f0d-a7e1-4d29-ae22-fc1726c84a48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962475800680057*^9, 3.962475802028679*^9}, {
  3.962475996784772*^9, 3.962476005151198*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"929a5531-02de-4958-b250-492722f50c47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.96247600564847*^9, 3.962523007713749*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"dc2d6e55-688f-4ed5-8e2d-70fd1642da6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CenterArray"}]], "Input",
 CellChangeTimes->{{3.9624760159763002`*^9, 3.962476019615193*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"d58dda27-0e04-4af2-9b64-d8cd71f76d15"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CenterArray",
              ButtonNote->"paclet:ref/CenterArray"],
             "\"paclet:ref/CenterArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) creates a list of length \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with the elements of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) creates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Times]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Times]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array with the array \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pad\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"pad\\\", \\\"TI\\\"]\\) instead of zero for the \
background.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) creates an array with a \
single 1 at the center and zeros elsewhere.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CenterArray", 
                    "paclet:ref/CenterArray", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CenterArray.\
html"], None}, "http://reference.wolfram.com/language/ref/CenterArray.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CenterArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{9.75, {3., 6.75}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{9.75, {3., 6.75}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CenterArray",
              ButtonNote->"paclet:ref/CenterArray"],
             "\"paclet:ref/CenterArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) creates a list of length \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with the elements of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) creates an \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\"\[Times]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Times]\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array with the array \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) at the center and zeros \
elsewhere.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"nspec\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pad\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"pad\\\", \\\"TI\\\"]\\) instead of zero for the \
background.\\n\\!\\(\\*RowBox[{\\\"CenterArray\\\", \\\"[\\\", \
StyleBox[\\\"nspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) creates an array with a \
single 1 at the center and zeros elsewhere.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {3., 4.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {3., 4.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CenterArray\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) creates a list of length \
\!\(\*StyleBox[\"n\", \"TI\"]\) with the elements of \!\(\*StyleBox[\"a\", \
\"TI\"]\) at the center and zeros elsewhere.\n\!\(\*RowBox[{\"CenterArray\", \
\"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) creates an \
\!\(\*RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\"\[Times]\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"\[Times]\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) array with the array \!\(\
\*StyleBox[\"a\", \"TI\"]\) at the center and zeros elsewhere.\n\
\!\(\*RowBox[{\"CenterArray\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\", \
StyleBox[\"nspec\", \"TI\"], \",\", StyleBox[\"pad\", \"TI\"]}], \"]\"}]\) \
uses \!\(\*StyleBox[\"pad\", \"TI\"]\) instead of zero for the background.\n\
\!\(\*RowBox[{\"CenterArray\", \"[\", StyleBox[\"nspec\", \"TI\"], \"]\"}]\) \
creates an array with a single 1 at the center and zeros elsewhere.", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/CenterArray", "Web" -> 
      "http://reference.wolfram.com/language/ref/CenterArray.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`CenterArray"|>, False]]], "Output",
 CellChangeTimes->{3.96247602031355*^9, 3.9625230078058977`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"57cbac1a-5cce-447c-a942-f7839a1b496e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CenterArray", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9624758194633293`*^9, 3.962475821797545*^9}, {
  3.962476027791658*^9, 3.962476035772602*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"a104949f-e27a-4eab-91f5-b593cc28b683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.962476036245631*^9, 3.962523007887245*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"ed4d6d2e-c9c9-47b6-a6e6-9eced93d720f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Asociaciones", "Subsection",
 CellChangeTimes->{{3.962389654645364*^9, 
  3.9623896572454*^9}},ExpressionUUID->"bbb9a47a-d69d-45bc-9c52-878cef5f7496"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<nombre\>\"", "->", "\"\<Mariana\>\""}], ",", 
    RowBox[{"\"\<apellido\>\"", "->", "\"\<P\[EAcute]rez\>\""}], ",", 
    RowBox[{"\"\<edad\>\"", "->", "24"}], ",", 
    RowBox[{"color", "->", 
     RowBox[{"RGBColor", "[", "\"\<Teal\>\"", "]"}]}], ",", 
    RowBox[{"1", "->", "7"}], ",", 
    RowBox[{"\[Pi]", "->", "6"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.9623924556976023`*^9, 3.962392526026116*^9}, {
  3.962392559565414*^9, 3.962392585954154*^9}, {3.962476393820197*^9, 
  3.962476395572707*^9}, {3.96247645226587*^9, 3.96247645997831*^9}, {
  3.9624764998100367`*^9, 3.962476504315988*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"377a2318-7669-4668-a0fc-2366ad2a1bc2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
   RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
   RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"color", "\[Rule]", 
    TemplateBox[<|
     "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
     "RGBColorSwatchTemplate"]}], ",", 
   RowBox[{"1", "\[Rule]", "7"}], ",", 
   RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9623925864584503`*^9, 3.9624516306576977`*^9, 
  3.962451667818184*^9, 3.962452298776512*^9, 3.962452541101856*^9, 
  3.962474696887702*^9, 3.962476396253428*^9, 3.962476460592383*^9, 
  3.962476504798901*^9, 3.962523007911743*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"9618d338-0a80-40fe-baad-636b89a2f2d0"]
}, Open  ]],

Cell["\<\
Las asociaciones son el equivalente a un diccionario en otros lenguajes y nos \
permiten acceder a valores por medio de llaves.\
\>", "Text",
 CellChangeTimes->{{3.962476856545602*^9, 
  3.962476919030567*^9}},ExpressionUUID->"1eefe163-9ce3-40bd-97ea-\
5590ab9515b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "\"\<nombre\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.962476211556118*^9, 3.962476216972476*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"e0373baa-4aba-4bf7-847c-959a4ad8a97d"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{3.9624762174014273`*^9, 3.962523008031011*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"2e949749-ab6e-4226-89e0-a81b812feef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "\"\<nombre\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624764254741173`*^9, 3.9624764448336277`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"d8bbff31-7738-44fc-991d-27fc91c21e0c"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{{3.9624764296688766`*^9, 3.962476445304702*^9}, 
   3.9625230081555433`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"5b0b90aa-de53-418f-ba58-ff284c0d41b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "color", "]"}]], "Input",
 CellChangeTimes->{{3.962476399049947*^9, 3.962476402984934*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"1ed2b674-70b5-4f08-8f7d-138f123a89b8"],

Cell[BoxData[
 TemplateBox[<|
  "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.9624764034934177`*^9, 3.9625230082219887`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"9095e0c5-3f60-41f2-b8a3-023c1dab5212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "color", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476404265744*^9, 3.962476407706532*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"79de83d1-de7c-43de-88f9-1ce5a6fbf668"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"color\\\"}]\\) cannot be used as a \
part specification.\"", 2, 241, 13, 20563064530422823252, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.962476408086871*^9, 3.9625230083032913`*^9},
 CellLabel->
  "During evaluation of \
In[241]:=",ExpressionUUID->"76aea88a-240c-418f-9849-e1625336c3de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
    RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
    RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
    RowBox[{"color", "\[Rule]", 
     TemplateBox[<|
      "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
      "RGBColorSwatchTemplate"]}], ",", 
    RowBox[{"1", "\[Rule]", "7"}], ",", 
    RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
  "\[LeftDoubleBracket]", "color", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.962476408122007*^9, 3.962523008325161*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"1d01bcf5-bfd6-4b8f-896e-8df243ff92ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.962476466032956*^9, 3.962476467612948*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"18f18487-e1e7-4fd6-9093-16925403fbbb"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.962476468127673*^9, 3.962523008398628*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"f7e32377-825e-4440-bd59-9bc13aa5f09c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476468890739*^9, 3.9624764704920063`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"2a1ac654-aae0-4103-a890-c2f7f0fa0c09"],

Cell[BoxData["\<\"Mariana\"\>"], "Output",
 CellChangeTimes->{3.962476470868731*^9, 3.962523008471074*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"a8ef35f1-a3e0-4c5c-81d5-74e6f5d85353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.9624765128111153`*^9, 3.962476516684906*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"4a767926-11bf-4f89-96ab-e6deeb6059df"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.962476517143511*^9, 3.962523008546143*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"4b306878-2485-4233-b0ca-42eba47ae7ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoc", "[", 
  RowBox[{"[", "\[Pi]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476517736953*^9, 3.962476550097103*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"2e139e93-1a9e-437b-8fa4-c0cd75a4da99"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"\[Pi]\\\"}]\\) cannot be used as a \
part specification.\"", 2, 245, 14, 20563064530422823252, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.96247655065203*^9, 3.962523008616969*^9},
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"2e2a1f78-4151-48f2-a545-20ddbbee9b59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
    RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
    RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
    RowBox[{"color", "\[Rule]", 
     TemplateBox[<|
      "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
      "RGBColorSwatchTemplate"]}], ",", 
    RowBox[{"1", "\[Rule]", "7"}], ",", 
    RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
  "\[LeftDoubleBracket]", "\[Pi]", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.962476520759912*^9, 3.962476550673016*^9}, 
   3.962523008630981*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"d9c10223-3e7a-40be-b843-fde9b792f2fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.96247624381397*^9, 3.962476246228956*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"ff1aa6a2-0369-41ad-95da-24f9fd98dc0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"nombre\"\>", ",", "\<\"apellido\"\>", ",", "\<\"edad\"\>", ",",
    "color", ",", "1", ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{3.962476246503192*^9, 3.962523008701426*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"f9b962ee-ea10-4160-b552-64ba061c38e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.962476249037731*^9, 3.962476251462908*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"d0d3c869-1330-4fcd-bfd0-fcac5cf793e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Mariana\"\>", ",", "\<\"P\[EAcute]rez\"\>", ",", "24", ",", 
   TemplateBox[<|
    "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
    "RGBColorSwatchTemplate"], ",", "7", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.962476251892096*^9, 3.96252300876272*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"5453d512-e557-4bf0-9548-a7b0a744aa84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{"asoc", ",", "\"\<cumplea\[NTilde]os\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.962476256020804*^9, 3.9624762845210123`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"efd78609-2a6c-44cd-ac58-8840218221e8"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"cumplea\[NTilde]os\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.962476258910101*^9, 3.962476285124606*^9}, 
   3.962523008959503*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"159f6e22-5f11-44e3-b14a-7e3395947322"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeySort", "[", "asoc", "]"}]], "Input",
 CellChangeTimes->{{3.962476302830285*^9, 3.9624763067585363`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"ded78de4-9405-4a08-b119-b5c86b444c66"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"apellido\"\>", "\[Rule]", "\<\"P\[EAcute]rez\"\>"}], ",", 
   RowBox[{"\<\"edad\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"\<\"nombre\"\>", "\[Rule]", "\<\"Mariana\"\>"}], ",", 
   RowBox[{"color", "\[Rule]", 
    TemplateBox[<|
     "color" -> RGBColor[0., 0.5019607843137255, 0.5019607843137255]|>,
     "RGBColorSwatchTemplate"]}], ",", 
   RowBox[{"\[Pi]", "\[Rule]", "6"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.96247630737676*^9, 3.962523008986158*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"3ff1f20e-1125-4e40-b2f7-55bb8c3654bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expresiones", "Subsection",
 CellChangeTimes->{{3.9623897441383743`*^9, 
  3.9623897461293497`*^9}},ExpressionUUID->"5216b30e-7c93-496d-b29f-\
7299eb2c1912"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c", "+", 
   RowBox[{"f", "[", "x", "]"}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"g", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9623927025021276`*^9, 3.9623927506329308`*^9}, {
  3.9623929488566923`*^9, 3.9623929503522253`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"bf14ae5f-0d2f-4c1b-9c06-1dbf5d98676b"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"f", "[", "x", "]"}], "+", 
  RowBox[{"d", " ", 
   RowBox[{"g", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.962443086013752*^9, 3.9624516307629023`*^9, 
  3.962451668155616*^9, 3.9624522989017982`*^9, 3.96245254188694*^9, 
  3.9624746973106747`*^9, 3.9625230091611977`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"866ce9fd-ee32-446c-895b-81655c0c3756"]
}, Open  ]],

Cell["\<\
Las expresiones de Mathematica son en s\[IAcute] mismas una estructura de \
datos que se puede manipular en el propio lenguaje.\
\>", "Text",
 CellChangeTimes->{{3.962476748369609*^9, 3.962476776961772*^9}, {
  3.962476830352552*^9, 
  3.96247683266636*^9}},ExpressionUUID->"50b4ecf4-4ff0-48fc-8be5-\
b0e888dc9106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.9624767785733013`*^9, 3.962476799653798*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"6fdcac13-6e22-48dc-951f-f7eb65fd9552"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"c", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"b", ",", "x"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"d", ",", 
       RowBox[{"g", "[", "x", "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.962476783136204*^9, 3.962476800148727*^9}, 
   3.9625230092680893`*^9},
 CellLabel->
  "Out[251]//FullForm=",ExpressionUUID->"6c90bd43-32fc-484a-9943-\
d80685892cef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.962476571473035*^9, 3.962476576172648*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"bf70d324-f066-4a72-9352-4ece4cb8b19f"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.8090680674665818`, 1.8090680674665818`}, {0., 
     1.2060453783110545`}, {0.6030226891555273, 1.2060453783110545`}, {
     0.30151134457776363`, 0.6030226891555273}, {0.9045340337332909, 
     0.6030226891555273}, {1.8090680674665818`, 1.2060453783110545`}, {
     1.507556722888818, 0.6030226891555273}, {2.1105794120443453`, 
     0.6030226891555273}, {1.8090680674665818`, 0.}, {2.412090756622109, 
     0.}, {2.7136021011998728`, 1.2060453783110545`}, {2.7136021011998728`, 
     0.6030226891555273}, {3.6181361349331636`, 1.2060453783110545`}, {
     3.3166247903554, 0.6030226891555273}, {3.9196474795109273`, 
     0.6030226891555273}, {3.9196474795109273`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 3}, {1, 6}, {1, 11}, {1, 13}, {3, 4}, {3, 5}, {6, 
        7}, {6, 8}, {8, 9}, {8, 10}, {11, 12}, {13, 14}, {13, 15}, {15, 
        16}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"c", "+", 
            RowBox[{"b", " ", "x"}], "+", 
            RowBox[{"a", " ", 
              SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"f", "[", "x", "]"}], "+", 
            RowBox[{"d", " ", 
              RowBox[{"g", "[", "x", "]"}]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c + $CellContext`b $CellContext`x + \
$CellContext`a $CellContext`x^2 + $CellContext`f[$CellContext`x] + \
$CellContext`d $CellContext`g[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["c",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox["c", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"b", " ", "x"}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b $CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["b",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["b", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox[
          RowBox[{"a", " ", 
            SuperscriptBox["x", "2"]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a $CellContext`x^2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Power", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          SuperscriptBox["x", "2"], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x^2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox[
          RowBox[{"f", "[", "x", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 13],
         TagBox[
          RowBox[{"d", " ", 
            RowBox[{"g", "[", "x", "]"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`d $CellContext`g[$CellContext`x]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["d",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 14],
         TagBox["d", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`d], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["g", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 15],
         TagBox[
          RowBox[{"g", "[", "x", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`g[$CellContext`x]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.047058823529411764`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 16],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.8090680674665818`, 1.8090680674665818`}, {
      0., 1.2060453783110545`}, {0.6030226891555273, 1.2060453783110545`}, {
      0.30151134457776363`, 0.6030226891555273}, {0.9045340337332909, 
      0.6030226891555273}, {1.8090680674665818`, 1.2060453783110545`}, {
      1.507556722888818, 0.6030226891555273}, {2.1105794120443453`, 
      0.6030226891555273}, {1.8090680674665818`, 0.}, {2.412090756622109, 
      0.}, {2.7136021011998728`, 1.2060453783110545`}, {2.7136021011998728`, 
      0.6030226891555273}, {3.6181361349331636`, 1.2060453783110545`}, {
      3.3166247903554, 0.6030226891555273}, {3.9196474795109273`, 
      0.6030226891555273}, {3.9196474795109273`, 0.}}]& ],
   AspectRatio->NCache[2 Rational[2, 17]^Rational[1, 2], 0.6859943405700354],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[$CellContext`c + $CellContext`b $CellContext`x + $CellContext`a \
$CellContext`x^2 + $CellContext`f[$CellContext`x] + $CellContext`d \
$CellContext`g[$CellContext`x]],
  Editable->False]], "Output",
 CellChangeTimes->{3.9624765768100433`*^9, 3.962523009380934*^9},
 CellLabel->
  "Out[252]//TreeForm=",ExpressionUUID->"9f829e3f-f3a9-46b0-b014-\
f51b2afa27bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476581095749*^9, 3.962476595820511*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"83ef052e-c99e-43d6-9214-b960c216c11c"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{{3.962476589378234*^9, 3.962476596368848*^9}, 
   3.962523009479158*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"bc2fdeef-aef3-417a-9d90-847a46dc031d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624766024449883`*^9, 3.9624766103258457`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"7893f3db-fb00-4c76-b79f-785c2b579967"],

Cell[BoxData[
 RowBox[{"d", " ", 
  RowBox[{"g", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.962476607132123*^9, 3.962476610805622*^9}, 
   3.962523009559897*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"5869749d-b962-45a9-9602-af0a438bedbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", 
   RowBox[{"5", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476614949901*^9, 3.962476618942542*^9}, {
  3.962476679072091*^9, 3.9624766795469303`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"6e1f82bb-3fbf-40d1-ac12-0e3eba93858e"],

Cell[BoxData[
 RowBox[{"g", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.962476619640937*^9, 3.962476683980545*^9, 
  3.962523009629629*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"4ec625ae-528d-4c9b-9da8-5f265119caf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", 
   RowBox[{"5", ",", "2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.962476699966404*^9, 3.962476724723441*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"def0f6da-02e4-44bb-bfb3-a7c950155d0e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.9624767049965563`*^9, 3.962476725066909*^9}, 
   3.962523009697296*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"b8966531-2fde-4070-9ca0-8647c6b52501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.962477047679068*^9, 3.9624770524677477`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"84a70ada-37a9-4720-b3af-02351663d362"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.962477053015561*^9, 3.962523009769261*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"5b5a087d-45e7-4a6a-adb6-7d3f8f8d664e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datasets", "Subsection",
 CellChangeTimes->{{3.9623897621674013`*^9, 
  3.962389763852783*^9}},ExpressionUUID->"859e0c02-f94e-4ef5-8db6-\
d947361aebb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "19"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "39"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "18"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "48"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "30"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<2nd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "20"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "39"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "False"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "23"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
       RowBox[{"\"\<survived\>\"", "\[Rule]", "True"}]}], 
      "\[RightAssociation]"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.962392953797986*^9, 3.962392956052127*^9}, {
  3.9623931208692207`*^9, 3.962393185834228*^9}, {3.962393216083148*^9, 
  3.962393286674341*^9}, {3.962393349262917*^9, 3.962393393565423*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"8e40d8d2-4e5c-4295-8b85-5497404a2c7a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     10, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sex"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "survived"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{191.25, {118.349609375, 122.650390625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{191.25, {118.349609375, 122.650390625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9623931376290007`*^9, 3.96239315969201*^9}, {
   3.9623931906058207`*^9, 3.962393217538436*^9}, {3.962393248770013*^9, 
   3.962393265991302*^9}, {3.9623933579363832`*^9, 3.962393394136919*^9}, 
   3.962451632084117*^9, 3.962451668329941*^9, 3.962452299051413*^9, 
   3.9624525454678993`*^9, 3.962474699162068*^9, 3.962523009888918*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"6f0b1e0c-f7f0-437e-b548-10efd04e0b06"]
}, Open  ]],

Cell[TextData[{
 "Los ",
 StyleBox["Datasets",
  FontSlant->"Italic"],
 " son conjuntos de datos organizados especializados para el an\[AAcute]lisis \
de datos."
}], "Text",
 CellChangeTimes->{{3.9624801262563353`*^9, 
  3.962480185198071*^9}},ExpressionUUID->"d136684b-9af0-4956-94e4-\
0a35bd0daf3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "\"\<class\>\""}], "]"}], "@", "data"}]], "Input",
 CellChangeTimes->{{3.96247819656677*^9, 3.962478218539991*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"6f9642e1-9f04-43f9-bc48-ae48047233d5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "3rd", "1st", "3rd", "1st", "1st", "1st", "2nd", "3rd", "3rd", "1st"}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[1, 10, 10, 31.5], 10, 10, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[1, 10, 10, 31.5], 10, 10, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["1st", "2nd", "3rd"]], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     1, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{375.75, {14.599609375, 18.900390625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{375.75, {14.599609375, 18.900390625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.962478213798441*^9, 3.9624782191445627`*^9}, 
   3.962523010129675*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"18dee471-ed27-4d6c-9ff7-510b8f1e0a20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#sex", "==", "\"\<male\>\""}], "&"}], "]"}], ",", 
    "\"\<age\>\""}], "]"}], "@", "data"}]], "Input",
 CellChangeTimes->{{3.962477723543528*^9, 3.9624777653589077`*^9}, {
  3.9624778579491243`*^9, 3.9624778582641907`*^9}, {3.9624779634895372`*^9, 
  3.9624781909568653`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"0f3da45b-a9ef-47e4-804a-73f129daed53"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {19, 39, 18, 48, 20, 32, 39}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 7, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 7], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{40.75, {76.849609375, 81.150390625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{40.75, {76.849609375, 81.150390625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.962477731353463*^9, 3.962477765863824*^9}, 
   3.962477858841983*^9, {3.96247807751865*^9, 3.9624781916815166`*^9}, 
   3.962523010426384*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"9310318d-eaad-4799-a39b-d4ff1e19cd24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<class\>\"", ",", "\"\<survived\>\""}], "}"}]}], "]"}], "@", 
  "data"}]], "Input",
 CellChangeTimes->{{3.962478302181552*^9, 3.962478331322975*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"cda7b6c9-251f-46c0-a59a-56be84a3f951"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>, <|
       "class" -> "2nd", "survived" -> True|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "3rd", "survived" -> False|>, <|
       "class" -> "1st", "survived" -> True|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 
        1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 
        1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     10, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "survived"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{82.25, {118.349609375, 122.650390625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{82.25, {118.349609375, 122.650390625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.962478331805628*^9, 3.962523010616486*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"fbb031c1-9ec8-4e0a-bf06-ac05b6146a5f"]
}, Open  ]],

Cell["\<\
Estos pueden ser m\[AAcute]s complicados que simplemente datos tabulares al \
costo de una menor eficiencia computacional.\
\>", "Text",
 CellChangeTimes->{{3.962480198619358*^9, 
  3.96248022723836*^9}},ExpressionUUID->"56c22222-5810-4d7e-a463-\
632a6f6070dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Dataset\>\"", ",", "\"\<StatePopulations\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.962478356370142*^9, 3.962478379232615*^9}, {
  3.962478516513751*^9, 3.9624785195953703`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"3f16a556-6a02-455c-996c-1e61ca87b573"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6997248269560274329336187772196334538617830481036925984736], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[90], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[150], 
                TypeSystem`PackageScope`AtomShape[75]]], 2, 
              DirectedInfinity[1], {All}]]], 10, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            Entity["Country"]], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             Entity["AdministrativeDivision"]], 
            TypeSystem`Atom[
             Quantity[1, "People"]], TypeSystem`AnyLength], 198], 
         "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[90], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[150], 
                TypeSystem`PackageScope`AtomShape[75]]], 2, 
              DirectedInfinity[1], {All}]]], 10, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            Entity["Country"]], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             Entity["AdministrativeDivision"]], 
            TypeSystem`Atom[
             Quantity[1, "People"]], TypeSystem`AnyLength], 198], 
         "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1,
          "DataRowCount" -> 198, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Afghanistan\""], 
                    Style[
                    RawBoxes["\"Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Badakhshan, Afghanistan\""], 
                    Style[
                    RawBoxes["\"Badakhshan, Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"805500", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Badakhshan", "Afghanistan"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Badghis, Afghanistan\""], 
                    Style[
                    RawBoxes["\"Badghis, Afghanistan\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"420400", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Badghis", "Afghanistan"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["31 total \:203a ", ""], 
                    Style[
                    Superscript["31 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Afghanistan"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Albania\""], 
                    Style[
                    RawBoxes["\"Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Albania"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Berat, Albania\""], 
                    Style[
                    RawBoxes["\"Berat, Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"193855", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Berat", "Albania"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Dib\[EDoubleDot]r, Albania\""], 
                    Style[
                    RawBoxes["\"Dib\[EDoubleDot]r, Albania\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"191035", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Dibre", "Albania"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["12 total \:203a ", ""], 
                    Style[
                    Superscript["12 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Albania"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Albania"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Algeria\""], 
                    Style[
                    RawBoxes["\"Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Algeria"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Adrar, Algeria\""], 
                    Style[
                    RawBoxes["\"Adrar, Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"311615", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Adrar", "Algeria"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ain Eddefla, Algeria\""], 
                    Style[
                    RawBoxes["\"Ain Eddefla, Algeria\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"660342", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"AinEddefla", "Algeria"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["48 total \:203a ", ""], 
                    Style[
                    Superscript["48 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Algeria"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Algeria"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"American Samoa\""], 
                    Style[
                    RawBoxes["\"American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, "RowHeader", False],
                    "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Eastern, American Samoa\""], 
                    Style[
                    RawBoxes["\"Eastern, American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"23441", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Eastern", "AmericanSamoa"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Manu\:02bba, American Samoa\""], 
                    Style[
                    RawBoxes["\"Manu\:02bba, American Samoa\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"1378", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Manua", "AmericanSamoa"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AmericanSamoa"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Andorra\""], 
                    Style[
                    RawBoxes["\"Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Andorra"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Andorra la Vella, Andorra\""], 
                    Style[
                    RawBoxes["\"Andorra la Vella, Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"21189", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AndorraLaVella", "Andorra"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Canillo, Andorra\""], 
                    Style[
                    RawBoxes["\"Canillo, Andorra\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"2706", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Canillo", "Andorra"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["7 total \:203a ", ""], 
                    Style[
                    Superscript["7 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Andorra"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Andorra"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Angola\""], 
                    Style[
                    RawBoxes["\"Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Angola"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Bengo, Angola\""], 
                    Style[
                    RawBoxes["\"Bengo, Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"196100", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Bengo", "Angola"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Benguela, Angola\""], 
                    Style[
                    RawBoxes["\"Benguela, Angola\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"656600", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Benguela", "Angola"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["18 total \:203a ", ""], 
                    Style[
                    Superscript["18 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Angola"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Angola"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Barbuda, Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Barbuda, Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"1325", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Barbuda", "AntiguaBarbuda"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Redonda, Antigua Barbuda\""], 
                    Style[
                    RawBoxes["\"Redonda, Antigua Barbuda\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"0", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Redonda", "AntiguaBarbuda"}]]}, "Item", False], "Mouse"],
                   ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["8 total \:203a ", ""], 
                    Style[
                    Superscript["8 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "AntiguaBarbuda"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Argentina\""], 
                    Style[
                    RawBoxes["\"Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Argentina"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Buenos Aires, Argentina\""], 
                    Style[
                    RawBoxes["\"Buenos Aires, Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"13827203", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"BuenosAires", "Argentina"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Catamarca, Argentina\""], 
                    Style[
                    RawBoxes["\"Catamarca, Argentina\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"334568", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Catamarca", "Argentina"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["24 total \:203a ", ""], 
                    Style[
                    Superscript["24 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Argentina"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Argentina"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Armenia\""], 
                    Style[
                    RawBoxes["\"Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Armenia"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Aragatsotn, Armenia\""], 
                    Style[
                    RawBoxes["\"Aragatsotn, Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"126278", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Aragatsotn", "Armenia"}]]}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ararat, Armenia\""], 
                    Style[
                    RawBoxes["\"Ararat, Armenia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"252665", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]], 
                    Key[
                    Entity["AdministrativeDivision", {"Ararat", "Armenia"}]]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["11 total \:203a ", ""], 
                    Style[
                    Superscript["11 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Armenia"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Armenia"]]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Australia\""], 
                    Style[
                    RawBoxes["\"Australia\""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Australia"]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Ashmore and Cartier Islands, Australia\""], 
                    Style[
                    RawBoxes["\"Ashmore and Cartier Islands, Australia\""], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"0", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AshmoreAndCartierIslands", "Australia"}]]}, "Item", 
                    False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["\"Australian Capital Territory, Australia\""], 
                    Style[
                    RawBoxes["\"Australian Capital Territory, Australia\""], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, 
                    "RowHeader", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    RowBox[{"323665", "\"people\""}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]], 
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "AustralianCapitalTerritory", "Australia"}]]}, "Item", 
                    False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["10 total \:203a ", ""], 
                    Style[
                    Superscript["10 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Australia"]]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[
                    Entity["Country", "Australia"]]}, "Item", False], 
                   "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                 Background -> GrayLevel[0.98]], SpanFromLeft}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 198, 1], {1, 198 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 198, 1], {1, 198 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[198, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[198, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 198, 1], {1, 198 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 198, 1], {1, 198 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {366.25, {297.474609375, 301.775390625}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {366.25, {297.474609375, 301.775390625}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6997248269560274329336187772196334538617830481036925984736,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{3.962478385221799*^9, 3.962478522974959*^9, 
  3.962523013272146*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"e651ac81-8150-47ca-a4dc-45beea61872b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["M\[AAcute]s estructuras de datos", "Subsection",
 CellChangeTimes->{{3.962443186919826*^9, 
  3.9624432041503763`*^9}},ExpressionUUID->"a6172a5a-014e-4ce3-831a-\
75689d1cf160"],

Cell["\<\
Adem\[AAcute]s de eso tenemos estructuras de datos m\[AAcute]s variadas que \
solo se comentar\[AAcute]n y se mostrar\[AAcute] un ejemplo, pero no se \
detallar\[AAcute]n\
\>", "Text",
 CellChangeTimes->{{3.962480276356666*^9, 
  3.9624803105668993`*^9}},ExpressionUUID->"83ee6888-aaf0-4113-a516-\
75888cda865e"],

Cell["\<\
Para arreglos de datos con pocos elementos relativos al tama\[NTilde]o del \
mismo\
\>", "Text",
 CellChangeTimes->{{3.962480314275449*^9, 
  3.962480345401497*^9}},ExpressionUUID->"f5f0dfd4-f121-4c7b-b9ce-\
39a97cca016b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "1"}]}], "\[Rule]", 
      "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.962448028409569*^9, 3.962448029934373*^9}, {
   3.962480236965496*^9, 3.962480256248787*^9}, {3.962480347866047*^9, 
   3.962480401079501*^9}, 3.962480432698107*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"a89e73d8-df1f-4c94-984d-79fa3303c91b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKj6/
yEMzreG+vaNe4ZPGEy/sz/2orS2ofW+v8D5UW7juqD0DFIhsOflwst9lmpuP
S/1wNR+XOK3NxyUOAC4TJC4=
              "], {{0, 0}, {5, 5}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKj6/
yEMzreG+vaNe4ZPGEy/sz/2orS2ofW+v8D5UW7juqD0DFIhsOflwst9lmpuP
S/1wNR+XOK3NxyUOAC4TJC4=
              "], {{0, 0}, {5, 5}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.52`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2"}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {5, 5}, 0, {
   1, {{0, 2, 5, 8, 11, 13}, {{2}, {1}, {1}, {3}, {2}, {2}, {4}, {3}, {4}, {
     5}, {3}, {4}, {5}}}, {1, -2, 1, 1, -2, 1, 1, -2, -2, 1, 1, 1, -2}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.962451632945305*^9, 3.962451668653665*^9, 3.962452299497476*^9, 
   3.962452546927758*^9, 3.962474699727153*^9, {3.96248038769751*^9, 
   3.962480401396837*^9}, 3.962480434524041*^9, 3.962523014137395*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"53f76b18-7064-4590-b832-b9601d56ae0a"]
}, Open  ]],

Cell["\<\
Para operaciones m\[AAcute]s eficientes con tipos de datos \
\[LeftGuillemet]est\[AAcute]ndar\[RightGuillemet]\
\>", "Text",
 CellChangeTimes->{{3.96248045582015*^9, 
  3.962480487095503*^9}},ExpressionUUID->"0ec401c6-5fe8-4e75-bde7-\
8029a9362996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericArray", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", "i"}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
   "\"\<UnsignedInteger8\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.962448629744829*^9, 3.962448633733274*^9}, {
  3.962480490154087*^9, 3.962480547208563*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"437a7f42-6e27-419f-9955-de180b810252"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "9", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "9", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0", "\", \"", "1", "\", \"", "3", "\", \"", "7", "\", \"",
                     "15", "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray["UnsignedInteger8",{0, 1, 3, 7, 15, 31, 63, 127, 255}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.962451633036351*^9, 3.962451668758121*^9, 3.962452299592601*^9, 
   3.962452547159979*^9, 3.9624746998142633`*^9, {3.962480526520939*^9, 
   3.962480547759088*^9}, 3.962523014216463*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"5921871f-64d7-4c6d-b59f-4f73be706027"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "\[Rule]", 
     RowBox[{"Mod", "[", 
      RowBox[{
       SuperscriptBox["i", "2"], ",", "74"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9624450671206083`*^9, 3.962445068100812*^9}, {
  3.9624806195994463`*^9, 3.962480620325742*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"f98a4b2c-184d-4019-be9f-fdcbd2afc0fa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 4, 3, 9, 16, 5, 25, 6, 36, 7, 49, 8, 64, 10, 26, 11, 47, 12,
       70, 13, 21, 14, 48, 15, 34, 17, 67, 18, 28, 19, 65, 20, 30, 71, 22, 40,
       23, 24, 58, 33, 27, 63, 44, 29, 31, 73, 32, 62, 53, 46, 35, 41, 38, 37,
       39, 42, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 66, 68, 69, 72,
       74, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
      91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100}, {{{1, 1}, {2, 3}, {4, 5}, {3, 6}, {7, 8}, {9, 10}, {11, 12}, {13, 
       14}, {5, 11}, {15, 16}, {17, 18}, {19, 20}, {21, 22}, {23, 24}, {25, 
       4}, {6, 26}, {27, 28}, {29, 30}, {31, 32}, {33, 34}, {22, 35}, {36, 
       37}, {38, 17}, {39, 40}, {8, 41}, {16, 15}, {42, 43}, {30, 44}, {45, 
       42}, {34, 19}, {46, 47}, {48, 49}, {41, 50}, {26, 51}, {52, 53}, {10, 
       54}, {55, 55}, {54, 54}, {56, 53}, {37, 51}, {53, 50}, {57, 49}, {58, 
       47}, {44, 19}, {59, 42}, {51, 44}, {18, 43}, {24, 15}, {12, 41}, {60, 
       40}, {61, 17}, {62, 37}, {50, 35}, {63, 34}, {64, 32}, {65, 30}, {66, 
       28}, {40, 26}, {67, 4}, {68, 24}, {69, 22}, {49, 20}, {43, 18}, {14, 
       16}, {32, 11}, {70, 14}, {28, 12}, {71, 10}, {72, 8}, {20, 6}, {35, 
       5}, {73, 3}, {47, 1}, {74, 75}, {76, 1}, {77, 3}, {78, 5}, {79, 6}, {
       80, 8}, {81, 10}, {82, 12}, {83, 14}, {84, 11}, {85, 16}, {86, 18}, {
       87, 20}, {88, 22}, {89, 24}, {90, 4}, {91, 26}, {92, 28}, {93, 30}, {
       94, 32}, {95, 34}, {96, 35}, {97, 37}, {98, 17}, {99, 40}, {100, 41}, {
       101, 15}}, Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxFVnk4Vmv3FskrkWF7DS8y7r0NrzKkQt4lUiFDaNJwJCkZ8lM0S9JoqqOc
Br7mRMMxlBLtlUpCkjEkoRSZI17Eb3/X9Z3OH/va132t53nWWvez1npurU0h
K/xERUREOtnvv38vx79tAggKfJ1dvSwPaOK8qEuJp+6oQLHVMVWJ9Xwsnvb1
4oWvXHA6rzD3dZ0Rniwut+lPHBGoneRezpnOwVNSsh1kqTjkidXr5NpK4737
w2nHqhQgve+v1QY3DVB61X63zENqIL9cQz3sqRKScf9XlHJIBfjHgpn8G0oY
/+aY1XCxPkiezaauTqGxoxu+qnrRIG9qHjV0hcTrJxRv7laWhUM9aF14QQKL
Em/zi8wUocfwjWxgqDT6tTaKy0cagWld7k7npXLoaO2jLpptCIX1qn8a6xI4
o+kTWXOGhOUfOOT3RgUMfJJvYmWgD26nh0RU0wn8vreyosfBEO4kFK5t0fvF
xOxJmQyuoqG+NHhGtpGQsTaMdV/yXgE8Qx3T297poWMt94NoOBfEt5pH2M+h
sUi0/de2/CHBaMUsae4GVTTNMwyzLxMKru/brXn3tBJuaJRfmtOtDe4nI4gp
HXLofDLmQ7ekLmQkvJSN9SHw703CsoFzHYI0uaoZeJqDWnYjC3PUZoB6y4oo
XpIBnhmMcnBLVoP3N7iX+jumomxSLjQ0qcCda/6eMygOFr64HJadzYGUv4xO
iWto4/GDZ47uEeVAhcj9yH0ndPD51daNHFNZ+J8f5l7Z18SdfFmIfWFXW5cm
ZGo04iZCQrkQZjuY9WyuNnL6pRaIXOBC3saosNIbOnhjpV5CXa44nFcLIKI3
ENhp+ER+64k+wcOH0pt8ukkMyFzysTxUKHhfZmnBNFFY5N1VrRtiBEF9k0+1
FH4wWz2aTpUKREFcInigUs4YGzStVP7sEQcb+4atWWiEDpGbl8qoK8JgxPaQ
dTsIDPp8arW5kS4Uhd1JFer/YgYTcj7bBpPQkM1xOxo8xhybm7CPbJoB7jcs
bB4X6eF/mucmP/ysDZY2de6yLaIYOENyiUK8AQT38rtuD2lh5UqLb9ed9cFw
yafx/9b3nMufHpcZa8BQFbniTiqF0+yE7/a482CD9peu6RSNGWX27U8mZ8Ld
fXfSFu/loozM9Ad7NSSgQqm7vYCg8a3o4nBHWznI97KTSclTxyOeN6yu6cmC
0HfOsYUiPGxOM9V0GyRBSuPXYU9FGi2smu5e+0hBqaiJoYQLH5vuJrosuCwD
8e9VfV1q1dGxOvpg0DwNsLJo3PPqKo26h85QDXEGcDC63+EyRwPFVaVUNB9q
Q4SrtL7g+k9m/5t82YVfxKEl5Xz0ZUtj9F93fxElwQeo/jh3s5jI73pqVRaP
i8qn0CHQVjzEQQVaOnmeaao66KX/tfaNkjTsaJaXCI/uZfY1qDyREk6FZuHj
WySljcDZNWDSoQYWc6buqAIOrgvKSLns3CloL4NcmeGpuJfbonzWRRvMpjkp
6BQQOLK2Zv/pHz2Cy/buav27VTBnKPOEW7kRxD/PDPNI4eI9K2LXHw/0gV/t
k7TOWA91cpduWXdEFTQEIS3bw1RRnXdrfew3Llg8ebmn0cMYV2fu37KndFxQ
FJbVse75nN/5/INFAjIJ89l6wPA6rkuy9+ms3hMV/0QZjvjN39xKG+Mkt3bv
27opUHy4rXtzvhQ+FbFKNjlLQEBRzLM5Nw2xGp1KY3hq4NCanml/TAVt7fTt
Z7WS4KSYpzLXVg+l2/yiny9SAo3KXLo3eAb2b6xflBXMh2QlG5H6Vwo48DbX
q3yhLMAa97W8nWJ4RVrijNJyfRh7fOKnZTI73xjORcNc+ne/ifstsUmNUoYF
EiW+v6oonN9kn7lc8F1g5fNx3O21Eh6YZzA/wVoHmpvU1jRaK2Gaxx8JIkMD
gnMSJSmSxaJ4vMA0+stdSXBxOSmnHGSIsaIxvA4dHkwrf+TgNySKmrOzm+sa
ROEQL9WlqUsb7X9JHk9rkgNlJn7myJteRibN9UeoszKolS//qOSmjTkV2rpl
K0VhQwVnrWKRIn7L951iW9EjYDdfX3WJxmm6fAvVt4bQdcqhO2RsKk6dVON2
+IlA3Ycj5w4AH9/EpKpkx3Ah3T11UoHgYtGg4tkZISSEz5Raot4rix1VCaJD
lhSIW6o+xBOaqLwzqeXDKgqo27u0diVr4rtAlXSvHRRs2SuWMPOOJvbKt999
fpiCncv6Ns8t0kT3iQNtfXEU2L+Z99z4syZuv/tysdZpCoIioraLTdXCkgyR
2bNiKRjVq227qKOFpzxdm20iKch2enbzM2jh7fb1P1Zvp+DI5DfZ/jVauKrL
n853p+B45jHkBWnh7jDx9UrmFMxebOygvUcLJQrewHr2/Wv+OuppeUALx6Q0
E66x/XtFrEp6FmvX3uA9PllLwkHJXzGK7P6H30/p+BWQMGvNsPU39nytuLjC
qNskZLZ2vqln/d/g1Wy/fomE/XlJ+QlsfCGLpU/eSCaBPLu08KeYFvJMfKn6
CyR0+IgHabP5cahn/pI3SQiKX25iwOZ/LeWj/N5HJLy86WM5jeVncNnFgcEK
Eqrely4NZvnbmndm7sduEs43JpXls/xOeIwaPPhAwg5zxuYmKuA2v+x3Eb0k
lPh4ut3KU8Be5YSKNaIUKI7kDUU8VEC30WChqyIFHbOW3FbNUcBygb28K01B
7H3vd4nZCrg04kGjkxUFa4VnmQbWvtnrlZKVCwUL9qT8PZyrgLseHEmU86Eg
90By2Zd8BRRN+5AUFEBDjNHPvg0zCfxPqVBb8wANWvNSnHlcAie+B+dcS6Bh
XfBY5xUNAofNpnl0X6HhHO8V000T6GlbbzCQTUN5+casEXMCT3nlJd56ScMy
34ArTxYR6BAQwxGro2HomaS/8QoCFwZ6OY1+pSGrJbNpiS+B++yv8b0/0WC8
QPBtw0sCZc06j/71hoZqqfTa9aUEnoyUOf4wj4YTu+xM4t4SqJ9qvBFv0fBg
ee6BzncEZqxe4/AsidUbT6967awk0ETr2/4XUTTY79zqb8DaFe1qoSaYBr/B
P8Klywmc2qZcPOFNw9feLWtnvSYwoo99YldQoGLLsbgZTmBD2bW5fQIKDlj4
NHSEsPHdMb4eyKdg0aSota8/gYc3J4vr8CjgrJjnr7SeQN1VL/gakhRUpKbu
nOFOYM+itldbh0nwmp4Us8yOQDNjZTfpdhJuZwwytWYEWhstlebWkGx/Oi8r
0CYw+Elcx6qzNHTZZDZLzxplHBftI8JjaHBpHY51WTPKLDnH8RTsosHmYqLh
prhRxnK4xLZgMw1t3xXa9Z+MMrRk3zWhBw2frfZcOdk6yox47fSfWETDbncd
6SCxMaa3etGFGhMarBfc+7tAfYy5MAB+JzRp2LYjfDjQZIx5ZexI2RtSECCS
szheeZwpbvQo/qhCgZGM7PFEvXGGNjWMDeBQgIrz5D8ajjOhSzcW9/9k54VT
BR3G4oJyfs3BLySsO09LuemOMysUfSXUqkk4rSv9Yzd3nJFTt06vKiTh4mtH
+Z9TxplPbi7C+5kkvJteHVfVPsZIu7wYXX2HhGIo2m+4f5QxeVX71jKfhC0p
kW87bUcZ87BliaFlJER8bp9TJz3K2Mofu/qD7ZfKP33DZ34SMh4imyCX7acK
u4m8e4+ETHR20/6sCRKsjT1dy5KFTKz5TMfGmRTsdnidse+AkGnhykVSWhQ4
z5ziV7ZNyOQ0SBQEcmlwjnzOzTg8wmTzJ3iVFA0nQ/2r03aNMB515GqHBTSM
bANH75ARZvqzAR7jSAOY3zIrYvFTS92ZputoWNvu4t4RPsLoD/awDUWDrnfA
NjwywgR0KVo2HaSB99DI0e78CHPxkdh3kUQavuy8Vu6XM8K839uSyQyRIJPd
X5fPpZEBV3wlRcF8VyO5o2Y0dvGb4xuVKVgVKRDx8qJR8ZL72R62/qLevtge
todGf43XWc/Y+XeByEwbY+e/TJyCzTcxCrYNVykRBaweL5ltnt9Jwt3FYxn6
dTQaviyIWFRKghzvV5FuB6uXzlh4T0lj76edmpPUT2Px0sWvy6JJiNf8klnS
S6O2folZrA8Jw0cCJ7raWP+Hm/sn7EjYpGPztKecRuqWT000nwSeafXUyCwa
rVyDDn6bRcJebnP+l0QaHcqXe9qrkTClTKayOpDGrF2z1Vq1SUiXN2iYs4zG
+lPFwgVmJNR7lN2toWk0yp7lNe5EQsi7szneMjRqmKa/NNpOwh9d5hdaxyj0
VRFrcIwnIe7+hawvAxQ+EL4Pj8kiIcP2Xaz6IIXSB+fdG2TrL6bESi90kkLP
TeHbawZICPhp+XVYgcYTL1X+usjquRdOyTWSbnz81Ld/Xcd7CkLTZ2+pDeOj
h5LMvK2vKUir9E66kMTHe2I5R1dmUhAcbBv74D4flzvaHr96hoLDXNdHo4V8
PKrzOLMwhMXWZls+lvHx6dy1mtFOFEj46xw5y+JBxXqqjJ3Pid4PO/XY9at+
LEndMp2CjF/vP/vd4yOn+PK9Qja+iuaDk51n+Dh/pWTxyzYSbCdFD3eE8v+n
P8nf+vMfu9e0jdW6Bv/uL9JrW6kj+e/53yVOhKZ1G/32Py09Y/u3eqPf8SWk
2lTufmv0O37itXHfbBb/kx/RK5+qwK7/J386WbNkdZfRb356TKcVhkn8y5+e
t2nfPJr/m9/KxyWHpjrz8f8BER/B3Q==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.014834336830863836`], 
         ArrowBox[BezierCurveBox[{1, 105, 108, 110, 116, 118, 121, 1},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[{2, 3}, 0.08257698229096899], 
         ArrowBox[{3, 6}, 0.08257698229096899], 
         ArrowBox[{4, 5}, 0.08257698229096899], 
         ArrowBox[{5, 11}, 0.08257698229096899], 
         ArrowBox[{6, 26}, 0.08257698229096899], 
         ArrowBox[{7, 8}, 0.08257698229096899], 
         ArrowBox[{8, 41}, 0.08257698229096899], 
         ArrowBox[{9, 10}, 0.08257698229096899], 
         ArrowBox[{10, 54}, 0.08257698229096899], 
         ArrowBox[{11, 12}, 0.08257698229096899], 
         ArrowBox[{12, 41}, 0.08257698229096899], 
         ArrowBox[{13, 14}, 0.08257698229096899], 
         ArrowBox[{14, 16}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{15, {11.967742913429294`, -4.852373573384701}, 16}],
           0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{16, {11.901522422833525`, -5.278505456155231}, 15}],
           0.08257698229096899], ArrowBox[{17, 18}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{18, {11.837349109245292`, -1.840884092467536}, 43}],
           0.08257698229096899], ArrowBox[{19, 20}, 0.08257698229096899], 
         ArrowBox[{20, 6}, 0.08257698229096899], 
         ArrowBox[{21, 22}, 0.08257698229096899], 
         ArrowBox[{22, 35}, 0.08257698229096899], 
         ArrowBox[{23, 24}, 0.08257698229096899], 
         ArrowBox[{24, 15}, 0.08257698229096899], 
         ArrowBox[{25, 4}, 0.08257698229096899], 
         ArrowBox[{26, 51}, 0.08257698229096899], 
         ArrowBox[{27, 28}, 0.08257698229096899], 
         ArrowBox[{28, 12}, 0.08257698229096899], 
         ArrowBox[{29, 30}, 0.08257698229096899], 
         ArrowBox[{30, 44}, 0.08257698229096899], 
         ArrowBox[{31, 32}, 0.08257698229096899], 
         ArrowBox[{32, 11}, 0.08257698229096899], 
         ArrowBox[{33, 34}, 0.08257698229096899], 
         ArrowBox[{34, 19}, 0.08257698229096899], 
         ArrowBox[{35, 5}, 0.08257698229096899], 
         ArrowBox[{36, 37}, 0.08257698229096899], 
         ArrowBox[{37, 51}, 0.08257698229096899], 
         ArrowBox[{38, 17}, 0.08257698229096899], 
         ArrowBox[{39, 40}, 0.08257698229096899], 
         ArrowBox[{40, 26}, 0.08257698229096899], 
         ArrowBox[{41, 50}, 0.08257698229096899], 
         ArrowBox[{42, 43}, 0.08257698229096899], 
         ArrowBox[
          BezierCurveBox[{43, {11.790953593672, -1.447012408309082}, 18}], 
          0.08257698229096899], ArrowBox[{44, 19}, 0.08257698229096899], 
         ArrowBox[{45, 42}, 0.08257698229096899], 
         ArrowBox[{46, 47}, 0.08257698229096899], 
         ArrowBox[{47, 1}, 0.08257698229096899], 
         ArrowBox[{48, 49}, 0.08257698229096899], 
         ArrowBox[{49, 20}, 0.08257698229096899], 
         ArrowBox[{50, 35}, 0.08257698229096899], 
         ArrowBox[{51, 44}, 0.08257698229096899], 
         ArrowBox[{52, 53}, 0.08257698229096899], 
         ArrowBox[{53, 50}, 0.08257698229096899], 
         ArrowBox[BezierCurveBox[{54, 192, 195, 197, 203, 205, 208, 54},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[BezierCurveBox[{55, 215, 218, 220, 226, 228, 231, 55},
           SplineDegree->7], 0.08257698229096899], 
         ArrowBox[{56, 53}, 0.08257698229096899], 
         ArrowBox[{57, 49}, 0.08257698229096899], 
         ArrowBox[{58, 47}, 0.08257698229096899], 
         ArrowBox[{59, 42}, 0.08257698229096899], 
         ArrowBox[{60, 40}, 0.08257698229096899], 
         ArrowBox[{61, 17}, 0.08257698229096899], 
         ArrowBox[{62, 37}, 0.08257698229096899], 
         ArrowBox[{63, 34}, 0.08257698229096899], 
         ArrowBox[{64, 32}, 0.08257698229096899], 
         ArrowBox[{65, 30}, 0.08257698229096899], 
         ArrowBox[{66, 28}, 0.08257698229096899], 
         ArrowBox[{67, 4}, 0.08257698229096899], 
         ArrowBox[{68, 24}, 0.08257698229096899], 
         ArrowBox[{69, 22}, 0.08257698229096899], 
         ArrowBox[{70, 14}, 0.08257698229096899], 
         ArrowBox[{71, 10}, 0.08257698229096899], 
         ArrowBox[{72, 8}, 0.08257698229096899], 
         ArrowBox[{73, 3}, 0.08257698229096899], 
         ArrowBox[{74, 75}, 0.08257698229096899], 
         ArrowBox[{76, 1}, 0.08257698229096899], 
         ArrowBox[{77, 3}, 0.08257698229096899], 
         ArrowBox[{78, 5}, 0.08257698229096899], 
         ArrowBox[{79, 6}, 0.08257698229096899], 
         ArrowBox[{80, 8}, 0.08257698229096899], 
         ArrowBox[{81, 10}, 0.08257698229096899], 
         ArrowBox[{82, 12}, 0.08257698229096899], 
         ArrowBox[{83, 14}, 0.08257698229096899], 
         ArrowBox[{84, 11}, 0.08257698229096899], 
         ArrowBox[{85, 16}, 0.08257698229096899], 
         ArrowBox[{86, 18}, 0.08257698229096899], 
         ArrowBox[{87, 20}, 0.08257698229096899], 
         ArrowBox[{88, 22}, 0.08257698229096899], 
         ArrowBox[{89, 24}, 0.08257698229096899], 
         ArrowBox[{90, 4}, 0.08257698229096899], 
         ArrowBox[{91, 26}, 0.08257698229096899], 
         ArrowBox[{92, 28}, 0.08257698229096899], 
         ArrowBox[{93, 30}, 0.08257698229096899], 
         ArrowBox[{94, 32}, 0.08257698229096899], 
         ArrowBox[{95, 34}, 0.08257698229096899], 
         ArrowBox[{96, 35}, 0.08257698229096899], 
         ArrowBox[{97, 37}, 0.08257698229096899], 
         ArrowBox[{98, 17}, 0.08257698229096899], 
         ArrowBox[{99, 40}, 0.08257698229096899], 
         ArrowBox[{100, 41}, 0.08257698229096899], 
         ArrowBox[{101, 15}, 0.08257698229096899]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08257698229096899], DiskBox[2, 0.08257698229096899], 
         DiskBox[3, 0.08257698229096899], DiskBox[4, 0.08257698229096899], 
         DiskBox[5, 0.08257698229096899], DiskBox[6, 0.08257698229096899], 
         DiskBox[7, 0.08257698229096899], DiskBox[8, 0.08257698229096899], 
         DiskBox[9, 0.08257698229096899], DiskBox[10, 0.08257698229096899], 
         DiskBox[11, 0.08257698229096899], DiskBox[12, 0.08257698229096899], 
         DiskBox[13, 0.08257698229096899], DiskBox[14, 0.08257698229096899], 
         DiskBox[15, 0.08257698229096899], DiskBox[16, 0.08257698229096899], 
         DiskBox[17, 0.08257698229096899], DiskBox[18, 0.08257698229096899], 
         DiskBox[19, 0.08257698229096899], DiskBox[20, 0.08257698229096899], 
         DiskBox[21, 0.08257698229096899], DiskBox[22, 0.08257698229096899], 
         DiskBox[23, 0.08257698229096899], DiskBox[24, 0.08257698229096899], 
         DiskBox[25, 0.08257698229096899], DiskBox[26, 0.08257698229096899], 
         DiskBox[27, 0.08257698229096899], DiskBox[28, 0.08257698229096899], 
         DiskBox[29, 0.08257698229096899], DiskBox[30, 0.08257698229096899], 
         DiskBox[31, 0.08257698229096899], DiskBox[32, 0.08257698229096899], 
         DiskBox[33, 0.08257698229096899], DiskBox[34, 0.08257698229096899], 
         DiskBox[35, 0.08257698229096899], DiskBox[36, 0.08257698229096899], 
         DiskBox[37, 0.08257698229096899], DiskBox[38, 0.08257698229096899], 
         DiskBox[39, 0.08257698229096899], DiskBox[40, 0.08257698229096899], 
         DiskBox[41, 0.08257698229096899], DiskBox[42, 0.08257698229096899], 
         DiskBox[43, 0.08257698229096899], DiskBox[44, 0.08257698229096899], 
         DiskBox[45, 0.08257698229096899], DiskBox[46, 0.08257698229096899], 
         DiskBox[47, 0.08257698229096899], DiskBox[48, 0.08257698229096899], 
         DiskBox[49, 0.08257698229096899], DiskBox[50, 0.08257698229096899], 
         DiskBox[51, 0.08257698229096899], DiskBox[52, 0.08257698229096899], 
         DiskBox[53, 0.08257698229096899], DiskBox[54, 0.08257698229096899], 
         DiskBox[55, 0.08257698229096899], DiskBox[56, 0.08257698229096899], 
         DiskBox[57, 0.08257698229096899], DiskBox[58, 0.08257698229096899], 
         DiskBox[59, 0.08257698229096899], DiskBox[60, 0.08257698229096899], 
         DiskBox[61, 0.08257698229096899], DiskBox[62, 0.08257698229096899], 
         DiskBox[63, 0.08257698229096899], DiskBox[64, 0.08257698229096899], 
         DiskBox[65, 0.08257698229096899], DiskBox[66, 0.08257698229096899], 
         DiskBox[67, 0.08257698229096899], DiskBox[68, 0.08257698229096899], 
         DiskBox[69, 0.08257698229096899], DiskBox[70, 0.08257698229096899], 
         DiskBox[71, 0.08257698229096899], DiskBox[72, 0.08257698229096899], 
         DiskBox[73, 0.08257698229096899], DiskBox[74, 0.08257698229096899], 
         DiskBox[75, 0.08257698229096899], DiskBox[76, 0.08257698229096899], 
         DiskBox[77, 0.08257698229096899], DiskBox[78, 0.08257698229096899], 
         DiskBox[79, 0.08257698229096899], DiskBox[80, 0.08257698229096899], 
         DiskBox[81, 0.08257698229096899], DiskBox[82, 0.08257698229096899], 
         DiskBox[83, 0.08257698229096899], DiskBox[84, 0.08257698229096899], 
         DiskBox[85, 0.08257698229096899], DiskBox[86, 0.08257698229096899], 
         DiskBox[87, 0.08257698229096899], DiskBox[88, 0.08257698229096899], 
         DiskBox[89, 0.08257698229096899], DiskBox[90, 0.08257698229096899], 
         DiskBox[91, 0.08257698229096899], DiskBox[92, 0.08257698229096899], 
         DiskBox[93, 0.08257698229096899], DiskBox[94, 0.08257698229096899], 
         DiskBox[95, 0.08257698229096899], DiskBox[96, 0.08257698229096899], 
         DiskBox[97, 0.08257698229096899], DiskBox[98, 0.08257698229096899], 
         DiskBox[99, 0.08257698229096899], DiskBox[100, 0.08257698229096899], 
         DiskBox[101, 0.08257698229096899]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.962451633125924*^9, 3.962451668861927*^9, 
  3.962452299714973*^9, 3.962452547748746*^9, 3.962474699905829*^9, 
  3.962480621405545*^9, 3.9625230143298807`*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"15d538a4-a751-4925-be9e-d669e28d9050"]
}, Open  ]],

Cell["Para representar datos jerarquizados", "Text",
 CellChangeTimes->{{3.962480786494596*^9, 
  3.962480794076062*^9}},ExpressionUUID->"2fe1eedd-1473-4af8-b8db-\
23cabb588dba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tree", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tree", "[", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d"}], "}"}]}], "]"}], ",", "e", ",", "f"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9624450704809217`*^9, 3.962445071024575*^9}, 
   3.962480779897359*^9},
 CellLabel->
  "In[266]:=",ExpressionUUID->"f4476b58-fd68-4263-a661-d6d3c05e2eb1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[$CellContext`a, {
       Tree[$CellContext`b, {
         Tree[$CellContext`c, None], 
         Tree[$CellContext`d, None]}], 
       Tree[$CellContext`e, None], 
       Tree[$CellContext`f, None]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         0.4082482904638631, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         1.2247448713915892`, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.2247448713915892`, 1.6546743414131073`}, {
         2.041241452319315, 0.8273371707065537}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.4082482904638631, 0.8273371707065537}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.4082482904638631, 0.8273371707065537}, {
         0.8164965809277261, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.2247448713915892, 1.6546743414131073}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.4082482904638631, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["c",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.8164965809277261, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["e",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2247448713915892, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["f",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.041241452319315, 0.8273371707065537}],
        "DynamicName",
        BoxID -> "VertexID$6"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.962451633228868*^9, 3.962451669015258*^9, 
  3.9624522998641043`*^9, 3.962452548148308*^9, 3.962474700039825*^9, 
  3.962480781000668*^9, 3.962523014439989*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"20c3c844-805f-4c16-b257-5e1d2da35efe"]
}, Open  ]],

Cell["\<\
Y de manera m\[AAcute]s general una gran variedad de estructuras nativas que \
podemos usar en Mathematica\
\>", "Text",
 CellChangeTimes->{{3.9624808381056643`*^9, 
  3.962480857892727*^9}},ExpressionUUID->"8276585c-dee1-4673-8d81-\
2d674b4650dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9624457976254797`*^9, 3.962445798812827*^9}, {
  3.962480859970151*^9, 3.962480886119484*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"8c7b53a3-5e4c-4f39-96b5-49c158893440"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataStructure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.041666666666666664`], {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                2.0273000000000003`, 19.7939}, {6.0003, 17.4999}, {
                2.0273000000000003`, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3.0276, 16.9389}, {
                3.9996, 17.4999}, {3.0276, 18.0609}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                14.}, {7., 14.}, {7., 21.}, {17., 21.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                15.}, {8., 15.}, {8., 20.}, {16., 20.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                8.}, {7., 8.}, {7., 15.}, {17., 15.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                9.}, {8., 9.}, {8., 14.}, {16., 14.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                2.}, {7., 2.}, {7., 9.}, {17., 9.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                3.}, {8., 3.}, {8., 8.}, {16., 8.}}}]}, {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{18.0273, 
                19.7939}, {22.0003, 17.4999}, {18.0273, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{19.0269, 
                16.9389}, {19.9999, 17.4999}, {19.0269, 18.0609}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Stack\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.041666666666666664`], {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                2.0273000000000003`, 19.7939}, {6.0003, 17.4999}, {
                2.0273000000000003`, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3.0276, 16.9389}, {
                3.9996, 17.4999}, {3.0276, 18.0609}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                14.}, {7., 14.}, {7., 21.}, {17., 21.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                15.}, {8., 15.}, {8., 20.}, {16., 20.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                8.}, {7., 8.}, {7., 15.}, {17., 15.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                9.}, {8., 9.}, {8., 14.}, {16., 14.}}}]}, {
               FaceForm[{
                 RGBColor[0.639, 0.706, 0.8], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 
                2.}, {7., 2.}, {7., 9.}, {17., 9.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                3.}, {8., 3.}, {8., 8.}, {16., 8.}}}]}, {
               FaceForm[{
                 RGBColor[0.325, 0.463, 0.627], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{18.0273, 
                19.7939}, {22.0003, 17.4999}, {18.0273, 15.2059}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{19.0269, 
                16.9389}, {19.9999, 17.4999}, {19.0269, 18.0609}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Stack\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DataStructure["Stack", {"Data" -> {}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9624516341487913`*^9, 3.962451669097506*^9, 3.962452299984829*^9, 
   3.96245254981383*^9, 3.962474700973899*^9, {3.9624808652796383`*^9, 
   3.9624808877917833`*^9}, 3.962523014506562*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"ea876883-dd4f-4906-9822-da9aa31eb064"]
}, Open  ]],

Cell["\<\
Esta es la alternativa a Dataset que solo representa datos tabulares, pero \
con operaciones m\[AAcute]s eficientes. Al haber salido en la ultima versi\
\[OAcute]n de Mathematica solo la mencionaremos por completitud con los \
ejemplos anteriores\
\>", "Text",
 CellChangeTimes->{{3.9624808955667*^9, 
  3.962480939053192*^9}},ExpressionUUID->"c8af6d6e-5cb3-48af-b58e-\
51af0456c942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tabular", "[", "]"}]], "Input",
 CellChangeTimes->{{3.962447654619937*^9, 3.962447656115641*^9}, 
   3.96248094117415*^9},
 CellLabel->
  "In[268]:=",ExpressionUUID->"6bd759f0-170a-481c-a347-1e9dd8ea1831"],

Cell[BoxData[
 RowBox[{"Tabular", "[", "]"}]], "Output",
 CellChangeTimes->{3.9624516345501223`*^9, 3.962451669134659*^9, 
  3.962452300086783*^9, 3.962452550165729*^9, 3.962474701125185*^9, 
  3.962480942010914*^9, 3.962523014593032*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"1a2fca9e-9050-4c56-b258-ec367e407659"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loops", "Section",
 CellChangeTimes->{{3.9623885737425823`*^9, 
  3.962388574524621*^9}},ExpressionUUID->"c619872e-29c5-42c7-a094-\
9612ec375cc9"],

Cell["Do", "Subsection",
 CellChangeTimes->{{3.9623967035777063`*^9, 
  3.9623967038382177`*^9}},ExpressionUUID->"3b653633-ef90-4bbb-bc8c-\
d62441261a0f"],

Cell["While", "Subsection",
 CellChangeTimes->{{3.96239670697394*^9, 
  3.962396707654513*^9}},ExpressionUUID->"398166f5-003f-4c68-8259-\
73e2564a48f2"],

Cell["For", "Subsection",
 CellChangeTimes->{{3.962396710620452*^9, 
  3.9623967110585737`*^9}},ExpressionUUID->"cb3bb342-e3b7-451b-983d-\
dadb96dfb5f5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024.5, 483},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f45c3ec-582d-4921-a042-5ed79ecd6506"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 3, 74, "Title",ExpressionUUID->"14760d54-f152-4faa-b6b8-e1084a22e5f0"],
Cell[758, 27, 223, 4, 39, "Subtitle",ExpressionUUID->"826ab967-09f3-4a22-a1b6-f76db4b06c5e"],
Cell[CellGroupData[{
Cell[1006, 35, 165, 3, 50, "Section",ExpressionUUID->"1b4fc069-987f-42f4-8c82-9d291191d9f4"],
Cell[1174, 40, 541, 11, 45, "Text",ExpressionUUID->"9786a098-cdf9-43ba-b66d-663283ce6f7c"],
Cell[1718, 53, 260, 6, 27, "Text",ExpressionUUID->"19713b78-b927-4ebf-896a-a7ca897cd263"],
Cell[CellGroupData[{
Cell[2003, 63, 154, 3, 41, "Subsection",ExpressionUUID->"b17ce209-c9e8-47f7-82da-5919a05dc82c"],
Cell[2160, 68, 384, 8, 27, "Text",ExpressionUUID->"fd8b0704-48ed-43ec-943b-7f22b5a3c3af"],
Cell[CellGroupData[{
Cell[2569, 80, 892, 22, 22, "Input",ExpressionUUID->"6e798641-f580-4af3-9ef8-b2a7cd0a42ec"],
Cell[3464, 104, 893, 22, 36, "Output",ExpressionUUID->"4ef124a1-6f7a-48d5-a213-c9dc2a9b4772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4394, 131, 219, 4, 34, "Subsubsection",ExpressionUUID->"137c5f25-b354-4028-8fd1-366fa737f716"],
Cell[4616, 137, 427, 8, 27, "Text",ExpressionUUID->"cd93b25a-d452-4380-a9a5-2f0ad9148ec0"],
Cell[CellGroupData[{
Cell[5068, 149, 2023, 50, 101, "Input",ExpressionUUID->"cce02272-4e04-4ee5-a6c4-a4dd16aea861"],
Cell[7094, 201, 1769, 38, 62, "Output",ExpressionUUID->"5aad5940-3fc8-4740-be14-e263bd805bab"]
}, {2}]],
Cell[CellGroupData[{
Cell[8897, 244, 230, 5, 22, "Input",ExpressionUUID->"71b38073-04c0-457f-b94b-10e48c2b7b9d"],
Cell[9130, 251, 299, 5, 36, "Output",ExpressionUUID->"9888abbf-3783-4854-989d-d7ca26940158"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9466, 261, 304, 6, 22, "Input",ExpressionUUID->"3749cd1e-2cb5-467a-9453-5845a32b075d"],
Cell[9773, 269, 364, 7, 36, "Output",ExpressionUUID->"6fdd085b-85dd-4eed-9737-dc4940807143"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10174, 281, 305, 7, 22, "Input",ExpressionUUID->"b10fce80-a4b2-4837-b408-caf6acabbe2b"],
Cell[10482, 290, 297, 5, 36, "Output",ExpressionUUID->"64f092fa-d09d-4781-8ce8-e9d6aa07f8ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10816, 300, 249, 6, 22, "Input",ExpressionUUID->"be398401-b31e-4bc6-b9cf-842cd52b3f4b"],
Cell[11068, 308, 324, 6, 36, "Output",ExpressionUUID->"97bccb96-0b22-4304-9aba-2b17d36a9df6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11429, 319, 337, 8, 22, "Input",ExpressionUUID->"dfe34bb4-38e9-48cb-9603-958c54a6345b"],
Cell[11769, 329, 523, 13, 36, "Output",ExpressionUUID->"e4eef17b-4fbb-46aa-a9ee-a1dc880915d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12329, 347, 257, 6, 22, "Input",ExpressionUUID->"0261a5cd-583a-4574-9337-260a6a3e1e0d"],
Cell[12589, 355, 328, 7, 36, "Output",ExpressionUUID->"e5b23109-b5d8-4c41-9996-b7c24a330757"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12954, 367, 319, 7, 22, "Input",ExpressionUUID->"12e54a2c-10d9-4a91-b607-f2a45aa310e7"],
Cell[13276, 376, 368, 7, 36, "Output",ExpressionUUID->"5ee55f4b-4c29-444a-af89-2e41ca762c68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13681, 388, 256, 6, 22, "Input",ExpressionUUID->"c1abd06f-52df-49aa-baa2-d1b72c00b57f"],
Cell[13940, 396, 444, 10, 36, "Output",ExpressionUUID->"f92b0d82-1768-4c1d-9b19-fee2f80d671c"]
}, Open  ]],
Cell[14399, 409, 285, 6, 27, "Text",ExpressionUUID->"61f10350-ea72-404d-bf5a-062d6ce4cd41"],
Cell[CellGroupData[{
Cell[14709, 419, 179, 3, 22, "Input",ExpressionUUID->"3ab8dc14-5554-46eb-87a3-ca71eccd45bd"],
Cell[14891, 424, 732, 19, 36, "Output",ExpressionUUID->"78e597df-cc0f-40b0-aed0-7c153fe4d0e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15660, 448, 311, 7, 22, "Input",ExpressionUUID->"7a967c96-3ee5-4e24-b447-bba7a54025ca"],
Cell[15974, 457, 253, 4, 36, "Output",ExpressionUUID->"f3f283c9-136a-46a9-9bb0-60a54753d68d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16264, 466, 182, 3, 22, "Input",ExpressionUUID->"e75658de-af30-4445-8054-9f9c9b22deca"],
Cell[16449, 471, 732, 19, 36, "Output",ExpressionUUID->"7476a970-94d5-460a-9d12-4b6f81f8d705"]
}, Open  ]],
Cell[17196, 493, 199, 4, 27, "Text",ExpressionUUID->"ae68dac4-d7d7-4cfc-809d-b35ca1097e1e"],
Cell[CellGroupData[{
Cell[17420, 501, 321, 8, 22, "Input",ExpressionUUID->"6a1b20fa-62e3-4961-8018-375e7b763085"],
Cell[17744, 511, 203, 4, 36, "Output",ExpressionUUID->"a809ce10-6425-41fa-877e-2067afc9be22"]
}, Open  ]],
Cell[17962, 518, 395, 7, 27, "Text",ExpressionUUID->"a300521d-a3f7-44d0-b9f6-437a008bf5de"],
Cell[CellGroupData[{
Cell[18382, 529, 210, 4, 22, "Input",ExpressionUUID->"7f85bd03-ca78-40b4-9908-2800ced98511"],
Cell[18595, 535, 206, 4, 36, "Output",ExpressionUUID->"a7c468d8-e7d8-46fa-abc8-8099838dd552"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18838, 544, 212, 4, 22, "Input",ExpressionUUID->"008b5060-d49f-43d6-8ac5-f5341ca5120f"],
Cell[19053, 550, 228, 5, 36, "Output",ExpressionUUID->"3ee4a37d-78ef-4165-85dd-be21d56dd5f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19318, 560, 212, 4, 22, "Input",ExpressionUUID->"70c77bbe-9fba-4c71-89d3-476300b30514"],
Cell[19533, 566, 616, 17, 36, "Output",ExpressionUUID->"4eb802b4-fbb9-4dca-8ed2-4940687a7b70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20186, 588, 214, 4, 22, "Input",ExpressionUUID->"73dfcf4c-9cc1-41c5-81f6-1c0f94a0fddd"],
Cell[20403, 594, 593, 17, 36, "Output",ExpressionUUID->"bf0e87c9-f936-4b84-8a4d-61905dfb8dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21033, 616, 286, 6, 22, "Input",ExpressionUUID->"24ee0930-dd58-4754-84de-cb3382e07ce3"],
Cell[21322, 624, 322, 7, 36, "Output",ExpressionUUID->"43347c53-25f3-44a5-aa5f-20ae136323d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21681, 636, 282, 6, 22, "Input",ExpressionUUID->"789cd46a-61eb-44c7-9062-a6f5b0ccf5bf"],
Cell[21966, 644, 606, 17, 36, "Output",ExpressionUUID->"32ddd0be-5f86-4a0a-9b6e-4ddac71274c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22609, 666, 252, 6, 22, "Input",ExpressionUUID->"5dee73aa-7830-4452-9ef0-21fbef753f1b"],
Cell[22864, 674, 325, 8, 36, "Output",ExpressionUUID->"6ba929c2-fe6c-40e6-b33c-6e845c3f4268"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23238, 688, 181, 3, 34, "Subsubsection",ExpressionUUID->"da6eda51-097e-4a58-bc01-d39effac9b8b"],
Cell[23422, 693, 195, 3, 27, "Text",ExpressionUUID->"be7921fc-2562-48ce-b406-ef392174bc59"],
Cell[CellGroupData[{
Cell[23642, 700, 244, 5, 22, "Input",ExpressionUUID->"083740ed-ed20-4a5c-b846-816cf3d97ece"],
Cell[23889, 707, 654, 18, 36, "Output",ExpressionUUID->"f16cb909-e0d3-4d0b-996a-7ed9d8836d49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24580, 730, 245, 5, 22, "Input",ExpressionUUID->"978fc430-c6cf-4856-9558-c78bed66191a"],
Cell[24828, 737, 654, 18, 36, "Output",ExpressionUUID->"c03852f5-ef72-4509-beb4-1e9dc9519c3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25519, 760, 254, 5, 22, "Input",ExpressionUUID->"35109185-1f53-489c-a306-d146eeceee79"],
Cell[25776, 767, 681, 18, 36, "Output",ExpressionUUID->"9a355d67-b77b-4664-8924-b2ff80d4dca2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26494, 790, 236, 5, 22, "Input",ExpressionUUID->"c25e0606-259b-4f1a-bb19-62c66e4d0beb"],
Cell[26733, 797, 575, 16, 36, "Output",ExpressionUUID->"7de8047d-1c8f-4ba2-a83d-e5e26d4ab986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27345, 818, 405, 9, 22, "Input",ExpressionUUID->"bb3fa6fc-7682-4700-a629-d338b1c96b3d"],
Cell[27753, 829, 323, 6, 36, "Output",ExpressionUUID->"34c83dac-2d0f-40ac-93fe-de91d49182a8"]
}, Open  ]],
Cell[28091, 838, 193, 3, 27, "Text",ExpressionUUID->"5120a043-d3e7-4df0-acdb-1c196a296e97"],
Cell[28287, 843, 310, 5, 27, "Text",ExpressionUUID->"362c5301-e612-4e41-b0a5-9724d2213c13"],
Cell[CellGroupData[{
Cell[28622, 852, 211, 4, 22, "Input",ExpressionUUID->"5eb97938-6450-48b9-8de5-8b99d8f2dec9"],
Cell[28836, 858, 201, 4, 36, "Output",ExpressionUUID->"75a46377-2540-4814-8349-73fbcdff9a5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29074, 867, 264, 6, 22, "Input",ExpressionUUID->"728798a8-7fe2-433a-b845-487972bf663d"],
Cell[29341, 875, 200, 4, 36, "Output",ExpressionUUID->"42093764-4eaf-4f1f-9516-646414a97571"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29578, 884, 218, 4, 22, "Input",ExpressionUUID->"7957571f-43e6-44d6-a1cf-81bceecce8eb"],
Cell[29799, 890, 225, 5, 36, "Output",ExpressionUUID->"fcbc66ae-b900-42a8-a4ac-065958a56677"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30061, 900, 272, 6, 22, "Input",ExpressionUUID->"5632cf6c-0fb8-4a5e-98dd-bbd380dd25a6"],
Cell[30336, 908, 251, 6, 36, "Output",ExpressionUUID->"91d5f2fe-6ab1-4d8e-9cf3-8a3fb6a6613a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30624, 919, 216, 4, 22, "Input",ExpressionUUID->"d623a8a5-d542-4e95-90fe-94386a8a9461"],
Cell[30843, 925, 202, 4, 36, "Output",ExpressionUUID->"07437ab2-0ff8-434d-b504-c6222f0df242"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31082, 934, 267, 6, 22, "Input",ExpressionUUID->"6e3927c9-e22a-4ddb-af2d-ddbb6e62ff5a"],
Cell[31352, 942, 200, 4, 36, "Output",ExpressionUUID->"e82b7f50-87d7-4003-aef9-f14bc4392c8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31589, 951, 213, 4, 22, "Input",ExpressionUUID->"79ab620f-b444-4f12-9136-8d09786befe6"],
Cell[31805, 957, 477, 11, 36, "Output",ExpressionUUID->"94d4c035-8bc8-433d-b2f1-e9fd03950f4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32319, 973, 292, 7, 22, "Input",ExpressionUUID->"3fa24d6e-5172-4361-997f-abede2e1653c"],
Cell[32614, 982, 668, 19, 36, "Output",ExpressionUUID->"8c0c4611-8034-4c82-95f5-88585237cf39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33319, 1006, 240, 5, 22, "Input",ExpressionUUID->"6a96f7eb-7bc8-4da8-803b-ac108ee26b69"],
Cell[33562, 1013, 843, 26, 36, "Output",ExpressionUUID->"87a7e6b4-9e73-456f-8a3d-85dab5e8cd5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34442, 1044, 214, 4, 22, "Input",ExpressionUUID->"b4407917-2b04-407e-bfa0-500f416e4948"],
Cell[34659, 1050, 634, 18, 36, "Output",ExpressionUUID->"1bd169fe-4f65-4af0-8fb4-f4681ae99d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35330, 1073, 210, 4, 22, "Input",ExpressionUUID->"33701890-2fca-4497-85d9-81b0867fd927"],
Cell[35543, 1079, 637, 18, 36, "Output",ExpressionUUID->"d356d71f-95b3-467d-bcb0-80cb4a43fff9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36229, 1103, 180, 3, 34, "Subsubsection",ExpressionUUID->"b6eceeb3-d1a1-4944-a868-2ae39ad26722"],
Cell[36412, 1108, 332, 9, 22, "Input",ExpressionUUID->"cb2a70c0-2348-4d7e-a390-29f112b55888"],
Cell[CellGroupData[{
Cell[36769, 1121, 204, 4, 22, "Input",ExpressionUUID->"8803f42e-6992-4136-ad81-c811a723a593"],
Cell[36976, 1127, 352, 9, 49, "Output",ExpressionUUID->"d9a1d0ca-baa9-49bb-a96b-dd2779276d87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37365, 1141, 268, 6, 22, "Input",ExpressionUUID->"e465fe67-9817-49dc-9474-b0a9dde63bbf"],
Cell[37636, 1149, 354, 9, 49, "Output",ExpressionUUID->"78440725-cb38-4431-bca6-03865ed7240d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38027, 1163, 204, 4, 22, "Input",ExpressionUUID->"bd01bd27-1ed6-4389-a13a-c63f9923d610"],
Cell[38234, 1169, 352, 9, 49, "Output",ExpressionUUID->"d550b9f1-f48f-440e-82a1-11bed882ef1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38623, 1183, 272, 7, 22, "Input",ExpressionUUID->"14bcb2e3-85fe-4113-b0d6-5f504efc7937"],
Cell[38898, 1192, 352, 9, 49, "Output",ExpressionUUID->"495f572a-9107-42b5-92ef-b54cf3687878"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39287, 1206, 201, 4, 22, "Input",ExpressionUUID->"adc71d77-7e9c-42dd-ab34-e5ea9a7097a5"],
Cell[39491, 1212, 339, 9, 49, "Output",ExpressionUUID->"4ae37d86-beba-4e57-a02a-f3c7b50da6fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39867, 1226, 271, 6, 22, "Input",ExpressionUUID->"76351214-d3f9-419e-baee-28141f809486"],
Cell[40141, 1234, 318, 8, 49, "Output",ExpressionUUID->"b02f51f6-a4b2-481e-a37a-a9f68cbc8387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40496, 1247, 209, 4, 22, "Input",ExpressionUUID->"74cd74f5-3fdc-49f5-9190-017277f0d02c"],
Cell[40708, 1253, 466, 11, 38, "Output",ExpressionUUID->"4e4f9ed4-5606-4b9a-99c1-e608e47486aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41211, 1269, 209, 4, 22, "Input",ExpressionUUID->"73f5439b-c384-4c18-8566-ab8d95745941"],
Cell[41423, 1275, 426, 11, 49, "Output",ExpressionUUID->"e594fda0-c14c-40ae-911d-fbbc7f45af9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41886, 1291, 211, 4, 22, "Input",ExpressionUUID->"4924bdb9-6359-4a2d-8599-5786ae277bfc"],
Cell[42100, 1297, 444, 12, 53, "Output",ExpressionUUID->"880b59df-bdd4-4f3c-981e-219b549c98f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42581, 1314, 211, 4, 22, "Input",ExpressionUUID->"9dff038f-32e6-4404-910e-7f5c7c363ba8"],
Cell[42795, 1320, 289, 8, 49, "Output",ExpressionUUID->"2efb7352-b214-4942-afa8-3f17ef5a7b44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43133, 1334, 170, 3, 34, "Subsubsection",ExpressionUUID->"a13b62fc-8008-4469-b725-a153b258e46c"],
Cell[43306, 1339, 1497, 24, 53, "Input",ExpressionUUID->"56c25cc0-4644-4529-a6f4-9d4302408669"],
Cell[CellGroupData[{
Cell[44828, 1367, 209, 4, 22, "Input",ExpressionUUID->"06a3613d-73fa-4922-abf0-9de5b58d1b80"],
Cell[45040, 1373, 177, 3, 36, "Output",ExpressionUUID->"1c5c1562-15a4-4f62-b2f4-fc2de9ea8e98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45254, 1381, 209, 4, 22, "Input",ExpressionUUID->"7b8dfa4c-df88-4723-9b22-7bf6bc4cff38"],
Cell[45466, 1387, 178, 3, 36, "Output",ExpressionUUID->"1e2bc26d-c83c-48fb-967c-90205e0f876f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45681, 1395, 210, 4, 22, "Input",ExpressionUUID->"4804a1e4-4c57-4525-9030-5c9f7687b2c7"],
Cell[45894, 1401, 200, 4, 49, "Output",ExpressionUUID->"666c89ae-1e59-4f2d-bc87-0dc431190c7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46131, 1410, 287, 6, 22, "Input",ExpressionUUID->"80337a37-66fc-4b51-a01b-4818204e9a07"],
Cell[46421, 1418, 179, 3, 36, "Output",ExpressionUUID->"ebb5c4ed-c00c-4743-b58c-83501c678fbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46637, 1426, 225, 4, 22, "Input",ExpressionUUID->"86fce3b7-b3e2-4796-9b37-aa761faf218a"],
Cell[46865, 1432, 239, 6, 62, "Output",ExpressionUUID->"e95e6deb-3420-4bdc-92de-2b0bb430c61d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47141, 1443, 247, 5, 22, "Input",ExpressionUUID->"3fd16929-1fd2-4fa4-8651-16897d2dfacd"],
Cell[47391, 1450, 218, 4, 36, "Output",ExpressionUUID->"2ac5f6c0-52f6-4046-8529-1127bb1849cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47658, 1460, 177, 3, 34, "Subsubsection",ExpressionUUID->"271b7638-74d1-4d5f-8f7e-e9a3ab3a52ae"],
Cell[CellGroupData[{
Cell[47860, 1467, 197, 4, 22, "Input",ExpressionUUID->"f2d0ae75-43ef-4dfa-a68f-3be904bf9b81"],
Cell[48060, 1473, 15255, 339, 134, "Output",ExpressionUUID->"7f17531d-6514-4bb1-9080-0611fcf66fde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63352, 1817, 281, 6, 22, "Input",ExpressionUUID->"23e2dabc-b236-4dae-b99a-2e0272e7b020"],
Cell[63636, 1825, 288, 7, 36, "Output",ExpressionUUID->"c1fe7fbf-28a5-4ea3-8b47-d1ca388ea07e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63961, 1837, 196, 4, 22, "Input",ExpressionUUID->"b43154ee-ced3-4b3f-af93-35a08b96074b"],
Cell[64160, 1843, 21151, 422, 193, "Output",ExpressionUUID->"50f0ddbd-531a-48ae-8046-6dd4de24cad3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85348, 2270, 373, 9, 22, "Input",ExpressionUUID->"c38161f5-da56-428e-918c-35c6fbbc5840"],
Cell[85724, 2281, 244, 5, 36, "Output",ExpressionUUID->"66bb8c9e-0b9a-4920-954b-f55d31e24b56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86005, 2291, 199, 4, 22, "Input",ExpressionUUID->"00081dcf-37a0-4ba7-b79e-fffe8104dfdf"],
Cell[86207, 2297, 24185, 457, 212, "Output",ExpressionUUID->"796e0faf-3403-4959-872f-b2ea12f2fe0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110429, 2759, 328, 8, 22, "Input",ExpressionUUID->"bc305e98-7aa0-4548-9473-2ba4ba8c823c"],
Cell[110760, 2769, 1103, 36, 36, "Output",ExpressionUUID->"3a1444d1-7803-456e-93cc-0637d7535702"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111900, 2810, 207, 4, 22, "Input",ExpressionUUID->"1ef3e79a-f1ed-4b55-8c39-f7a11eaac7f2"],
Cell[112110, 2816, 14679, 330, 115, "Output",ExpressionUUID->"ca871f0d-a7e1-4d29-ae22-fc1726c84a48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126826, 3151, 336, 8, 22, "Input",ExpressionUUID->"929a5531-02de-4958-b250-492722f50c47"],
Cell[127165, 3161, 406, 11, 36, "Output",ExpressionUUID->"dc2d6e55-688f-4ed5-8e2d-70fd1642da6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127608, 3177, 205, 4, 22, "Input",ExpressionUUID->"d58dda27-0e04-4af2-9b64-d8cd71f76d15"],
Cell[127816, 3183, 16105, 348, 154, "Output",ExpressionUUID->"57cbac1a-5cce-447c-a942-f7839a1b496e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143958, 3536, 336, 8, 22, "Input",ExpressionUUID->"a104949f-e27a-4eab-91f5-b593cc28b683"],
Cell[144297, 3546, 407, 11, 36, "Output",ExpressionUUID->"ed4d6d2e-c9c9-47b6-a6e6-9eced93d720f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144765, 3564, 156, 2, 41, "Subsection",ExpressionUUID->"bbb9a47a-d69d-45bc-9c52-878cef5f7496"],
Cell[CellGroupData[{
Cell[144946, 3570, 772, 16, 22, "Input",ExpressionUUID->"377a2318-7669-4668-a0fc-2366ad2a1bc2"],
Cell[145721, 3588, 865, 17, 38, "Output",ExpressionUUID->"9618d338-0a80-40fe-baad-636b89a2f2d0"]
}, Open  ]],
Cell[146601, 3608, 277, 6, 27, "Text",ExpressionUUID->"1eefe163-9ce3-40bd-97ea-5590ab9515b9"],
Cell[CellGroupData[{
Cell[146903, 3618, 219, 4, 22, "Input",ExpressionUUID->"e0373baa-4aba-4bf7-847c-959a4ad8a97d"],
Cell[147125, 3624, 191, 3, 36, "Output",ExpressionUUID->"2e949749-ab6e-4226-89e0-a81b812feef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147353, 3632, 246, 5, 22, "Input",ExpressionUUID->"d8bbff31-7738-44fc-991d-27fc91c21e0c"],
Cell[147602, 3639, 221, 4, 36, "Output",ExpressionUUID->"5b0b90aa-de53-418f-ba58-ff284c0d41b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147860, 3648, 210, 4, 22, "Input",ExpressionUUID->"1ed2b674-70b5-4f08-8f7d-138f123a89b8"],
Cell[148073, 3654, 289, 6, 37, "Output",ExpressionUUID->"9095e0c5-3f60-41f2-b8a3-023c1dab5212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148399, 3665, 233, 5, 22, "Input",ExpressionUUID->"79de83d1-de7c-43de-88f9-1ce5a6fbf668"],
Cell[148635, 3672, 410, 9, 22, "Message",ExpressionUUID->"76aea88a-240c-418f-9849-e1625336c3de"],
Cell[149048, 3683, 760, 16, 26, "Output",ExpressionUUID->"1d01bcf5-bfd6-4b8f-896e-8df243ff92ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149845, 3704, 206, 4, 22, "Input",ExpressionUUID->"18f18487-e1e7-4fd6-9093-16925403fbbb"],
Cell[150054, 3710, 175, 3, 36, "Output",ExpressionUUID->"f7e32377-825e-4440-bd59-9bc13aa5f09c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150266, 3718, 231, 5, 22, "Input",ExpressionUUID->"2a1ac654-aae0-4103-a890-c2f7f0fa0c09"],
Cell[150500, 3725, 189, 3, 36, "Output",ExpressionUUID->"a8ef35f1-a3e0-4c5c-81d5-74e6f5d85353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150726, 3733, 212, 4, 22, "Input",ExpressionUUID->"4a767926-11bf-4f89-96ab-e6deeb6059df"],
Cell[150941, 3739, 175, 3, 36, "Output",ExpressionUUID->"4b306878-2485-4233-b0ca-42eba47ae7ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151153, 3747, 233, 5, 22, "Input",ExpressionUUID->"2e139e93-1a9e-437b-8fa4-c0cd75a4da99"],
Cell[151389, 3754, 407, 9, 22, "Message",ExpressionUUID->"2e2a1f78-4151-48f2-a545-20ddbbee9b59"],
Cell[151799, 3765, 788, 17, 26, "Output",ExpressionUUID->"d9c10223-3e7a-40be-b843-fde9b792f2fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152624, 3787, 208, 4, 22, "Input",ExpressionUUID->"ff1aa6a2-0369-41ad-95da-24f9fd98dc0b"],
Cell[152835, 3793, 311, 6, 36, "Output",ExpressionUUID->"f9b962ee-ea10-4160-b552-64ba061c38e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153183, 3804, 211, 4, 22, "Input",ExpressionUUID->"d0d3c869-1330-4fcd-bfd0-fcac5cf793e0"],
Cell[153397, 3810, 410, 8, 37, "Output",ExpressionUUID->"5453d512-e557-4bf0-9548-a7b0a744aa84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153844, 3823, 261, 5, 22, "Input",ExpressionUUID->"efd78609-2a6c-44cd-ac58-8840218221e8"],
Cell[154108, 3830, 303, 7, 36, "Output",ExpressionUUID->"159f6e22-5f11-44e3-b14a-7e3395947322"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154448, 3842, 214, 4, 22, "Input",ExpressionUUID->"ded78de4-9405-4a08-b119-b5c86b444c66"],
Cell[154665, 3848, 675, 14, 38, "Output",ExpressionUUID->"3ff1f20e-1125-4e40-b2f7-55bb8c3654bd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155389, 3868, 163, 3, 41, "Subsection",ExpressionUUID->"5216b30e-7c93-496d-b29f-7299eb2c1912"],
Cell[CellGroupData[{
Cell[155577, 3875, 467, 12, 22, "Input",ExpressionUUID->"bf14ae5f-0d2f-4c1b-9c06-1dbf5d98676b"],
Cell[156047, 3889, 501, 12, 36, "Output",ExpressionUUID->"866ce9fd-ee32-446c-895b-81655c0c3756"]
}, Open  ]],
Cell[156563, 3904, 325, 7, 27, "Text",ExpressionUUID->"50b4ecf4-4ff0-48fc-8be5-b0e888dc9106"],
Cell[CellGroupData[{
Cell[156913, 3915, 211, 4, 22, "Input",ExpressionUUID->"6fdcac13-6e22-48dc-951f-f7eb65fd9552"],
Cell[157127, 3921, 741, 23, 36, "Output",ExpressionUUID->"6c90bd43-32fc-484a-9943-d80685892cef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157905, 3949, 209, 4, 22, "Input",ExpressionUUID->"bf70d324-f066-4a72-9352-4ece4cb8b19f"],
Cell[158117, 3955, 13592, 351, 197, "Output",ExpressionUUID->"9f829e3f-f3a9-46b0-b014-f51b2afa27bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171746, 4311, 229, 5, 22, "Input",ExpressionUUID->"83ef052e-c99e-43d6-9214-b960c216c11c"],
Cell[171978, 4318, 203, 4, 36, "Output",ExpressionUUID->"bc2fdeef-aef3-417a-9d90-847a46dc031d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172218, 4327, 233, 5, 22, "Input",ExpressionUUID->"7893f3db-fb00-4c76-b79f-785c2b579967"],
Cell[172454, 4334, 253, 6, 36, "Output",ExpressionUUID->"5869749d-b962-45a9-9602-af0a438bedbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172744, 4345, 304, 7, 22, "Input",ExpressionUUID->"6e1f82bb-3fbf-40d1-ac12-0e3eba93858e"],
Cell[173051, 4354, 227, 5, 36, "Output",ExpressionUUID->"4ec625ae-528d-4c9b-9da8-5f265119caf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173315, 4364, 263, 6, 22, "Input",ExpressionUUID->"def0f6da-02e4-44bb-bfb3-a7c950155d0e"],
Cell[173581, 4372, 205, 4, 36, "Output",ExpressionUUID->"b8966531-2fde-4070-9ca0-8647c6b52501"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173823, 4381, 209, 4, 22, "Input",ExpressionUUID->"84a70ada-37a9-4720-b3af-02351663d362"],
Cell[174035, 4387, 175, 3, 36, "Output",ExpressionUUID->"5b5a087d-45e7-4a6a-adb6-7d3f8f8d664e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174259, 4396, 158, 3, 41, "Subsection",ExpressionUUID->"859e0c02-f94e-4ef5-8db6-d947361aebb8"],
Cell[CellGroupData[{
Cell[174442, 4403, 3836, 81, 114, "Input",ExpressionUUID->"8e40d8d2-4e5c-4295-8b85-5497404a2c7a"],
Cell[178281, 4486, 48658, 935, 267, "Output",ExpressionUUID->"6f0b1e0c-f7f0-437e-b548-10efd04e0b06"]
}, Open  ]],
Cell[226954, 5424, 301, 9, 27, "Text",ExpressionUUID->"d136684b-9af0-4956-94e4-0a35bd0daf3c"],
Cell[CellGroupData[{
Cell[227280, 5437, 270, 6, 22, "Input",ExpressionUUID->"6f9642e1-9f04-43f9-bc48-ae48047233d5"],
Cell[227553, 5445, 26606, 487, 59, "Output",ExpressionUUID->"18dee471-ed27-4d6c-9ff7-510b8f1e0a20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254196, 5937, 478, 12, 22, "Input",ExpressionUUID->"0f3da45b-a9ef-47e4-804a-73f129daed53"],
Cell[254677, 5951, 23039, 414, 184, "Output",ExpressionUUID->"9310318d-eaad-4799-a39b-d4ff1e19cd24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277753, 6370, 340, 9, 22, "Input",ExpressionUUID->"cda7b6c9-251f-46c0-a59a-56be84a3f951"],
Cell[278096, 6381, 34217, 639, 267, "Output",ExpressionUUID->"fbb031c1-9ec8-4e0a-bf06-ac05b6146a5f"]
}, Open  ]],
Cell[312328, 7023, 271, 6, 27, "Text",ExpressionUUID->"56c22222-5810-4d7e-a463-632a6f6070dc"],
Cell[CellGroupData[{
Cell[312624, 7033, 351, 8, 22, "Input",ExpressionUUID->"3f16a556-6a02-455c-996c-1e61ca87b573"],
Cell[312978, 7043, 169004, 3091, 625, "Output",ExpressionUUID->"e651ac81-8150-47ca-a4dc-45beea61872b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[482031, 10140, 182, 3, 41, "Subsection",ExpressionUUID->"a6172a5a-014e-4ce3-831a-75689d1cf160"],
Cell[482216, 10145, 322, 7, 27, "Text",ExpressionUUID->"83ee6888-aaf0-4113-a516-75888cda865e"],
Cell[482541, 10154, 232, 6, 27, "Text",ExpressionUUID->"f5f0dfd4-f121-4c7b-b9ce-39a97cca016b"],
Cell[CellGroupData[{
Cell[482798, 10164, 794, 23, 22, "Input",ExpressionUUID->"a89e73d8-df1f-4c94-984d-79fa3303c91b"],
Cell[483595, 10189, 10259, 215, 65, "Output",ExpressionUUID->"53f76b18-7064-4590-b832-b9601d56ae0a"]
}, Open  ]],
Cell[493869, 10407, 259, 6, 27, "Text",ExpressionUUID->"0ec401c6-5fe8-4e75-bde7-8029a9362996"],
Cell[CellGroupData[{
Cell[494153, 10417, 487, 13, 22, "Input",ExpressionUUID->"437a7f42-6e27-419f-9955-de180b810252"],
Cell[494643, 10432, 4578, 98, 65, "Output",ExpressionUUID->"5921871f-64d7-4c6d-b59f-4f73be706027"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499258, 10535, 490, 13, 24, "Input",ExpressionUUID->"f98a4b2c-184d-4019-be9f-fdcbd2afc0fa"],
Cell[499751, 10550, 16662, 276, 319, "Output",ExpressionUUID->"15d538a4-a751-4925-be9e-d669e28d9050"]
}, Open  ]],
Cell[516428, 10829, 178, 3, 27, "Text",ExpressionUUID->"2fe1eedd-1473-4af8-b8db-23cabb588dba"],
Cell[CellGroupData[{
Cell[516631, 10836, 439, 13, 22, "Input",ExpressionUUID->"f4476b58-fd68-4263-a661-d6d3c05e2eb1"],
Cell[517073, 10851, 6192, 170, 238, "Output",ExpressionUUID->"20c3c844-805f-4c16-b257-5e1d2da35efe"]
}, Open  ]],
Cell[523280, 11024, 258, 6, 27, "Text",ExpressionUUID->"8276585c-dee1-4673-8d81-2d674b4650dd"],
Cell[CellGroupData[{
Cell[523563, 11034, 284, 5, 22, "Input",ExpressionUUID->"8c7b53a3-5e4c-4f39-96b5-49c158893440"],
Cell[523850, 11041, 8217, 186, 58, "Output",ExpressionUUID->"ea876883-dd4f-4906-9822-da9aa31eb064"]
}, Open  ]],
Cell[532082, 11230, 394, 8, 45, "Text",ExpressionUUID->"c8af6d6e-5cb3-48af-b58e-51af0456c942"],
Cell[CellGroupData[{
Cell[532501, 11242, 229, 5, 22, "Input",ExpressionUUID->"6bd759f0-170a-481c-a347-1e9dd8ea1831"],
Cell[532733, 11249, 321, 6, 36, "Output",ExpressionUUID->"1a2fca9e-9050-4c56-b258-ec367e407659"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533115, 11262, 152, 3, 50, "Section",ExpressionUUID->"c619872e-29c5-42c7-a094-9612ec375cc9"],
Cell[533270, 11267, 154, 3, 41, "Subsection",ExpressionUUID->"3b653633-ef90-4bbb-bc8c-d62441261a0f"],
Cell[533427, 11272, 152, 3, 30, "Subsection",ExpressionUUID->"398166f5-003f-4c68-8259-73e2564a48f2"],
Cell[533582, 11277, 153, 3, 30, "Subsection",ExpressionUUID->"cb3bb342-e3b7-451b-983d-dadb96dfb5f5"]
}, Open  ]]
}, Open  ]]
}
]
*)

